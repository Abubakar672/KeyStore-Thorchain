"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var std_tx_1 = require("./types/std-tx");
var api_1 = require("../../api");
var codec_1 = require("../../codec");
/**
 *
 * @param privKey
 * @param stdTx
 * @param accountNumber
 * @param sequence
 */
function signStdTx(sdk, privKey, stdTx, accountNumber, sequence) {
    var signBytes = stdTx.getSignBytes(sdk.chainID, accountNumber, sequence);
    var signature = {
        pub_key: privKey.getPubKey(),
        signature: privKey.sign(signBytes).toString("base64"),
    };
    var newStdTx = new std_tx_1.StdTx(stdTx.msg, stdTx.fee, stdTx.signatures ? __spreadArrays(stdTx.signatures, [signature]) : [signature], stdTx.memo);
    return newStdTx;
}
exports.signStdTx = signStdTx;
function accountsAddressGet(sdk, address) {
    return sdk
        .wrapResponseWithHeight(new api_1.AuthApi(undefined, sdk.url).authAccountsAddressGet(address.toBech32()))
        .then(function (res) {
        res.data.result = codec_1.codec.fromJSONString(JSON.stringify(res.data.result));
        return res;
    });
}
exports.accountsAddressGet = accountsAddressGet;
function txsDecodePost(sdk, req) {
    return new api_1.TransactionsApi(undefined, sdk.url)
        .txsDecodePost(req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.txsDecodePost = txsDecodePost;
function txsEncodePost(sdk, req) {
    return new api_1.TransactionsApi(undefined, sdk.url)
        .txsEncodePost(req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.txsEncodePost = txsEncodePost;
function txsGet(sdk, messageAction, messageSender, page, limit, txMinHeight, txMaxHeight) {
    return new api_1.TransactionsApi(undefined, sdk.url).txsGet(messageAction, messageSender, page, limit, txMinHeight, txMaxHeight);
}
exports.txsGet = txsGet;
function txsHashGet(sdk, hash) {
    return new api_1.TransactionsApi(undefined, sdk.url).txsHashGet(hash);
}
exports.txsHashGet = txsHashGet;
function txsPost(sdk, tx, mode) {
    return new api_1.TransactionsApi(undefined, sdk.url).txsPost({
        tx: JSON.parse(codec_1.codec.toJSONString(tx)).value,
        mode: mode,
    });
}
exports.txsPost = txsPost;
