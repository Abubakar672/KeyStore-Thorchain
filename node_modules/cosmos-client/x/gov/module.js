"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var api_1 = require("../../api");
var codec_1 = require("../../codec");
function parametersDepositGet(sdk) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govParametersDepositGet());
}
exports.parametersDepositGet = parametersDepositGet;
function parametersTallyingGet(sdk) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govParametersTallyingGet());
}
exports.parametersTallyingGet = parametersTallyingGet;
function parametersVotingGet(sdk) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govParametersVotingGet());
}
exports.parametersVotingGet = parametersVotingGet;
function proposalsGet(sdk, voter, depositor, status) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsGet(voter === null || voter === void 0 ? void 0 : voter.toBech32(), depositor === null || depositor === void 0 ? void 0 : depositor.toBech32(), status));
}
exports.proposalsGet = proposalsGet;
function proposalsParamChangePost(sdk, req) {
    return new api_1.GovernanceApi(undefined, sdk.url)
        .govProposalsParamChangePost(req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.proposalsParamChangePost = proposalsParamChangePost;
function proposalsPost(sdk, req) {
    return new api_1.GovernanceApi(undefined, sdk.url)
        .govProposalsPost(req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.proposalsPost = proposalsPost;
function proposalsProposalIdDepositsDepositorGet(sdk, proposalID, depositor) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdDepositsDepositorGet(proposalID, depositor.toBech32()));
}
exports.proposalsProposalIdDepositsDepositorGet = proposalsProposalIdDepositsDepositorGet;
function proposalsProposalIdDepositsGet(sdk, proposalID) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdDepositsGet(proposalID));
}
exports.proposalsProposalIdDepositsGet = proposalsProposalIdDepositsGet;
function proposalsProposalIdDepositsPost(sdk, proposalID, req) {
    return new api_1.GovernanceApi(undefined, sdk.url)
        .govProposalsProposalIdDepositsPost(proposalID, req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.proposalsProposalIdDepositsPost = proposalsProposalIdDepositsPost;
function proposalsProposalIdGet(sdk, proposalID) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdGet(proposalID));
}
exports.proposalsProposalIdGet = proposalsProposalIdGet;
function proposalsProposalIdProposerGet(sdk, proposalID) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdProposerGet(proposalID));
}
exports.proposalsProposalIdProposerGet = proposalsProposalIdProposerGet;
function proposalsProposalIdTallyGet(sdk, proposalID) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdTallyGet(proposalID));
}
exports.proposalsProposalIdTallyGet = proposalsProposalIdTallyGet;
function proposalsProposalIdVotesGet(sdk, proposalID) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdVotesGet(proposalID));
}
exports.proposalsProposalIdVotesGet = proposalsProposalIdVotesGet;
function proposalsProposalIdVotesPost(sdk, proposalID, req) {
    return new api_1.GovernanceApi(undefined, sdk.url)
        .govProposalsProposalIdVotesPost(proposalID, req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.proposalsProposalIdVotesPost = proposalsProposalIdVotesPost;
function proposalsProposalIdVotesVoterGet(sdk, proposalID, voter) {
    return sdk.wrapResponseWithHeight(new api_1.GovernanceApi(undefined, sdk.url).govProposalsProposalIdVotesVoterGet(proposalID, voter.toBech32()));
}
exports.proposalsProposalIdVotesVoterGet = proposalsProposalIdVotesVoterGet;
