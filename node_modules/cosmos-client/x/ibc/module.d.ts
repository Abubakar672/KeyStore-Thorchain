import { CosmosSDK } from "../../cosmos-sdk";
import { ChannelOpenInitReq, ChannelOpenTryReq, SubmitMisbehaviourReq, UpdateClientReq, CreateClientReq, ConnectionOpenAckReq, ConnectionOpenConfirmReq, ConnectionOpenInitReq, ConnectionOpenTryReq, ReceivedPacketReq, ChannelCloseConfirmReq, ChannelCloseInitReq, ChannelOpenAckReq, ChannelOpenConfirmReq, TransferTokenReq } from "../../api";
import { StdTx } from "../auth";
import { AxiosPromise } from "axios";
export declare function channelsOpenInitPost(sdk: CosmosSDK, channelOpenInitRequestBody: ChannelOpenInitReq): AxiosPromise<import("../../api").StdTx>;
export declare function channelsOpenTryPost(sdk: CosmosSDK, req: ChannelOpenTryReq): AxiosPromise<import("../../api").StdTx>;
export declare function clientsClientIdClientStateGet(sdk: CosmosSDK, clientID: string, prove?: boolean): AxiosPromise<import("../../api").InlineResponse20010>;
export declare function clientsClientIdConnectionsGet(sdk: CosmosSDK, clientID: string, prove?: boolean): AxiosPromise<import("../../api").ClientConnectionsResponse>;
export declare function clientsClientIdConsensusStateGet(sdk: CosmosSDK, clientID: string, prove?: boolean): AxiosPromise<import("../../api").InlineResponse2009>;
export declare function clientsClientIdMisbehaviourPost(sdk: CosmosSDK, clientID: string, req: SubmitMisbehaviourReq): AxiosPromise<StdTx>;
export declare function clientsClientIdRootsHeightGet(sdk: CosmosSDK, clientID: string, height: number, prove?: boolean): AxiosPromise<import("../../api").InlineResponse20011>;
export declare function clientsClientIdUpdatePost(sdk: CosmosSDK, clientID: string, req: UpdateClientReq): AxiosPromise<StdTx>;
export declare function clientsPost(sdk: CosmosSDK, req: CreateClientReq): AxiosPromise<StdTx>;
export declare function connectionsConnectionIdGet(sdk: CosmosSDK, connectionID: string, prove?: boolean): AxiosPromise<import("../../api").ConnectionResponse>;
export declare function connectionsConnectionIdOpenAckPost(sdk: CosmosSDK, connectionID: string, req: ConnectionOpenAckReq): AxiosPromise<StdTx>;
export declare function connectionsConnectionIdOpenConfirmPost(sdk: CosmosSDK, connectionID: string, req: ConnectionOpenConfirmReq): AxiosPromise<StdTx>;
export declare function connectionsOpenInitPost(sdk: CosmosSDK, req: ConnectionOpenInitReq): AxiosPromise<StdTx>;
export declare function connectionsOpenTryPost(sdk: CosmosSDK, req: ConnectionOpenTryReq): AxiosPromise<StdTx>;
export declare function headerGet(sdk: CosmosSDK): AxiosPromise<import("../../api").Header>;
export declare function nodeStateGet(sdk: CosmosSDK): AxiosPromise<import("../../api").ConsensusState>;
export declare function packetsReceivePost(sdk: CosmosSDK, req: ReceivedPacketReq): AxiosPromise<StdTx>;
export declare function pathGet(sdk: CosmosSDK): AxiosPromise<string>;
export declare function portsPortIdChannelsChannelIdCloseConfirmPost(sdk: CosmosSDK, portID: string, channelID: string, req: ChannelCloseConfirmReq): AxiosPromise<StdTx>;
export declare function portsPortIdChannelsChannelIdCloseInitPost(sdk: CosmosSDK, portID: string, channelID: string, req: ChannelCloseInitReq): AxiosPromise<StdTx>;
export declare function portsPortIdChannelsChannelIdGet(sdk: CosmosSDK, portID: string, channelID: string, prove?: boolean): AxiosPromise<import("../../api").ChannelResponse>;
export declare function portsPortIdChannelsChannelIdNextSequenceRecvGet(sdk: CosmosSDK, portID: string, channelID: string): AxiosPromise<number>;
export declare function portsPortIdChannelsChannelIdOpenAckPost(sdk: CosmosSDK, portID: string, channelID: string, req: ChannelOpenAckReq): AxiosPromise<StdTx>;
export declare function portsPortIdChannelsChannelIdOpenConfirmPost(sdk: CosmosSDK, portID: string, channelID: string, req: ChannelOpenConfirmReq): AxiosPromise<StdTx>;
export declare function portsPortIdChannelsChannelIdTransferPost(sdk: CosmosSDK, portID: string, channelID: string, req: TransferTokenReq): AxiosPromise<StdTx>;
