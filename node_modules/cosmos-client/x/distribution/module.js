"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var api_1 = require("../../api");
var codec_1 = require("../../codec");
function communityPoolGet(sdk) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionCommunityPoolGet());
}
exports.communityPoolGet = communityPoolGet;
function delegatorsDelegatorAddrRewardsGet(sdk, delegator) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionDelegatorsDelegatorAddrRewardsGet(delegator.toBech32()));
}
exports.delegatorsDelegatorAddrRewardsGet = delegatorsDelegatorAddrRewardsGet;
function delegatorsDelegatorAddrRewardsPost(sdk, delegator, req) {
    return new api_1.DistributionApi(undefined, sdk.url)
        .distributionDelegatorsDelegatorAddrRewardsPost(delegator.toBech32(), req)
        .then(function (res) {
        return codec_1.codec.fromJSONString(JSON.stringify(res.data));
    });
}
exports.delegatorsDelegatorAddrRewardsPost = delegatorsDelegatorAddrRewardsPost;
function delegatorsDelegatorAddrRewardsValidatorAddrGet(sdk, delegator, validator) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionDelegatorsDelegatorAddrRewardsValidatorAddrGet(delegator.toBech32(), validator.toBech32()));
}
exports.delegatorsDelegatorAddrRewardsValidatorAddrGet = delegatorsDelegatorAddrRewardsValidatorAddrGet;
function delegatorsDelegatorAddrRewardsValidatorAddrPost(sdk, delegator, validator, req) {
    return new api_1.DistributionApi(undefined, sdk.url)
        .distributionDelegatorsDelegatorAddrRewardsValidatorAddrPost(delegator.toBech32(), validator.toBech32(), req)
        .then(function (res) {
        return codec_1.codec.fromJSONString(JSON.stringify(res.data));
    });
}
exports.delegatorsDelegatorAddrRewardsValidatorAddrPost = delegatorsDelegatorAddrRewardsValidatorAddrPost;
function delegatorsDelegatorAddrWithdrawAddressGet(sdk, delegator) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionDelegatorsDelegatorAddrWithdrawAddressGet(delegator.toBech32()));
}
exports.delegatorsDelegatorAddrWithdrawAddressGet = delegatorsDelegatorAddrWithdrawAddressGet;
function delegatorsDelegatorAddrWithdrawAddressPost(sdk, delegator, req) {
    return new api_1.DistributionApi(undefined, sdk.url)
        .distributionDelegatorsDelegatorAddrWithdrawAddressPost(delegator.toBech32(), req)
        .then(function (res) {
        return codec_1.codec.fromJSONString(JSON.stringify(res.data));
    });
}
exports.delegatorsDelegatorAddrWithdrawAddressPost = delegatorsDelegatorAddrWithdrawAddressPost;
function parametersGet(sdk) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionParametersGet());
}
exports.parametersGet = parametersGet;
function validatorsValidatorAddrGet(sdk, validator) {
    return new api_1.DistributionApi(undefined, sdk.url)
        .distributionValidatorsValidatorAddrGet(validator.toBech32())
        .then(function (res) {
        return codec_1.codec.fromJSONString(JSON.stringify(res.data));
    });
}
exports.validatorsValidatorAddrGet = validatorsValidatorAddrGet;
function validatorsValidatorAddrOutstandingRewardsGet(sdk, validator) {
    return sdk.wrapResponseWithHeight(sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionValidatorsValidatorAddrOutstandingRewardsGet(validator.toBech32())));
}
exports.validatorsValidatorAddrOutstandingRewardsGet = validatorsValidatorAddrOutstandingRewardsGet;
function validatorsValidatorAddrRewardsGet(sdk, validator) {
    return sdk.wrapResponseWithHeight(new api_1.DistributionApi(undefined, sdk.url).distributionValidatorsValidatorAddrRewardsGet(validator.toBech32()));
}
exports.validatorsValidatorAddrRewardsGet = validatorsValidatorAddrRewardsGet;
function validatorsValidatorAddrRewardsPost(sdk, validator, req) {
    return new api_1.DistributionApi(undefined, sdk.url)
        .distributionValidatorsValidatorAddrRewardsPost(validator.toBech32(), req)
        .then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.validatorsValidatorAddrRewardsPost = validatorsValidatorAddrRewardsPost;
