"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = __importDefault(require("axios"));
var codec_1 = require("../../codec");
function supplyDenomGet(sdk, denom) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/nft/supply/" + denom));
}
exports.supplyDenomGet = supplyDenomGet;
function ownerDelegatorAddrGet(sdk, delegatorAddress) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/nft/owner/" + delegatorAddress.toBech32()));
}
exports.ownerDelegatorAddrGet = ownerDelegatorAddrGet;
function ownerDelegatorAddrCollectionDenomGet(sdk, delegatorAddress, denom) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/nft/owner/" + delegatorAddress.toBech32() + "/collection/" + denom));
}
exports.ownerDelegatorAddrCollectionDenomGet = ownerDelegatorAddrCollectionDenomGet;
function collectionDenomGet(sdk, denom) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/nft/collection/" + denom));
}
exports.collectionDenomGet = collectionDenomGet;
function DenomsGet(sdk) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/nft/denoms"));
}
exports.DenomsGet = DenomsGet;
function collectionDenomNftIdGet(sdk, denom, id) {
    return sdk.wrapResponseWithHeight(axios_1.default.get(sdk.url + "/collection/" + denom + "/nft/" + id));
}
exports.collectionDenomNftIdGet = collectionDenomNftIdGet;
function mintPost(sdk, req) {
    return axios_1.default.post(sdk.url + "/nfts/mint", req).then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.mintPost = mintPost;
function transferPost(sdk, req) {
    return axios_1.default.post(sdk.url + "/nfts/transfer", req).then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.transferPost = transferPost;
function collectionDenomNftIdMetadataPut(sdk, req) {
    return axios_1.default.put(sdk.url + "/nfts/collection/" + req.denom + "/nft/" + req.id + "/metadata", req).then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.collectionDenomNftIdMetadataPut = collectionDenomNftIdMetadataPut;
function collectionDenomNftIdBurnPut(sdk, req) {
    return axios_1.default.put(sdk.url + "/nfts/collection/" + req.denom + "/nft/" + req.id + "/burn", req).then(function (res) {
        res.data = codec_1.codec.fromJSONString(JSON.stringify(res.data));
        return res;
    });
}
exports.collectionDenomNftIdBurnPut = collectionDenomNftIdBurnPut;
