import BigNumber from 'bignumber.js';
import { Denomination, AssetAmount, BaseAmount, Amounts } from './types';
/**
 * Number of asset decimals - e.g. any of Binance chain assets
 * For example:
 * RUNE has a maximum of 8 digits of decimal
 * 0.00000001 RUNE == 1 รฐ (tor)
 * */
export declare const ASSET_DECIMAL = 8;
/**
 * Base number of assets - e.g. any of Binance chain assets
 * For example:
 * The amount of RUNE is boosted by 1e8 for decimal part
 * 1 RUNE == 100,000,000 รฐ (tor)
 */
export declare const BASE_NUMBER: number;
/**
 * Factory to create any values of assets (e.g. RUNE)
 * If the value is undefined, 0 is returned
 * */
export declare const assetAmount: (value?: string | number | BigNumber | undefined, decimal?: number) => {
    type: Denomination.ASSET;
    amount: () => BigNumber;
};
/**
 * Factory to create base amounts (e.g. tor)
 * If the value is undefined, 0 is returned
 * */
export declare const baseAmount: (value?: string | number | BigNumber | undefined) => {
    type: Denomination.BASE;
    amount: () => BigNumber;
};
/**
 * Helper to convert values for a asset from base values (e.g. RUNE from tor)
 * */
export declare const baseToAsset: (base: BaseAmount, decimal?: number) => AssetAmount;
/**
 * Helper to convert asset to base values (e.g. tor -> RUNE)
 * */
export declare const assetToBase: (asset: AssetAmount) => BaseAmount;
/**
 * Guard to check whether value is an amount of asset or not
 * */
export declare const isAssetAmount: (v: Amounts) => v is {
    type: Denomination.ASSET;
    amount: () => BigNumber;
};
/**
 * Guard to check whether value is an amount of a base value or not
 * */
export declare const isBaseAmount: (v: Amounts) => v is {
    type: Denomination.BASE;
    amount: () => BigNumber;
};
/**
 * Formats a asset value in a user friendly way,
 * depending on given decimal places
 */
export declare const formatAssetAmount: (asset: AssetAmount, decimal?: number) => string;
/**
 * Formats a asset value by prefixing it with `$`
 */
export declare const formatAssetAmountCurrency: (asset: AssetAmount, ticker?: string | undefined) => string;
/**
 * Format a base value as a asset in a user friendly way,
 * depending on given decimal places
 */
export declare const formatBaseAsAssetAmount: (base: BaseAmount, decimal?: number) => string;
