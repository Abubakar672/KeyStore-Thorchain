{"ast":null,"code":"// {signature}\nvar bscript = require('../../script');\n\nvar typeforce = require('typeforce');\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 1 && bscript.isCanonicalSignature(chunks[0]);\n}\n\ncheck.toJSON = function () {\n  return 'pubKey input';\n};\n\nfunction encodeStack(signature) {\n  typeforce(bscript.isCanonicalSignature, signature);\n  return [signature];\n}\n\nfunction encode(signature) {\n  return bscript.compile(encodeStack(signature));\n}\n\nfunction decodeStack(stack) {\n  typeforce(typeforce.Array, stack);\n  typeforce(check, stack);\n  return stack[0];\n}\n\nfunction decode(buffer) {\n  var stack = bscript.decompile(buffer);\n  return decodeStack(stack);\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@psf/bitcoincashjs-lib/src/templates/pubkey/input.js"],"names":["bscript","require","typeforce","check","script","chunks","decompile","length","isCanonicalSignature","toJSON","encodeStack","signature","encode","compile","decodeStack","stack","Array","decode","buffer","module","exports"],"mappings":"AAAA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASE,KAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,MAAM,GAAGL,OAAO,CAACM,SAAR,CAAkBF,MAAlB,CAAb;AAEA,SAAOC,MAAM,CAACE,MAAP,KAAkB,CAAlB,IACLP,OAAO,CAACQ,oBAAR,CAA6BH,MAAM,CAAC,CAAD,CAAnC,CADF;AAED;;AACDF,KAAK,CAACM,MAAN,GAAe,YAAY;AAAE,SAAO,cAAP;AAAuB,CAApD;;AAEA,SAASC,WAAT,CAAsBC,SAAtB,EAAiC;AAC/BT,EAAAA,SAAS,CAACF,OAAO,CAACQ,oBAAT,EAA+BG,SAA/B,CAAT;AACA,SAAO,CAACA,SAAD,CAAP;AACD;;AAED,SAASC,MAAT,CAAiBD,SAAjB,EAA4B;AAC1B,SAAOX,OAAO,CAACa,OAAR,CAAgBH,WAAW,CAACC,SAAD,CAA3B,CAAP;AACD;;AAED,SAASG,WAAT,CAAsBC,KAAtB,EAA6B;AAC3Bb,EAAAA,SAAS,CAACA,SAAS,CAACc,KAAX,EAAkBD,KAAlB,CAAT;AACAb,EAAAA,SAAS,CAACC,KAAD,EAAQY,KAAR,CAAT;AACA,SAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;;AAED,SAASE,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAIH,KAAK,GAAGf,OAAO,CAACM,SAAR,CAAkBY,MAAlB,CAAZ;AACA,SAAOJ,WAAW,CAACC,KAAD,CAAlB;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,KAAK,EAAEA,KADQ;AAEfc,EAAAA,MAAM,EAAEA,MAFO;AAGfH,EAAAA,WAAW,EAAEA,WAHE;AAIfF,EAAAA,MAAM,EAAEA,MAJO;AAKfF,EAAAA,WAAW,EAAEA;AALE,CAAjB","sourcesContent":["// {signature}\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 1 &&\n    bscript.isCanonicalSignature(chunks[0])\n}\ncheck.toJSON = function () { return 'pubKey input' }\n\nfunction encodeStack (signature) {\n  typeforce(bscript.isCanonicalSignature, signature)\n  return [signature]\n}\n\nfunction encode (signature) {\n  return bscript.compile(encodeStack(signature))\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n  return stack[0]\n}\n\nfunction decode (buffer) {\n  var stack = bscript.decompile(buffer)\n  return decodeStack(stack)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n}\n"]},"metadata":{},"sourceType":"script"}