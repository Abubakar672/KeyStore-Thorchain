{"ast":null,"code":"import { OperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n  return function (source, subscriber) {\n    var hasState = hasSeed;\n    var state = seed;\n    var index = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var i = index++;\n      state = hasState ? accumulator(state, value, i) : (hasState = true, value);\n      emitOnNext && subscriber.next(state);\n    }, emitBeforeComplete && function () {\n      hasState && subscriber.next(state);\n      subscriber.complete();\n    }));\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/operators/scanInternals.ts"],"names":[],"mappings":"AAEA,SAAS,kBAAT,QAAmC,sBAAnC;AAWA,OAAM,SAAU,aAAV,CACJ,WADI,EAEJ,IAFI,EAGJ,OAHI,EAIJ,UAJI,EAKJ,kBALI,EAKiC;AAErC,SAAO,UAAC,MAAD,EAAwB,UAAxB,EAAmD;AAIxD,QAAI,QAAQ,GAAG,OAAf;AAIA,QAAI,KAAK,GAAQ,IAAjB;AAEA,QAAI,KAAK,GAAG,CAAZ;AAGA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,KAAD,EAAM;AAEJ,UAAM,CAAC,GAAG,KAAK,EAAf;AAEA,MAAA,KAAK,GAAG,QAAQ,GAEZ,WAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,CAAf,CAFC,IAMV,QAAQ,GAAG,IAAZ,EAAmB,KANR,CAAhB;AASA,MAAA,UAAU,IAAI,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAd;AACD,KAhBH,EAmBE,kBAAkB,IACf,YAAA;AACC,MAAA,QAAQ,IAAI,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAZ;AACA,MAAA,UAAU,CAAC,QAAX;AACD,KAvBL,CADF;AA2BD,GAxCD;AAyCD","sourceRoot":"","sourcesContent":["import { OperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return function (source, subscriber) {\n        var hasState = hasSeed;\n        var state = seed;\n        var index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (function () {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n//# sourceMappingURL=scanInternals.js.map"]},"metadata":{},"sourceType":"module"}