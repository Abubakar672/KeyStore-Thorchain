{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"./is/undefined.js\";\nimport { stringify } from \"./stringify.js\";\n\nfunction defaultGetId() {\n  return 'none';\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function memoize(fn, {\n  getInstanceId = defaultGetId\n} = {}) {\n  const cache = {};\n\n  const memoized = (...args) => {\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n\n    if (!cache[instanceId]) {\n      cache[instanceId] = {};\n    }\n\n    if (isUndefined(cache[instanceId][stringParams])) {\n      cache[instanceId][stringParams] = fn(...args);\n    }\n\n    return cache[instanceId][stringParams];\n  };\n\n  memoized.unmemoize = (...args) => {\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n\n    if (cache[instanceId] && !isUndefined(cache[instanceId][stringParams])) {\n      delete cache[instanceId][stringParams];\n    }\n  };\n\n  return memoized;\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/memoize.js"],"names":["isUndefined","stringify","defaultGetId","memoize","fn","getInstanceId","cache","memoized","args","stringParams","instanceId","unmemoize"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,YAAT,GAAwB;AACtB,SAAO,MAAP;AACD,C,CAAC;;;AAGF,OAAO,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAC1BC,EAAAA,aAAa,GAAGH;AADU,IAExB,EAFG,EAEC;AACN,QAAMI,KAAK,GAAG,EAAd;;AAEA,QAAMC,QAAQ,GAAG,CAAC,GAAGC,IAAJ,KAAa;AAC5B,UAAMC,YAAY,GAAGR,SAAS,CAACO,IAAD,CAA9B;AACA,UAAME,UAAU,GAAGL,aAAa,EAAhC;;AAEA,QAAI,CAACC,KAAK,CAACI,UAAD,CAAV,EAAwB;AACtBJ,MAAAA,KAAK,CAACI,UAAD,CAAL,GAAoB,EAApB;AACD;;AAED,QAAIV,WAAW,CAACM,KAAK,CAACI,UAAD,CAAL,CAAkBD,YAAlB,CAAD,CAAf,EAAkD;AAChDH,MAAAA,KAAK,CAACI,UAAD,CAAL,CAAkBD,YAAlB,IAAkCL,EAAE,CAAC,GAAGI,IAAJ,CAApC;AACD;;AAED,WAAOF,KAAK,CAACI,UAAD,CAAL,CAAkBD,YAAlB,CAAP;AACD,GAbD;;AAeAF,EAAAA,QAAQ,CAACI,SAAT,GAAqB,CAAC,GAAGH,IAAJ,KAAa;AAChC,UAAMC,YAAY,GAAGR,SAAS,CAACO,IAAD,CAA9B;AACA,UAAME,UAAU,GAAGL,aAAa,EAAhC;;AAEA,QAAIC,KAAK,CAACI,UAAD,CAAL,IAAqB,CAACV,WAAW,CAACM,KAAK,CAACI,UAAD,CAAL,CAAkBD,YAAlB,CAAD,CAArC,EAAwE;AACtE,aAAOH,KAAK,CAACI,UAAD,CAAL,CAAkBD,YAAlB,CAAP;AACD;AACF,GAPD;;AASA,SAAOF,QAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"./is/undefined.js\";\nimport { stringify } from \"./stringify.js\";\n\nfunction defaultGetId() {\n  return 'none';\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function memoize(fn, {\n  getInstanceId = defaultGetId\n} = {}) {\n  const cache = {};\n\n  const memoized = (...args) => {\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n\n    if (!cache[instanceId]) {\n      cache[instanceId] = {};\n    }\n\n    if (isUndefined(cache[instanceId][stringParams])) {\n      cache[instanceId][stringParams] = fn(...args);\n    }\n\n    return cache[instanceId][stringParams];\n  };\n\n  memoized.unmemoize = (...args) => {\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n\n    if (cache[instanceId] && !isUndefined(cache[instanceId][stringParams])) {\n      delete cache[instanceId][stringParams];\n    }\n  };\n\n  return memoized;\n}"]},"metadata":{},"sourceType":"module"}