{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getHeader: {\n      alias: ['chain_getHead'],\n      description: 'Retrieves the header for a specific block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Header'\n    },\n    getBlock: {\n      description: 'Get header and body of a relay chain block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'SignedBlock'\n    },\n    getBlockHash: {\n      description: 'Get the block hash for a specific block',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber',\n        isOptional: true\n      }],\n      type: 'BlockHash'\n    },\n    getFinalizedHead: {\n      alias: ['chain_getFinalisedHead'],\n      description: 'Get hash of the last finalized block in the canon chain',\n      params: [],\n      type: 'BlockHash'\n    },\n    subscribeNewHeads: {\n      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n      description: 'Retrieves the best header via subscription',\n      params: [],\n      // NOTE These still has the aliassed version, compatible with 1.x\n      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n      type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n      description: 'Retrieves the best finalized header via subscription',\n      params: [],\n      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n      type: 'Header'\n    },\n    subscribeAllHeads: {\n      description: 'Retrieves the newest header via subscription',\n      params: [],\n      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n      type: 'Header'\n    }\n  },\n  types: {\n    BlockHash: 'Hash'\n  }\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/chain/definitions.js"],"names":["rpc","getHeader","alias","description","params","name","type","isHistoric","isOptional","getBlock","getBlockHash","getFinalizedHead","subscribeNewHeads","pubsub","subscribeFinalizedHeads","subscribeAllHeads","types","BlockHash"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,eAAe;AACbA,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,CAAC,eAAD,CADE;AAETC,MAAAA,WAAW,EAAE,2CAFJ;AAGTC,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,IAAI,EAAE,WAFC;AAGPC,QAAAA,UAAU,EAAE,IAHL;AAIPC,QAAAA,UAAU,EAAE;AAJL,OAAD,CAHC;AASTF,MAAAA,IAAI,EAAE;AATG,KADR;AAYHG,IAAAA,QAAQ,EAAE;AACRN,MAAAA,WAAW,EAAE,4CADL;AAERC,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,IAAI,EAAE,WAFC;AAGPC,QAAAA,UAAU,EAAE,IAHL;AAIPC,QAAAA,UAAU,EAAE;AAJL,OAAD,CAFA;AAQRF,MAAAA,IAAI,EAAE;AARE,KAZP;AAsBHI,IAAAA,YAAY,EAAE;AACZP,MAAAA,WAAW,EAAE,yCADD;AAEZC,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,IAAI,EAAE,aAFC;AAGPE,QAAAA,UAAU,EAAE;AAHL,OAAD,CAFI;AAOZF,MAAAA,IAAI,EAAE;AAPM,KAtBX;AA+BHK,IAAAA,gBAAgB,EAAE;AAChBT,MAAAA,KAAK,EAAE,CAAC,wBAAD,CADS;AAEhBC,MAAAA,WAAW,EAAE,yDAFG;AAGhBC,MAAAA,MAAM,EAAE,EAHQ;AAIhBE,MAAAA,IAAI,EAAE;AAJU,KA/Bf;AAqCHM,IAAAA,iBAAiB,EAAE;AACjBV,MAAAA,KAAK,EAAE,CAAC,2BAAD,EAA8B,mBAA9B,EAAmD,qBAAnD,CADU;AAEjBC,MAAAA,WAAW,EAAE,4CAFI;AAGjBC,MAAAA,MAAM,EAAE,EAHS;AAIjB;AACAS,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,kBAAZ,EAAgC,oBAAhC,CALS;AAMjBP,MAAAA,IAAI,EAAE;AANW,KArChB;AA6CHQ,IAAAA,uBAAuB,EAAE;AACvBZ,MAAAA,KAAK,EAAE,CAAC,+BAAD,EAAkC,iCAAlC,CADgB;AAEvBC,MAAAA,WAAW,EAAE,sDAFU;AAGvBC,MAAAA,MAAM,EAAE,EAHe;AAIvBS,MAAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,yBAAlB,EAA6C,2BAA7C,CAJe;AAKvBP,MAAAA,IAAI,EAAE;AALiB,KA7CtB;AAoDHS,IAAAA,iBAAiB,EAAE;AACjBZ,MAAAA,WAAW,EAAE,8CADI;AAEjBC,MAAAA,MAAM,EAAE,EAFS;AAGjBS,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,mBAAZ,EAAiC,qBAAjC,CAHS;AAIjBP,MAAAA,IAAI,EAAE;AAJW;AApDhB,GADQ;AA4DbU,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AA5DM,CAAf","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getHeader: {\n      alias: ['chain_getHead'],\n      description: 'Retrieves the header for a specific block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Header'\n    },\n    getBlock: {\n      description: 'Get header and body of a relay chain block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'SignedBlock'\n    },\n    getBlockHash: {\n      description: 'Get the block hash for a specific block',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber',\n        isOptional: true\n      }],\n      type: 'BlockHash'\n    },\n    getFinalizedHead: {\n      alias: ['chain_getFinalisedHead'],\n      description: 'Get hash of the last finalized block in the canon chain',\n      params: [],\n      type: 'BlockHash'\n    },\n    subscribeNewHeads: {\n      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n      description: 'Retrieves the best header via subscription',\n      params: [],\n      // NOTE These still has the aliassed version, compatible with 1.x\n      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n      type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n      description: 'Retrieves the best finalized header via subscription',\n      params: [],\n      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n      type: 'Header'\n    },\n    subscribeAllHeads: {\n      description: 'Retrieves the newest header via subscription',\n      params: [],\n      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n      type: 'Header'\n    }\n  },\n  types: {\n    BlockHash: 'Hash'\n  }\n};"]},"metadata":{},"sourceType":"module"}