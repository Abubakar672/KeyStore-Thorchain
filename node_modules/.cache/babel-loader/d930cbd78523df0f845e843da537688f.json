{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name fees\n * @returns An object containing the combined results of the storage queries for\n * all relevant fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.balances.fees(({ creationFee, transferFee }) => {\n *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);\n * });\n * ```\n */\n\nexport function fees(instanceId, api) {\n  return memo(instanceId, () => {\n    var _api$consts$balances, _api$consts$balances2, _api$consts$balances3, _api$consts$transacti, _api$consts$transacti2;\n\n    return of([// deprecated - remove\n    ((_api$consts$balances = api.consts.balances) === null || _api$consts$balances === void 0 ? void 0 : _api$consts$balances.creationFee) || api.registry.createType('Balance'), ((_api$consts$balances2 = api.consts.balances) === null || _api$consts$balances2 === void 0 ? void 0 : _api$consts$balances2.transferFee) || api.registry.createType('Balance'), // current\n    ((_api$consts$balances3 = api.consts.balances) === null || _api$consts$balances3 === void 0 ? void 0 : _api$consts$balances3.existentialDeposit) || api.registry.createType('Balance'), ((_api$consts$transacti = api.consts.transactionPayment) === null || _api$consts$transacti === void 0 ? void 0 : _api$consts$transacti.transactionBaseFee) || api.registry.createType('Balance'), ((_api$consts$transacti2 = api.consts.transactionPayment) === null || _api$consts$transacti2 === void 0 ? void 0 : _api$consts$transacti2.transactionByteFee) || api.registry.createType('Balance')]).pipe(map(([creationFee, transferFee, existentialDeposit, transactionBaseFee, transactionByteFee]) => ({\n      creationFee,\n      existentialDeposit,\n      transactionBaseFee,\n      transactionByteFee,\n      transferFee\n    })));\n  });\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/balances/fees.js"],"names":["map","of","memo","fees","instanceId","api","_api$consts$balances","_api$consts$balances2","_api$consts$balances3","_api$consts$transacti","_api$consts$transacti2","consts","balances","creationFee","registry","createType","transferFee","existentialDeposit","transactionPayment","transactionBaseFee","transactionByteFee","pipe"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,EAAcC,EAAd,QAAwB,MAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,IAAT,CAAcC,UAAd,EAA0BC,GAA1B,EAA+B;AACpC,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAM;AAC5B,QAAIE,oBAAJ,EAA0BC,qBAA1B,EAAiDC,qBAAjD,EAAwEC,qBAAxE,EAA+FC,sBAA/F;;AAEA,WAAOT,EAAE,CAAC,CAAC;AACX,KAAC,CAACK,oBAAoB,GAAGD,GAAG,CAACM,MAAJ,CAAWC,QAAnC,MAAiD,IAAjD,IAAyDN,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACO,WAA1H,KAA0IR,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CADhI,EACoK,CAAC,CAACR,qBAAqB,GAAGF,GAAG,CAACM,MAAJ,CAAWC,QAApC,MAAkD,IAAlD,IAA0DL,qBAAqB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACS,WAA7H,KAA6IX,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CADjT,EACqV;AAC/V,KAAC,CAACP,qBAAqB,GAAGH,GAAG,CAACM,MAAJ,CAAWC,QAApC,MAAkD,IAAlD,IAA0DJ,qBAAqB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACS,kBAA7H,KAAoJZ,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CAF1I,EAE8K,CAAC,CAACN,qBAAqB,GAAGJ,GAAG,CAACM,MAAJ,CAAWO,kBAApC,MAA4D,IAA5D,IAAoET,qBAAqB,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgHA,qBAAqB,CAACU,kBAAvI,KAA8Jd,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CAF5U,EAEgX,CAAC,CAACL,sBAAsB,GAAGL,GAAG,CAACM,MAAJ,CAAWO,kBAArC,MAA6D,IAA7D,IAAqER,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACU,kBAA1I,KAAiKf,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CAFjhB,CAAD,CAAF,CAEyjBM,IAFzjB,CAE8jBrB,GAAG,CAAC,CAAC,CAACa,WAAD,EAAcG,WAAd,EAA2BC,kBAA3B,EAA+CE,kBAA/C,EAAmEC,kBAAnE,CAAD,MAA6F;AACpqBP,MAAAA,WADoqB;AAEpqBI,MAAAA,kBAFoqB;AAGpqBE,MAAAA,kBAHoqB;AAIpqBC,MAAAA,kBAJoqB;AAKpqBJ,MAAAA;AALoqB,KAA7F,CAAD,CAFjkB,CAAP;AASD,GAZU,CAAX;AAaD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\";\n/**\n * @name fees\n * @returns An object containing the combined results of the storage queries for\n * all relevant fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.balances.fees(({ creationFee, transferFee }) => {\n *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);\n * });\n * ```\n */\n\nexport function fees(instanceId, api) {\n  return memo(instanceId, () => {\n    var _api$consts$balances, _api$consts$balances2, _api$consts$balances3, _api$consts$transacti, _api$consts$transacti2;\n\n    return of([// deprecated - remove\n    ((_api$consts$balances = api.consts.balances) === null || _api$consts$balances === void 0 ? void 0 : _api$consts$balances.creationFee) || api.registry.createType('Balance'), ((_api$consts$balances2 = api.consts.balances) === null || _api$consts$balances2 === void 0 ? void 0 : _api$consts$balances2.transferFee) || api.registry.createType('Balance'), // current\n    ((_api$consts$balances3 = api.consts.balances) === null || _api$consts$balances3 === void 0 ? void 0 : _api$consts$balances3.existentialDeposit) || api.registry.createType('Balance'), ((_api$consts$transacti = api.consts.transactionPayment) === null || _api$consts$transacti === void 0 ? void 0 : _api$consts$transacti.transactionBaseFee) || api.registry.createType('Balance'), ((_api$consts$transacti2 = api.consts.transactionPayment) === null || _api$consts$transacti2 === void 0 ? void 0 : _api$consts$transacti2.transactionByteFee) || api.registry.createType('Balance')]).pipe(map(([creationFee, transferFee, existentialDeposit, transactionBaseFee, transactionByteFee]) => ({\n      creationFee,\n      existentialDeposit,\n      transactionBaseFee,\n      transactionByteFee,\n      transferFee\n    })));\n  });\n}"]},"metadata":{},"sourceType":"module"}