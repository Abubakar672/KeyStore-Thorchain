{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    proveFinality: {\n      description: 'Prove finality for the range (begin; end] hash.',\n      params: [{\n        name: 'begin',\n        type: 'BlockHash'\n      }, {\n        name: 'end',\n        type: 'BlockHash'\n      }, {\n        name: 'authoritiesSetId',\n        type: 'u64',\n        isOptional: true\n      }],\n      type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n      description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n      params: [],\n      type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n      description: 'Subscribes to grandpa justifications',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'JustificationNotification'\n    }\n  },\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/grandpa/definitions.js"],"names":["rpc","proveFinality","description","params","name","type","isOptional","roundState","subscribeJustifications","pubsub","types","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","setId","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","hash","number","data","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","_enum","Finalized","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","Prevote","Precommit","GrandpaEquivocationProof","equivocation","GrandpaEquivocationValue","roundNumber","identity","first","second","GrandpaPrevote","targetHash","targetNumber","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","signature","id","GrandpaJustification","round","commit","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","nextAuthorities","delay","canonHeight","canonHash","delayKind","PendingPause","scheduledAt","PendingResume","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","Live","Paused"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    proveFinality: {\n      description: 'Prove finality for the range (begin; end] hash.',\n      params: [{\n        name: 'begin',\n        type: 'BlockHash'\n      }, {\n        name: 'end',\n        type: 'BlockHash'\n      }, {\n        name: 'authoritiesSetId',\n        type: 'u64',\n        isOptional: true\n      }],\n      type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n      description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n      params: [],\n      type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n      description: 'Subscribes to grandpa justifications',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'JustificationNotification'\n    }\n  },\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}