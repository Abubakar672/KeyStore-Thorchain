{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _buffer = require(\"buffer\");\n\nvar crypto = _interopRequireWildcard(require(\"../../crypto\"));\n\nvar _types = require(\"../../types\");\n\nvar _validateHelper = require(\"../../utils/validateHelper\");\n/**\n * @module Swap\n */\n\n\nvar Swap = /*#__PURE__*/function () {\n  /**\n   * @param {Object} bncClient\n   */\n  function Swap(bncClient) {\n    (0, _classCallCheck2[\"default\"])(this, Swap);\n    (0, _defineProperty2[\"default\"])(this, \"_bncClient\", void 0);\n\n    if (!Swap.instance) {\n      this._bncClient = bncClient;\n      Swap.instance = this;\n    }\n\n    return Swap.instance;\n  }\n  /**\n   * HTLT(Hash timer locked transfer, create an atomic swap)\n   * @param {String} from\n   * @param {String} recipient\n   * @param {String} recipientOtherChain\n   * @param {String} senderOtherChain\n   * @param {String} randomNumberHash\n   * @param {Number} timestamp\n   * @param {Array} amount\n   * @param {String} expectedIncome\n   * @param {Number} heightSpan\n   * @param {boolean} crossChain\n   * @returns {Promise}  resolves with response (success or fail)\n   */\n\n\n  (0, _createClass2[\"default\"])(Swap, [{\n    key: \"HTLT\",\n    value: function () {\n      var _HTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(from, recipient, recipientOtherChain, senderOtherChain, randomNumberHash, timestamp, amount, expectedIncome, heightSpan, crossChain) {\n        var htltMsg, signHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                (0, _validateHelper.checkCoins)(amount);\n                htltMsg = {\n                  from: crypto.decodeAddress(from),\n                  to: crypto.decodeAddress(recipient),\n                  recipient_other_chain: recipientOtherChain,\n                  sender_other_chain: senderOtherChain,\n                  random_number_hash: _buffer.Buffer.from(randomNumberHash, \"hex\"),\n                  timestamp: timestamp,\n                  amount: amount,\n                  expected_income: expectedIncome,\n                  height_span: heightSpan,\n                  cross_chain: crossChain,\n                  aminoPrefix: _types.AminoPrefix.HTLTMsg\n                };\n                signHTLTMsg = {\n                  from: from,\n                  to: recipient,\n                  recipient_other_chain: recipientOtherChain,\n                  sender_other_chain: senderOtherChain,\n                  random_number_hash: randomNumberHash,\n                  timestamp: timestamp,\n                  amount: amount,\n                  expected_income: expectedIncome,\n                  height_span: heightSpan,\n                  cross_chain: crossChain\n                };\n                _context.next = 5;\n                return this._bncClient._prepareTransaction(htltMsg, signHTLTMsg, from);\n\n              case 5:\n                signedTx = _context.sent;\n                return _context.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function HTLT(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n        return _HTLT.apply(this, arguments);\n      }\n\n      return HTLT;\n    }()\n    /**\n     * depositHTLT(deposit assets to an existing swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @param {Array} amount\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"depositHTLT\",\n    value: function () {\n      var _depositHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(from, swapID, amount) {\n        var depositHTLTMsg, signDepositHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _validateHelper.checkCoins)(amount);\n                depositHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  amount: amount,\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.DepositHTLTMsg\n                };\n                signDepositHTLTMsg = {\n                  from: from,\n                  amount: amount,\n                  swap_id: swapID\n                };\n                _context2.next = 5;\n                return this._bncClient._prepareTransaction(depositHTLTMsg, signDepositHTLTMsg, from);\n\n              case 5:\n                signedTx = _context2.sent;\n                return _context2.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function depositHTLT(_x11, _x12, _x13) {\n        return _depositHTLT.apply(this, arguments);\n      }\n\n      return depositHTLT;\n    }()\n    /**\n     * claimHTLT(claim assets from an swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @param {String} randomNumber\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"claimHTLT\",\n    value: function () {\n      var _claimHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(from, swapID, randomNumber) {\n        var claimHTLTMsg, signClaimHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                claimHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  random_number: _buffer.Buffer.from(randomNumber, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.ClaimHTLTMsg\n                };\n                signClaimHTLTMsg = {\n                  from: from,\n                  swap_id: swapID,\n                  random_number: randomNumber\n                };\n                _context3.next = 4;\n                return this._bncClient._prepareTransaction(claimHTLTMsg, signClaimHTLTMsg, from);\n\n              case 4:\n                signedTx = _context3.sent;\n                return _context3.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function claimHTLT(_x14, _x15, _x16) {\n        return _claimHTLT.apply(this, arguments);\n      }\n\n      return claimHTLT;\n    }()\n    /**\n     * refundHTLT(refund assets from an swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"refundHTLT\",\n    value: function () {\n      var _refundHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(from, swapID) {\n        var refundHTLTMsg, signRefundHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                refundHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.RefundHTLTMsg\n                };\n                signRefundHTLTMsg = {\n                  from: from,\n                  swap_id: swapID\n                };\n                _context4.next = 4;\n                return this._bncClient._prepareTransaction(refundHTLTMsg, signRefundHTLTMsg, from);\n\n              case 4:\n                signedTx = _context4.sent;\n                return _context4.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function refundHTLT(_x17, _x18) {\n        return _refundHTLT.apply(this, arguments);\n      }\n\n      return refundHTLT;\n    }()\n  }]);\n  return Swap;\n}();\n\n(0, _defineProperty2[\"default\"])(Swap, \"instance\", void 0);\nvar _default = Swap;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@binance-chain/javascript-sdk/lib/client/swap/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_defineProperty2","_buffer","crypto","_types","_validateHelper","Swap","bncClient","instance","_bncClient","key","_HTLT","mark","_callee","from","recipient","recipientOtherChain","senderOtherChain","randomNumberHash","timestamp","amount","expectedIncome","heightSpan","crossChain","htltMsg","signHTLTMsg","signedTx","wrap","_callee$","_context","prev","next","checkCoins","decodeAddress","to","recipient_other_chain","sender_other_chain","random_number_hash","Buffer","expected_income","height_span","cross_chain","aminoPrefix","AminoPrefix","HTLTMsg","_prepareTransaction","sent","abrupt","_broadcastDelegate","stop","HTLT","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_x9","_x10","apply","arguments","_depositHTLT","_callee2","swapID","depositHTLTMsg","signDepositHTLTMsg","_callee2$","_context2","swap_id","DepositHTLTMsg","depositHTLT","_x11","_x12","_x13","_claimHTLT","_callee3","randomNumber","claimHTLTMsg","signClaimHTLTMsg","_callee3$","_context3","random_number","ClaimHTLTMsg","claimHTLT","_x14","_x15","_x16","_refundHTLT","_callee4","refundHTLTMsg","signRefundHTLTMsg","_callee4$","_context4","RefundHTLTMsg","refundHTLT","_x17","_x18","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _buffer = require(\"buffer\");\n\nvar crypto = _interopRequireWildcard(require(\"../../crypto\"));\n\nvar _types = require(\"../../types\");\n\nvar _validateHelper = require(\"../../utils/validateHelper\");\n\n/**\n * @module Swap\n */\nvar Swap = /*#__PURE__*/function () {\n  /**\n   * @param {Object} bncClient\n   */\n  function Swap(bncClient) {\n    (0, _classCallCheck2[\"default\"])(this, Swap);\n    (0, _defineProperty2[\"default\"])(this, \"_bncClient\", void 0);\n\n    if (!Swap.instance) {\n      this._bncClient = bncClient;\n      Swap.instance = this;\n    }\n\n    return Swap.instance;\n  }\n  /**\n   * HTLT(Hash timer locked transfer, create an atomic swap)\n   * @param {String} from\n   * @param {String} recipient\n   * @param {String} recipientOtherChain\n   * @param {String} senderOtherChain\n   * @param {String} randomNumberHash\n   * @param {Number} timestamp\n   * @param {Array} amount\n   * @param {String} expectedIncome\n   * @param {Number} heightSpan\n   * @param {boolean} crossChain\n   * @returns {Promise}  resolves with response (success or fail)\n   */\n\n\n  (0, _createClass2[\"default\"])(Swap, [{\n    key: \"HTLT\",\n    value: function () {\n      var _HTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(from, recipient, recipientOtherChain, senderOtherChain, randomNumberHash, timestamp, amount, expectedIncome, heightSpan, crossChain) {\n        var htltMsg, signHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                (0, _validateHelper.checkCoins)(amount);\n                htltMsg = {\n                  from: crypto.decodeAddress(from),\n                  to: crypto.decodeAddress(recipient),\n                  recipient_other_chain: recipientOtherChain,\n                  sender_other_chain: senderOtherChain,\n                  random_number_hash: _buffer.Buffer.from(randomNumberHash, \"hex\"),\n                  timestamp: timestamp,\n                  amount: amount,\n                  expected_income: expectedIncome,\n                  height_span: heightSpan,\n                  cross_chain: crossChain,\n                  aminoPrefix: _types.AminoPrefix.HTLTMsg\n                };\n                signHTLTMsg = {\n                  from: from,\n                  to: recipient,\n                  recipient_other_chain: recipientOtherChain,\n                  sender_other_chain: senderOtherChain,\n                  random_number_hash: randomNumberHash,\n                  timestamp: timestamp,\n                  amount: amount,\n                  expected_income: expectedIncome,\n                  height_span: heightSpan,\n                  cross_chain: crossChain\n                };\n                _context.next = 5;\n                return this._bncClient._prepareTransaction(htltMsg, signHTLTMsg, from);\n\n              case 5:\n                signedTx = _context.sent;\n                return _context.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function HTLT(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n        return _HTLT.apply(this, arguments);\n      }\n\n      return HTLT;\n    }()\n    /**\n     * depositHTLT(deposit assets to an existing swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @param {Array} amount\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"depositHTLT\",\n    value: function () {\n      var _depositHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(from, swapID, amount) {\n        var depositHTLTMsg, signDepositHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _validateHelper.checkCoins)(amount);\n                depositHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  amount: amount,\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.DepositHTLTMsg\n                };\n                signDepositHTLTMsg = {\n                  from: from,\n                  amount: amount,\n                  swap_id: swapID\n                };\n                _context2.next = 5;\n                return this._bncClient._prepareTransaction(depositHTLTMsg, signDepositHTLTMsg, from);\n\n              case 5:\n                signedTx = _context2.sent;\n                return _context2.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function depositHTLT(_x11, _x12, _x13) {\n        return _depositHTLT.apply(this, arguments);\n      }\n\n      return depositHTLT;\n    }()\n    /**\n     * claimHTLT(claim assets from an swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @param {String} randomNumber\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"claimHTLT\",\n    value: function () {\n      var _claimHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(from, swapID, randomNumber) {\n        var claimHTLTMsg, signClaimHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                claimHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  random_number: _buffer.Buffer.from(randomNumber, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.ClaimHTLTMsg\n                };\n                signClaimHTLTMsg = {\n                  from: from,\n                  swap_id: swapID,\n                  random_number: randomNumber\n                };\n                _context3.next = 4;\n                return this._bncClient._prepareTransaction(claimHTLTMsg, signClaimHTLTMsg, from);\n\n              case 4:\n                signedTx = _context3.sent;\n                return _context3.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function claimHTLT(_x14, _x15, _x16) {\n        return _claimHTLT.apply(this, arguments);\n      }\n\n      return claimHTLT;\n    }()\n    /**\n     * refundHTLT(refund assets from an swap)\n     * @param {String} from\n     * @param {String} swapID\n     * @returns {Promise}  resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"refundHTLT\",\n    value: function () {\n      var _refundHTLT = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(from, swapID) {\n        var refundHTLTMsg, signRefundHTLTMsg, signedTx;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                refundHTLTMsg = {\n                  from: crypto.decodeAddress(from),\n                  swap_id: _buffer.Buffer.from(swapID, \"hex\"),\n                  aminoPrefix: _types.AminoPrefix.RefundHTLTMsg\n                };\n                signRefundHTLTMsg = {\n                  from: from,\n                  swap_id: swapID\n                };\n                _context4.next = 4;\n                return this._bncClient._prepareTransaction(refundHTLTMsg, signRefundHTLTMsg, from);\n\n              case 4:\n                signedTx = _context4.sent;\n                return _context4.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function refundHTLT(_x17, _x18) {\n        return _refundHTLT.apply(this, arguments);\n      }\n\n      return refundHTLT;\n    }()\n  }]);\n  return Swap;\n}();\n\n(0, _defineProperty2[\"default\"])(Swap, \"instance\", void 0);\nvar _default = Swap;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}