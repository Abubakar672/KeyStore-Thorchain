{"ast":null,"code":"// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\nvar bscript = require('../../script');\n\nvar types = require('../../types');\n\nvar typeforce = require('typeforce');\n\nvar OPS = require('@psf/bitcoincash-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 25 && buffer[0] === OPS.OP_DUP && buffer[1] === OPS.OP_HASH160 && buffer[2] === 0x14 && buffer[23] === OPS.OP_EQUALVERIFY && buffer[24] === OPS.OP_CHECKSIG;\n}\n\ncheck.toJSON = function () {\n  return 'pubKeyHash output';\n};\n\nfunction encode(pubKeyHash) {\n  typeforce(types.Hash160bit, pubKeyHash);\n  return bscript.compile([OPS.OP_DUP, OPS.OP_HASH160, pubKeyHash, OPS.OP_EQUALVERIFY, OPS.OP_CHECKSIG]);\n}\n\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return buffer.slice(3, 23);\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@psf/bitcoincashjs-lib/src/templates/pubkeyhash/output.js"],"names":["bscript","require","types","typeforce","OPS","check","script","buffer","compile","length","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toJSON","encode","pubKeyHash","Hash160bit","decode","slice","module","exports"],"mappings":"AAAA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,sBAAD,CAAjB;;AAEA,SAASI,KAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,MAAM,GAAGP,OAAO,CAACQ,OAAR,CAAgBF,MAAhB,CAAb;AAEA,SAAOC,MAAM,CAACE,MAAP,KAAkB,EAAlB,IACLF,MAAM,CAAC,CAAD,CAAN,KAAcH,GAAG,CAACM,MADb,IAELH,MAAM,CAAC,CAAD,CAAN,KAAcH,GAAG,CAACO,UAFb,IAGLJ,MAAM,CAAC,CAAD,CAAN,KAAc,IAHT,IAILA,MAAM,CAAC,EAAD,CAAN,KAAeH,GAAG,CAACQ,cAJd,IAKLL,MAAM,CAAC,EAAD,CAAN,KAAeH,GAAG,CAACS,WALrB;AAMD;;AACDR,KAAK,CAACS,MAAN,GAAe,YAAY;AAAE,SAAO,mBAAP;AAA4B,CAAzD;;AAEA,SAASC,MAAT,CAAiBC,UAAjB,EAA6B;AAC3Bb,EAAAA,SAAS,CAACD,KAAK,CAACe,UAAP,EAAmBD,UAAnB,CAAT;AAEA,SAAOhB,OAAO,CAACQ,OAAR,CAAgB,CACrBJ,GAAG,CAACM,MADiB,EAErBN,GAAG,CAACO,UAFiB,EAGrBK,UAHqB,EAIrBZ,GAAG,CAACQ,cAJiB,EAKrBR,GAAG,CAACS,WALiB,CAAhB,CAAP;AAOD;;AAED,SAASK,MAAT,CAAiBX,MAAjB,EAAyB;AACvBJ,EAAAA,SAAS,CAACE,KAAD,EAAQE,MAAR,CAAT;AAEA,SAAOA,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAAEA,KADQ;AAEfa,EAAAA,MAAM,EAAEA,MAFO;AAGfH,EAAAA,MAAM,EAAEA;AAHO,CAAjB","sourcesContent":["// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length === 25 &&\n    buffer[0] === OPS.OP_DUP &&\n    buffer[1] === OPS.OP_HASH160 &&\n    buffer[2] === 0x14 &&\n    buffer[23] === OPS.OP_EQUALVERIFY &&\n    buffer[24] === OPS.OP_CHECKSIG\n}\ncheck.toJSON = function () { return 'pubKeyHash output' }\n\nfunction encode (pubKeyHash) {\n  typeforce(types.Hash160bit, pubKeyHash)\n\n  return bscript.compile([\n    OPS.OP_DUP,\n    OPS.OP_HASH160,\n    pubKeyHash,\n    OPS.OP_EQUALVERIFY,\n    OPS.OP_CHECKSIG\n  ])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(3, 23)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n"]},"metadata":{},"sourceType":"script"}