{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of, startWith } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nlet indicesCache = null;\n\nfunction queryAccounts(api) {\n  return api.query.indices.accounts.entries().pipe(map(entries => entries.reduce((indexes, [key, idOpt]) => {\n    if (idOpt.isSome) {\n      indexes[idOpt.unwrap()[0].toString()] = key.args[0];\n    }\n\n    return indexes;\n  }, {})));\n}\n/**\n * @name indexes\n * @returns Returns all the indexes on the system.\n * @description This is an unwieldly query since it loops through\n * all of the enumsets and returns all of the values found. This could be up to 32k depending\n * on the number of active accounts in the system\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexes((indexes) => {\n *   console.log('All existing AccountIndexes', indexes);\n * });\n * ```\n */\n\n\nexport function indexes(instanceId, api) {\n  return memo(instanceId, () => indicesCache ? of(indicesCache) : (api.query.indices ? queryAccounts(api).pipe(startWith({})) : of({})).pipe(map(indices => {\n    indicesCache = indices;\n    return indices;\n  })));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/accounts/indexes.js"],"names":["map","of","startWith","memo","indicesCache","queryAccounts","api","query","indices","accounts","entries","pipe","reduce","indexes","key","idOpt","isSome","unwrap","toString","args","instanceId"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,EAAcC,EAAd,EAAkBC,SAAlB,QAAmC,MAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,IAAIC,YAAY,GAAG,IAAnB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,SAAOA,GAAG,CAACC,KAAJ,CAAUC,OAAV,CAAkBC,QAAlB,CAA2BC,OAA3B,GAAqCC,IAArC,CAA0CX,GAAG,CAACU,OAAO,IAAIA,OAAO,CAACE,MAAR,CAAe,CAACC,OAAD,EAAU,CAACC,GAAD,EAAMC,KAAN,CAAV,KAA2B;AACxG,QAAIA,KAAK,CAACC,MAAV,EAAkB;AAChBH,MAAAA,OAAO,CAACE,KAAK,CAACE,MAAN,GAAe,CAAf,EAAkBC,QAAlB,EAAD,CAAP,GAAwCJ,GAAG,CAACK,IAAJ,CAAS,CAAT,CAAxC;AACD;;AAED,WAAON,OAAP;AACD,GAN+D,EAM7D,EAN6D,CAAZ,CAA7C,CAAP;AAOD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASA,OAAT,CAAiBO,UAAjB,EAA6Bd,GAA7B,EAAkC;AACvC,SAAOH,IAAI,CAACiB,UAAD,EAAa,MAAMhB,YAAY,GAAGH,EAAE,CAACG,YAAD,CAAL,GAAsB,CAACE,GAAG,CAACC,KAAJ,CAAUC,OAAV,GAAoBH,aAAa,CAACC,GAAD,CAAb,CAAmBK,IAAnB,CAAwBT,SAAS,CAAC,EAAD,CAAjC,CAApB,GAA6DD,EAAE,CAAC,EAAD,CAAhE,EAAsEU,IAAtE,CAA2EX,GAAG,CAACQ,OAAO,IAAI;AACxJJ,IAAAA,YAAY,GAAGI,OAAf;AACA,WAAOA,OAAP;AACD,GAH6I,CAA9E,CAArD,CAAX;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of, startWith } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nlet indicesCache = null;\n\nfunction queryAccounts(api) {\n  return api.query.indices.accounts.entries().pipe(map(entries => entries.reduce((indexes, [key, idOpt]) => {\n    if (idOpt.isSome) {\n      indexes[idOpt.unwrap()[0].toString()] = key.args[0];\n    }\n\n    return indexes;\n  }, {})));\n}\n/**\n * @name indexes\n * @returns Returns all the indexes on the system.\n * @description This is an unwieldly query since it loops through\n * all of the enumsets and returns all of the values found. This could be up to 32k depending\n * on the number of active accounts in the system\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexes((indexes) => {\n *   console.log('All existing AccountIndexes', indexes);\n * });\n * ```\n */\n\n\nexport function indexes(instanceId, api) {\n  return memo(instanceId, () => indicesCache ? of(indicesCache) : (api.query.indices ? queryAccounts(api).pipe(startWith({})) : of({})).pipe(map(indices => {\n    indicesCache = indices;\n    return indices;\n  })));\n}"]},"metadata":{},"sourceType":"module"}