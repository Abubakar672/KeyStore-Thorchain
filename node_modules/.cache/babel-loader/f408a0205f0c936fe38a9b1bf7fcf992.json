{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stake = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../../crypto\"));\n\nvar _types = require(\"../../types\");\n/**\n * Stake\n */\n\n\nvar Stake = /*#__PURE__*/function () {\n  /**\n   * @param {BncClient} bncClient\n   */\n  function Stake(bncClient) {\n    (0, _classCallCheck2[\"default\"])(this, Stake);\n    (0, _defineProperty2[\"default\"])(this, \"_bncClient\", void 0);\n    this._bncClient = bncClient;\n  }\n\n  (0, _createClass2[\"default\"])(Stake, [{\n    key: \"bscDelegate\",\n    value: function () {\n      var _bscDelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref) {\n        var delegateAddress, validatorAddress, amount, _ref$symbol, symbol, _ref$sideChainId, sideChainId, bscDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                delegateAddress = _ref.delegateAddress, validatorAddress = _ref.validatorAddress, amount = _ref.amount, _ref$symbol = _ref.symbol, symbol = _ref$symbol === void 0 ? \"BNB\" : _ref$symbol, _ref$sideChainId = _ref.sideChainId, sideChainId = _ref$sideChainId === void 0 ? \"chapel\" : _ref$sideChainId;\n\n                if (amount) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorAddress, \"bva\")) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator address is not valid\");\n\n              case 7:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                bscDelegateMsg = new _types.BscDelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_addr: validatorAddress,\n                  delegation: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context.next = 11;\n                return this.broadcast(bscDelegateMsg, delegateAddress);\n\n              case 11:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function bscDelegate(_x) {\n        return _bscDelegate.apply(this, arguments);\n      }\n\n      return bscDelegate;\n    }()\n  }, {\n    key: \"bscUndelegate\",\n    value: function () {\n      var _bscUndelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref2) {\n        var delegateAddress, validatorAddress, amount, _ref2$symbol, symbol, _ref2$sideChainId, sideChainId, unDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                delegateAddress = _ref2.delegateAddress, validatorAddress = _ref2.validatorAddress, amount = _ref2.amount, _ref2$symbol = _ref2.symbol, symbol = _ref2$symbol === void 0 ? \"BNB\" : _ref2$symbol, _ref2$sideChainId = _ref2.sideChainId, sideChainId = _ref2$sideChainId === void 0 ? \"chapel\" : _ref2$sideChainId;\n\n                if (amount) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorAddress, \"bva\")) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator address is not valid\");\n\n              case 7:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                unDelegateMsg = new _types.BscUndelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_addr: validatorAddress,\n                  amount: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context2.next = 11;\n                return this.broadcast(unDelegateMsg, delegateAddress);\n\n              case 11:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function bscUndelegate(_x2) {\n        return _bscUndelegate.apply(this, arguments);\n      }\n\n      return bscUndelegate;\n    }()\n  }, {\n    key: \"bscReDelegate\",\n    value: function () {\n      var _bscReDelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(_ref3) {\n        var delegateAddress, validatorSrcAddress, validatorDstAddress, amount, _ref3$symbol, symbol, _ref3$sideChainId, sideChainId, bscReDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                delegateAddress = _ref3.delegateAddress, validatorSrcAddress = _ref3.validatorSrcAddress, validatorDstAddress = _ref3.validatorDstAddress, amount = _ref3.amount, _ref3$symbol = _ref3.symbol, symbol = _ref3$symbol === void 0 ? \"BNB\" : _ref3$symbol, _ref3$sideChainId = _ref3.sideChainId, sideChainId = _ref3$sideChainId === void 0 ? \"chapel\" : _ref3$sideChainId;\n\n                if (amount) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorSrcAddress, \"bva\")) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator source address is not valid\");\n\n              case 7:\n                if (crypto.checkAddress(validatorDstAddress, \"bva\")) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw new Error(\"validator dest address is not valid\");\n\n              case 9:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                bscReDelegateMsg = new _types.BscReDelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_src_addr: validatorSrcAddress,\n                  validator_dst_addr: validatorDstAddress,\n                  amount: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context3.next = 13;\n                return this.broadcast(bscReDelegateMsg, delegateAddress);\n\n              case 13:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function bscReDelegate(_x3) {\n        return _bscReDelegate.apply(this, arguments);\n      }\n\n      return bscReDelegate;\n    }()\n  }, {\n    key: \"broadcast\",\n    value: function () {\n      var _broadcast = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(msg, fromAddress, sequence) {\n        var signedTx;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._bncClient._prepareTransaction(msg.getMsg(), msg.getSignMsg(), fromAddress, sequence);\n\n              case 2:\n                signedTx = _context4.sent;\n                return _context4.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function broadcast(_x4, _x5, _x6) {\n        return _broadcast.apply(this, arguments);\n      }\n\n      return broadcast;\n    }()\n  }]);\n  return Stake;\n}();\n\nexports.Stake = Stake;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@binance-chain/javascript-sdk/lib/client/stake/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","Stake","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_defineProperty2","_big","crypto","_types","bncClient","_bncClient","key","_bscDelegate","mark","_callee","_ref","delegateAddress","validatorAddress","amount","_ref$symbol","symbol","_ref$sideChainId","sideChainId","bscDelegateMsg","wrap","_callee$","_context","prev","next","Error","checkAddress","Number","mul","Math","pow","toString","BscDelegateMsg","delegator_addr","validator_addr","delegation","denom","side_chain_id","broadcast","abrupt","sent","stop","bscDelegate","_x","apply","arguments","_bscUndelegate","_callee2","_ref2","_ref2$symbol","_ref2$sideChainId","unDelegateMsg","_callee2$","_context2","BscUndelegateMsg","bscUndelegate","_x2","_bscReDelegate","_callee3","_ref3","validatorSrcAddress","validatorDstAddress","_ref3$symbol","_ref3$sideChainId","bscReDelegateMsg","_callee3$","_context3","BscReDelegateMsg","validator_src_addr","validator_dst_addr","bscReDelegate","_x3","_broadcast","_callee4","msg","fromAddress","sequence","signedTx","_callee4$","_context4","_prepareTransaction","getMsg","getSignMsg","_broadcastDelegate","_x4","_x5","_x6"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stake = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../../crypto\"));\n\nvar _types = require(\"../../types\");\n\n/**\n * Stake\n */\nvar Stake = /*#__PURE__*/function () {\n  /**\n   * @param {BncClient} bncClient\n   */\n  function Stake(bncClient) {\n    (0, _classCallCheck2[\"default\"])(this, Stake);\n    (0, _defineProperty2[\"default\"])(this, \"_bncClient\", void 0);\n    this._bncClient = bncClient;\n  }\n\n  (0, _createClass2[\"default\"])(Stake, [{\n    key: \"bscDelegate\",\n    value: function () {\n      var _bscDelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref) {\n        var delegateAddress, validatorAddress, amount, _ref$symbol, symbol, _ref$sideChainId, sideChainId, bscDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                delegateAddress = _ref.delegateAddress, validatorAddress = _ref.validatorAddress, amount = _ref.amount, _ref$symbol = _ref.symbol, symbol = _ref$symbol === void 0 ? \"BNB\" : _ref$symbol, _ref$sideChainId = _ref.sideChainId, sideChainId = _ref$sideChainId === void 0 ? \"chapel\" : _ref$sideChainId;\n\n                if (amount) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorAddress, \"bva\")) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator address is not valid\");\n\n              case 7:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                bscDelegateMsg = new _types.BscDelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_addr: validatorAddress,\n                  delegation: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context.next = 11;\n                return this.broadcast(bscDelegateMsg, delegateAddress);\n\n              case 11:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function bscDelegate(_x) {\n        return _bscDelegate.apply(this, arguments);\n      }\n\n      return bscDelegate;\n    }()\n  }, {\n    key: \"bscUndelegate\",\n    value: function () {\n      var _bscUndelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref2) {\n        var delegateAddress, validatorAddress, amount, _ref2$symbol, symbol, _ref2$sideChainId, sideChainId, unDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                delegateAddress = _ref2.delegateAddress, validatorAddress = _ref2.validatorAddress, amount = _ref2.amount, _ref2$symbol = _ref2.symbol, symbol = _ref2$symbol === void 0 ? \"BNB\" : _ref2$symbol, _ref2$sideChainId = _ref2.sideChainId, sideChainId = _ref2$sideChainId === void 0 ? \"chapel\" : _ref2$sideChainId;\n\n                if (amount) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorAddress, \"bva\")) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator address is not valid\");\n\n              case 7:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                unDelegateMsg = new _types.BscUndelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_addr: validatorAddress,\n                  amount: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context2.next = 11;\n                return this.broadcast(unDelegateMsg, delegateAddress);\n\n              case 11:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function bscUndelegate(_x2) {\n        return _bscUndelegate.apply(this, arguments);\n      }\n\n      return bscUndelegate;\n    }()\n  }, {\n    key: \"bscReDelegate\",\n    value: function () {\n      var _bscReDelegate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(_ref3) {\n        var delegateAddress, validatorSrcAddress, validatorDstAddress, amount, _ref3$symbol, symbol, _ref3$sideChainId, sideChainId, bscReDelegateMsg;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                delegateAddress = _ref3.delegateAddress, validatorSrcAddress = _ref3.validatorSrcAddress, validatorDstAddress = _ref3.validatorDstAddress, amount = _ref3.amount, _ref3$symbol = _ref3.symbol, symbol = _ref3$symbol === void 0 ? \"BNB\" : _ref3$symbol, _ref3$sideChainId = _ref3.sideChainId, sideChainId = _ref3$sideChainId === void 0 ? \"chapel\" : _ref3$sideChainId;\n\n                if (amount) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error(\"amount should not be empty\");\n\n              case 3:\n                if (delegateAddress) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error(\"delegate address should not be null\");\n\n              case 5:\n                if (crypto.checkAddress(validatorSrcAddress, \"bva\")) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                throw new Error(\"validator source address is not valid\");\n\n              case 7:\n                if (crypto.checkAddress(validatorDstAddress, \"bva\")) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw new Error(\"validator dest address is not valid\");\n\n              case 9:\n                amount = Number(new _big[\"default\"](amount).mul(Math.pow(10, 8)).toString());\n                bscReDelegateMsg = new _types.BscReDelegateMsg({\n                  delegator_addr: delegateAddress,\n                  validator_src_addr: validatorSrcAddress,\n                  validator_dst_addr: validatorDstAddress,\n                  amount: {\n                    denom: symbol,\n                    amount: amount\n                  },\n                  side_chain_id: sideChainId\n                });\n                _context3.next = 13;\n                return this.broadcast(bscReDelegateMsg, delegateAddress);\n\n              case 13:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function bscReDelegate(_x3) {\n        return _bscReDelegate.apply(this, arguments);\n      }\n\n      return bscReDelegate;\n    }()\n  }, {\n    key: \"broadcast\",\n    value: function () {\n      var _broadcast = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(msg, fromAddress, sequence) {\n        var signedTx;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._bncClient._prepareTransaction(msg.getMsg(), msg.getSignMsg(), fromAddress, sequence);\n\n              case 2:\n                signedTx = _context4.sent;\n                return _context4.abrupt(\"return\", this._bncClient._broadcastDelegate(signedTx));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function broadcast(_x4, _x5, _x6) {\n        return _broadcast.apply(this, arguments);\n      }\n\n      return broadcast;\n    }()\n  }]);\n  return Stake;\n}();\n\nexports.Stake = Stake;"]},"metadata":{},"sourceType":"script"}