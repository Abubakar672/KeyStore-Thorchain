{"ast":null,"code":"import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { timeout } from './timeout';\nexport function timeoutWith(due, withObservable, scheduler) {\n  var first;\n  var each;\n\n  var _with;\n\n  scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = function () {\n      return withObservable;\n    };\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout({\n    first: first,\n    each: each,\n    scheduler: scheduler,\n    with: _with\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/timeoutWith.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,oBAAtB;AACA,SAAS,WAAT,QAA4B,gBAA5B;AAEA,SAAS,OAAT,QAAwB,WAAxB;AAkFA,OAAM,SAAU,WAAV,CACJ,GADI,EAEJ,cAFI,EAGJ,SAHI,EAGqB;AAEzB,MAAI,KAAJ;AACA,MAAI,IAAJ;;AACA,MAAI,KAAJ;;AACA,EAAA,SAAS,GAAG,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAA,SAAA,GAAa,KAAzB;;AAEA,MAAI,WAAW,CAAC,GAAD,CAAf,EAAsB;AACpB,IAAA,KAAK,GAAG,GAAR;AACD,GAFD,MAEO,IAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAClC,IAAA,IAAI,GAAG,GAAP;AACD;;AAED,MAAI,cAAJ,EAAoB;AAClB,IAAA,KAAK,GAAG,YAAA;AAAM,aAAA,cAAA;AAAc,KAA5B;AACD,GAFD,MAEO;AACL,UAAM,IAAI,SAAJ,CAAc,qCAAd,CAAN;AACD;;AAED,MAAI,KAAK,IAAI,IAAT,IAAiB,IAAI,IAAI,IAA7B,EAAmC;AAEjC,UAAM,IAAI,SAAJ,CAAc,sBAAd,CAAN;AACD;;AAED,SAAO,OAAO,CAAwB;AACpC,IAAA,KAAK,EAAA,KAD+B;AAEpC,IAAA,IAAI,EAAA,IAFgC;AAGpC,IAAA,SAAS,EAAA,SAH2B;AAIpC,IAAA,IAAI,EAAE;AAJ8B,GAAxB,CAAd;AAMD","sourceRoot":"","sourcesContent":["import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { timeout } from './timeout';\nexport function timeoutWith(due, withObservable, scheduler) {\n    var first;\n    var each;\n    var _with;\n    scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async;\n    if (isValidDate(due)) {\n        first = due;\n    }\n    else if (typeof due === 'number') {\n        each = due;\n    }\n    if (withObservable) {\n        _with = function () { return withObservable; };\n    }\n    else {\n        throw new TypeError('No observable provided to switch to');\n    }\n    if (first == null && each == null) {\n        throw new TypeError('No timeout provided.');\n    }\n    return timeout({\n        first: first,\n        each: each,\n        scheduler: scheduler,\n        with: _with,\n    });\n}\n//# sourceMappingURL=timeoutWith.js.map"]},"metadata":{},"sourceType":"module"}