{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/from';\nimport { noop } from '../util/noop';\nexport function skipUntil(notifier) {\n  return operate(function (source, subscriber) {\n    var taking = false;\n    var skipSubscriber = new OperatorSubscriber(subscriber, function () {\n      skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();\n      taking = true;\n    }, noop);\n    innerFrom(notifier).subscribe(skipSubscriber);\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      return taking && subscriber.next(value);\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/skipUntil.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,IAAT,QAAqB,cAArB;AAwCA,OAAM,SAAU,SAAV,CAAuB,QAAvB,EAAgD;AACpD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAI,MAAM,GAAG,KAAb;AAEA,QAAM,cAAc,GAAG,IAAI,kBAAJ,CACrB,UADqB,EAErB,YAAA;AACE,MAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,WAAhB,EAAA;AACA,MAAA,MAAM,GAAG,IAAT;AACD,KALoB,EAMrB,IANqB,CAAvB;AASA,IAAA,SAAS,CAAC,QAAD,CAAT,CAAoB,SAApB,CAA8B,cAA9B;AAEA,IAAA,MAAM,CAAC,SAAP,CAAiB,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AAAK,aAAA,MAAM,IAAI,UAAU,CAAC,IAAX,CAAV,KAAU,CAAV;AAAgC,KAA9E,CAAjB;AACD,GAfa,CAAd;AAgBD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/from';\nimport { noop } from '../util/noop';\nexport function skipUntil(notifier) {\n    return operate(function (source, subscriber) {\n        var taking = false;\n        var skipSubscriber = new OperatorSubscriber(subscriber, function () {\n            skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();\n            taking = true;\n        }, noop);\n        innerFrom(notifier).subscribe(skipSubscriber);\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) { return taking && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=skipUntil.js.map"]},"metadata":{},"sourceType":"module"}