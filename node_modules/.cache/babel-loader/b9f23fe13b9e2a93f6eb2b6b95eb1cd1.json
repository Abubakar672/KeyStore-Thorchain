{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst recordIdentity = record => record;\n\nfunction filterAndApply(events, section, methods, onFound) {\n  return events.filter(({\n    event\n  }) => section === event.section && methods.includes(event.method)).map(record => onFound(record));\n}\n\nfunction extractError(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed'], ({\n    event: {\n      data\n    }\n  }) => data[0])[0];\n}\n\nfunction extractInfo(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], ({\n    event: {\n      data,\n      method\n    }\n  }) => method === 'ExtrinsicSuccess' ? data[0] : data[1])[0];\n}\n\nexport class SubmittableResult {\n  constructor({\n    dispatchError,\n    dispatchInfo,\n    events,\n    internalError,\n    status\n  }) {\n    this.dispatchError = void 0;\n    this.dispatchInfo = void 0;\n    this.internalError = void 0;\n    this.events = void 0;\n    this.status = void 0;\n    this.dispatchError = dispatchError || extractError(events);\n    this.dispatchInfo = dispatchInfo || extractInfo(events);\n    this.events = events || [];\n    this.internalError = internalError;\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.filterRecords(section, method)[0];\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    var _this$dispatchError, _this$dispatchInfo, _this$internalError;\n\n    return {\n      dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),\n      dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),\n      events: this.events.map(event => event.toHuman(isExtended)),\n      internalError: (_this$internalError = this.internalError) === null || _this$internalError === void 0 ? void 0 : _this$internalError.message.toString(),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api/submittable/Result.js"],"names":["recordIdentity","record","filterAndApply","events","section","methods","onFound","filter","event","includes","method","map","extractError","data","extractInfo","SubmittableResult","constructor","dispatchError","dispatchInfo","internalError","status","isCompleted","isError","isInBlock","isFinalized","isDropped","isFinalityTimeout","isInvalid","isUsurped","isWarning","isRetracted","filterRecords","Array","isArray","findRecord","toHuman","isExtended","_this$dispatchError","_this$dispatchInfo","_this$internalError","message","toString"],"mappings":"AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,MAAM,IAAIA,MAAjC;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AACzD,SAAOH,MAAM,CAACI,MAAP,CAAc,CAAC;AACpBC,IAAAA;AADoB,GAAD,KAEfJ,OAAO,KAAKI,KAAK,CAACJ,OAAlB,IAA6BC,OAAO,CAACI,QAAR,CAAiBD,KAAK,CAACE,MAAvB,CAF5B,EAE4DC,GAF5D,CAEgEV,MAAM,IAAIK,OAAO,CAACL,MAAD,CAFjF,CAAP;AAGD;;AAED,SAASW,YAAT,CAAsBT,MAAM,GAAG,EAA/B,EAAmC;AACjC,SAAOD,cAAc,CAACC,MAAD,EAAS,QAAT,EAAmB,CAAC,iBAAD,CAAnB,EAAwC,CAAC;AAC5DK,IAAAA,KAAK,EAAE;AACLK,MAAAA;AADK;AADqD,GAAD,KAIvDA,IAAI,CAAC,CAAD,CAJW,CAAd,CAIQ,CAJR,CAAP;AAKD;;AAED,SAASC,WAAT,CAAqBX,MAAM,GAAG,EAA9B,EAAkC;AAChC,SAAOD,cAAc,CAACC,MAAD,EAAS,QAAT,EAAmB,CAAC,iBAAD,EAAoB,kBAApB,CAAnB,EAA4D,CAAC;AAChFK,IAAAA,KAAK,EAAE;AACLK,MAAAA,IADK;AAELH,MAAAA;AAFK;AADyE,GAAD,KAK3EA,MAAM,KAAK,kBAAX,GAAgCG,IAAI,CAAC,CAAD,CAApC,GAA0CA,IAAI,CAAC,CAAD,CAL/B,CAAd,CAKkD,CALlD,CAAP;AAMD;;AAED,OAAO,MAAME,iBAAN,CAAwB;AAC7BC,EAAAA,WAAW,CAAC;AACVC,IAAAA,aADU;AAEVC,IAAAA,YAFU;AAGVf,IAAAA,MAHU;AAIVgB,IAAAA,aAJU;AAKVC,IAAAA;AALU,GAAD,EAMR;AACD,SAAKH,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKC,YAAL,GAAoB,KAAK,CAAzB;AACA,SAAKC,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKhB,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKiB,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKH,aAAL,GAAqBA,aAAa,IAAIL,YAAY,CAACT,MAAD,CAAlD;AACA,SAAKe,YAAL,GAAoBA,YAAY,IAAIJ,WAAW,CAACX,MAAD,CAA/C;AACA,SAAKA,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACA,SAAKgB,aAAL,GAAqBA,aAArB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAEc,MAAXC,WAAW,GAAG;AAChB,WAAO,KAAKC,OAAL,IAAgB,KAAKF,MAAL,CAAYG,SAA5B,IAAyC,KAAKH,MAAL,CAAYI,WAA5D;AACD;;AAEU,MAAPF,OAAO,GAAG;AACZ,WAAO,KAAKF,MAAL,CAAYK,SAAZ,IAAyB,KAAKL,MAAL,CAAYM,iBAArC,IAA0D,KAAKN,MAAL,CAAYO,SAAtE,IAAmF,KAAKP,MAAL,CAAYQ,SAAtG;AACD;;AAEc,MAAXJ,WAAW,GAAG;AAChB,WAAO,KAAKJ,MAAL,CAAYI,WAAnB;AACD;;AAEY,MAATD,SAAS,GAAG;AACd,WAAO,KAAKH,MAAL,CAAYG,SAAnB;AACD;;AAEY,MAATM,SAAS,GAAG;AACd,WAAO,KAAKT,MAAL,CAAYU,WAAnB;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,aAAa,CAAC3B,OAAD,EAAUM,MAAV,EAAkB;AAC7B,WAAOR,cAAc,CAAC,KAAKC,MAAN,EAAcC,OAAd,EAAuB4B,KAAK,CAACC,OAAN,CAAcvB,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAAxD,EAAkEV,cAAlE,CAArB;AACD;AACD;AACF;AACA;;;AAGEkC,EAAAA,UAAU,CAAC9B,OAAD,EAAUM,MAAV,EAAkB;AAC1B,WAAO,KAAKqB,aAAL,CAAmB3B,OAAnB,EAA4BM,MAA5B,EAAoC,CAApC,CAAP;AACD;AACD;AACF;AACA;;;AAGEyB,EAAAA,OAAO,CAACC,UAAD,EAAa;AAClB,QAAIC,mBAAJ,EAAyBC,kBAAzB,EAA6CC,mBAA7C;;AAEA,WAAO;AACLtB,MAAAA,aAAa,EAAE,CAACoB,mBAAmB,GAAG,KAAKpB,aAA5B,MAA+C,IAA/C,IAAuDoB,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,mBAAmB,CAACF,OAApB,EAD3G;AAELjB,MAAAA,YAAY,EAAE,CAACoB,kBAAkB,GAAG,KAAKpB,YAA3B,MAA6C,IAA7C,IAAqDoB,kBAAkB,KAAK,KAAK,CAAjF,GAAqF,KAAK,CAA1F,GAA8FA,kBAAkB,CAACH,OAAnB,EAFvG;AAGLhC,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYQ,GAAZ,CAAgBH,KAAK,IAAIA,KAAK,CAAC2B,OAAN,CAAcC,UAAd,CAAzB,CAHH;AAILjB,MAAAA,aAAa,EAAE,CAACoB,mBAAmB,GAAG,KAAKpB,aAA5B,MAA+C,IAA/C,IAAuDoB,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,mBAAmB,CAACC,OAApB,CAA4BC,QAA5B,EAJ3G;AAKLrB,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYe,OAAZ,CAAoBC,UAApB;AALH,KAAP;AAOD;;AAtE4B","sourcesContent":["// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst recordIdentity = record => record;\n\nfunction filterAndApply(events, section, methods, onFound) {\n  return events.filter(({\n    event\n  }) => section === event.section && methods.includes(event.method)).map(record => onFound(record));\n}\n\nfunction extractError(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed'], ({\n    event: {\n      data\n    }\n  }) => data[0])[0];\n}\n\nfunction extractInfo(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], ({\n    event: {\n      data,\n      method\n    }\n  }) => method === 'ExtrinsicSuccess' ? data[0] : data[1])[0];\n}\n\nexport class SubmittableResult {\n  constructor({\n    dispatchError,\n    dispatchInfo,\n    events,\n    internalError,\n    status\n  }) {\n    this.dispatchError = void 0;\n    this.dispatchInfo = void 0;\n    this.internalError = void 0;\n    this.events = void 0;\n    this.status = void 0;\n    this.dispatchError = dispatchError || extractError(events);\n    this.dispatchInfo = dispatchInfo || extractInfo(events);\n    this.events = events || [];\n    this.internalError = internalError;\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.filterRecords(section, method)[0];\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    var _this$dispatchError, _this$dispatchInfo, _this$internalError;\n\n    return {\n      dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),\n      dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),\n      events: this.events.map(event => event.toHuman(isExtended)),\n      internalError: (_this$internalError = this.internalError) === null || _this$internalError === void 0 ? void 0 : _this$internalError.message.toString(),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"module"}