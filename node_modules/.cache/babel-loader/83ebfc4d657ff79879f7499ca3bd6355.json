{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { assert, logger } from '@polkadot/util';\nimport { fetch } from '@polkadot/x-fetch';\nimport { RpcCoder } from \"../coder/index.js\";\nimport defaults from \"../defaults.js\";\nconst ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';\nconst l = logger('api-http');\n/**\n * # @polkadot/rpc-provider\n *\n * @name HttpProvider\n *\n * @description The HTTP Provider allows sending requests using HTTP to a HTTP RPC server TCP port. It does not support subscriptions so you won't be able to listen to events such as new blocks or balance changes. It is usually preferable using the [[WsProvider]].\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { HttpProvider } from '@polkadot/rpc-provider';\n *\n * const provider = new HttpProvider('http://127.0.0.1:9933');\n * const api = new Api(provider);\n * ```\n *\n * @see [[WsProvider]]\n */\n\nvar _coder = /*#__PURE__*/_classPrivateFieldLooseKey(\"coder\");\n\nvar _endpoint = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpoint\");\n\nvar _headers = /*#__PURE__*/_classPrivateFieldLooseKey(\"headers\");\n\nexport class HttpProvider {\n  /**\n   * @param {string} endpoint The endpoint url starting with http://\n   */\n  constructor(endpoint = defaults.HTTP_URL, headers = {}) {\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoint, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    assert(/^(https|http):\\/\\//.test(endpoint), () => `Endpoint should start with 'http://', received '${endpoint}'`);\n    _classPrivateFieldLooseBase(this, _coder)[_coder] = new RpcCoder();\n    _classPrivateFieldLooseBase(this, _endpoint)[_endpoint] = endpoint;\n    _classPrivateFieldLooseBase(this, _headers)[_headers] = headers;\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return false;\n  }\n  /**\n   * @description Returns a clone of the object\n   */\n\n\n  clone() {\n    return new HttpProvider(_classPrivateFieldLooseBase(this, _endpoint)[_endpoint], _classPrivateFieldLooseBase(this, _headers)[_headers]);\n  }\n  /**\n   * @description Manually connect from the connection\n   */\n\n\n  async connect() {// noop\n  }\n  /**\n   * @description Manually disconnect from the connection\n   */\n\n\n  async disconnect() {// noop\n  }\n  /**\n   * @summary Whether the node is connected or not.\n   * @return {boolean} true if connected\n   */\n\n\n  get isConnected() {\n    return true;\n  }\n  /**\n   * @summary Events are not supported with the HttpProvider, see [[WsProvider]].\n   * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  on(type, sub) {\n    l.error('HTTP Provider does not have \\'on\\' emitters, use WebSockets instead');\n    return () => {// noop\n    };\n  }\n  /**\n   * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.\n   */\n\n\n  async send(method, params) {\n    const body = _classPrivateFieldLooseBase(this, _coder)[_coder].encodeJson(method, params);\n\n    const response = await fetch(_classPrivateFieldLooseBase(this, _endpoint)[_endpoint], {\n      body,\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Length': `${body.length}`,\n        'Content-Type': 'application/json'\n      }, _classPrivateFieldLooseBase(this, _headers)[_headers]),\n      method: 'POST'\n    });\n    assert(response.ok, () => `[${response.status}]: ${response.statusText}`); // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    const result = await response.json();\n    return _classPrivateFieldLooseBase(this, _coder)[_coder].decodeResponse(result);\n  }\n  /**\n   * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await\n\n\n  async subscribe(types, method, params, cb) {\n    l.error(ERROR_SUBSCRIBE);\n    throw new Error(ERROR_SUBSCRIBE);\n  }\n  /**\n   * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await\n\n\n  async unsubscribe(type, method, id) {\n    l.error(ERROR_SUBSCRIBE);\n    throw new Error(ERROR_SUBSCRIBE);\n  }\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/rpc-provider/http/index.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","assert","logger","fetch","RpcCoder","defaults","ERROR_SUBSCRIBE","l","_coder","_endpoint","_headers","HttpProvider","constructor","endpoint","HTTP_URL","headers","writable","value","test","hasSubscriptions","clone","connect","disconnect","isConnected","on","type","sub","error","send","method","params","body","encodeJson","response","Accept","ok","status","statusText","result","json","decodeResponse","subscribe","types","cb","Error","unsubscribe","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;;AAAoD,QAAIC,cAAJ,EAAoB;AAAEI,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,eAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAAjG,CAAV;AAA+G;;AAACP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAEzV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEvB,QAAAA,eAAe,CAACiB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB,C,CAEthB;AACA;;;AACA,SAASU,MAAT,EAAiBC,MAAjB,QAA+B,gBAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,MAAMC,eAAe,GAAG,mEAAxB;AACA,MAAMC,CAAC,GAAGL,MAAM,CAAC,UAAD,CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIM,MAAM,GAAG,aAAahC,0BAA0B,CAAC,OAAD,CAApD;;AAEA,IAAIiC,SAAS,GAAG,aAAajC,0BAA0B,CAAC,UAAD,CAAvD;;AAEA,IAAIkC,QAAQ,GAAG,aAAalC,0BAA0B,CAAC,SAAD,CAAtD;;AAEA,OAAO,MAAMmC,YAAN,CAAmB;AACxB;AACF;AACA;AACEC,EAAAA,WAAW,CAACC,QAAQ,GAAGR,QAAQ,CAACS,QAArB,EAA+BC,OAAO,GAAG,EAAzC,EAA6C;AACtDlC,IAAAA,MAAM,CAACmB,cAAP,CAAsB,IAAtB,EAA4BQ,MAA5B,EAAoC;AAClCQ,MAAAA,QAAQ,EAAE,IADwB;AAElCC,MAAAA,KAAK,EAAE,KAAK;AAFsB,KAApC;AAIApC,IAAAA,MAAM,CAACmB,cAAP,CAAsB,IAAtB,EAA4BS,SAA5B,EAAuC;AACrCO,MAAAA,QAAQ,EAAE,IAD2B;AAErCC,MAAAA,KAAK,EAAE,KAAK;AAFyB,KAAvC;AAIApC,IAAAA,MAAM,CAACmB,cAAP,CAAsB,IAAtB,EAA4BU,QAA5B,EAAsC;AACpCM,MAAAA,QAAQ,EAAE,IAD0B;AAEpCC,MAAAA,KAAK,EAAE,KAAK;AAFwB,KAAtC;AAIAhB,IAAAA,MAAM,CAAC,qBAAqBiB,IAArB,CAA0BL,QAA1B,CAAD,EAAsC,MAAO,mDAAkDA,QAAS,GAAxG,CAAN;AACAtC,IAAAA,2BAA2B,CAAC,IAAD,EAAOiC,MAAP,CAA3B,CAA0CA,MAA1C,IAAoD,IAAIJ,QAAJ,EAApD;AACA7B,IAAAA,2BAA2B,CAAC,IAAD,EAAOkC,SAAP,CAA3B,CAA6CA,SAA7C,IAA0DI,QAA1D;AACAtC,IAAAA,2BAA2B,CAAC,IAAD,EAAOmC,QAAP,CAA3B,CAA4CA,QAA5C,IAAwDK,OAAxD;AACD;AACD;AACF;AACA;;;AAGsB,MAAhBI,gBAAgB,GAAG;AACrB,WAAO,KAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIT,YAAJ,CAAiBpC,2BAA2B,CAAC,IAAD,EAAOkC,SAAP,CAA3B,CAA6CA,SAA7C,CAAjB,EAA0ElC,2BAA2B,CAAC,IAAD,EAAOmC,QAAP,CAA3B,CAA4CA,QAA5C,CAA1E,CAAP;AACD;AACD;AACF;AACA;;;AAGe,QAAPW,OAAO,GAAG,CAAC;AAChB;AACD;AACF;AACA;;;AAGkB,QAAVC,UAAU,GAAG,CAAC;AACnB;AACD;AACF;AACA;AACA;;;AAGiB,MAAXC,WAAW,GAAG;AAChB,WAAO,IAAP;AACD;AACD;AACF;AACA;AACA;AACE;;;AAGAC,EAAAA,EAAE,CAACC,IAAD,EAAOC,GAAP,EAAY;AACZnB,IAAAA,CAAC,CAACoB,KAAF,CAAQ,qEAAR;AACA,WAAO,MAAM,CAAC;AACb,KADD;AAED;AACD;AACF;AACA;;;AAGY,QAAJC,IAAI,CAACC,MAAD,EAASC,MAAT,EAAiB;AACzB,UAAMC,IAAI,GAAGxD,2BAA2B,CAAC,IAAD,EAAOiC,MAAP,CAA3B,CAA0CA,MAA1C,EAAkDwB,UAAlD,CAA6DH,MAA7D,EAAqEC,MAArE,CAAb;;AAEA,UAAMG,QAAQ,GAAG,MAAM9B,KAAK,CAAC5B,2BAA2B,CAAC,IAAD,EAAOkC,SAAP,CAA3B,CAA6CA,SAA7C,CAAD,EAA0D;AACpFsB,MAAAA,IADoF;AAEpFhB,MAAAA,OAAO,EAAEzB,aAAa,CAAC;AACrB4C,QAAAA,MAAM,EAAE,kBADa;AAErB,0BAAmB,GAAEH,IAAI,CAACrC,MAAO,EAFZ;AAGrB,wBAAgB;AAHK,OAAD,EAInBnB,2BAA2B,CAAC,IAAD,EAAOmC,QAAP,CAA3B,CAA4CA,QAA5C,CAJmB,CAF8D;AAOpFmB,MAAAA,MAAM,EAAE;AAP4E,KAA1D,CAA5B;AASA5B,IAAAA,MAAM,CAACgC,QAAQ,CAACE,EAAV,EAAc,MAAO,IAAGF,QAAQ,CAACG,MAAO,MAAKH,QAAQ,CAACI,UAAW,EAAjE,CAAN,CAZyB,CAYkD;;AAE3E,UAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;AACA,WAAOhE,2BAA2B,CAAC,IAAD,EAAOiC,MAAP,CAA3B,CAA0CA,MAA1C,EAAkDgC,cAAlD,CAAiEF,MAAjE,CAAP;AACD;AACD;AACF;AACA;AACE;;;AAGe,QAATG,SAAS,CAACC,KAAD,EAAQb,MAAR,EAAgBC,MAAhB,EAAwBa,EAAxB,EAA4B;AACzCpC,IAAAA,CAAC,CAACoB,KAAF,CAAQrB,eAAR;AACA,UAAM,IAAIsC,KAAJ,CAAUtC,eAAV,CAAN;AACD;AACD;AACF;AACA;AACE;;;AAGiB,QAAXuC,WAAW,CAACpB,IAAD,EAAOI,MAAP,EAAeiB,EAAf,EAAmB;AAClCvC,IAAAA,CAAC,CAACoB,KAAF,CAAQrB,eAAR;AACA,UAAM,IAAIsC,KAAJ,CAAUtC,eAAV,CAAN;AACD;;AAlHuB","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, logger } from '@polkadot/util';\nimport { fetch } from '@polkadot/x-fetch';\nimport { RpcCoder } from \"../coder/index.js\";\nimport defaults from \"../defaults.js\";\nconst ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';\nconst l = logger('api-http');\n/**\n * # @polkadot/rpc-provider\n *\n * @name HttpProvider\n *\n * @description The HTTP Provider allows sending requests using HTTP to a HTTP RPC server TCP port. It does not support subscriptions so you won't be able to listen to events such as new blocks or balance changes. It is usually preferable using the [[WsProvider]].\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { HttpProvider } from '@polkadot/rpc-provider';\n *\n * const provider = new HttpProvider('http://127.0.0.1:9933');\n * const api = new Api(provider);\n * ```\n *\n * @see [[WsProvider]]\n */\n\nvar _coder = /*#__PURE__*/_classPrivateFieldLooseKey(\"coder\");\n\nvar _endpoint = /*#__PURE__*/_classPrivateFieldLooseKey(\"endpoint\");\n\nvar _headers = /*#__PURE__*/_classPrivateFieldLooseKey(\"headers\");\n\nexport class HttpProvider {\n  /**\n   * @param {string} endpoint The endpoint url starting with http://\n   */\n  constructor(endpoint = defaults.HTTP_URL, headers = {}) {\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoint, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    assert(/^(https|http):\\/\\//.test(endpoint), () => `Endpoint should start with 'http://', received '${endpoint}'`);\n    _classPrivateFieldLooseBase(this, _coder)[_coder] = new RpcCoder();\n    _classPrivateFieldLooseBase(this, _endpoint)[_endpoint] = endpoint;\n    _classPrivateFieldLooseBase(this, _headers)[_headers] = headers;\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return false;\n  }\n  /**\n   * @description Returns a clone of the object\n   */\n\n\n  clone() {\n    return new HttpProvider(_classPrivateFieldLooseBase(this, _endpoint)[_endpoint], _classPrivateFieldLooseBase(this, _headers)[_headers]);\n  }\n  /**\n   * @description Manually connect from the connection\n   */\n\n\n  async connect() {// noop\n  }\n  /**\n   * @description Manually disconnect from the connection\n   */\n\n\n  async disconnect() {// noop\n  }\n  /**\n   * @summary Whether the node is connected or not.\n   * @return {boolean} true if connected\n   */\n\n\n  get isConnected() {\n    return true;\n  }\n  /**\n   * @summary Events are not supported with the HttpProvider, see [[WsProvider]].\n   * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  on(type, sub) {\n    l.error('HTTP Provider does not have \\'on\\' emitters, use WebSockets instead');\n    return () => {// noop\n    };\n  }\n  /**\n   * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.\n   */\n\n\n  async send(method, params) {\n    const body = _classPrivateFieldLooseBase(this, _coder)[_coder].encodeJson(method, params);\n\n    const response = await fetch(_classPrivateFieldLooseBase(this, _endpoint)[_endpoint], {\n      body,\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Length': `${body.length}`,\n        'Content-Type': 'application/json'\n      }, _classPrivateFieldLooseBase(this, _headers)[_headers]),\n      method: 'POST'\n    });\n    assert(response.ok, () => `[${response.status}]: ${response.statusText}`); // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    const result = await response.json();\n    return _classPrivateFieldLooseBase(this, _coder)[_coder].decodeResponse(result);\n  }\n  /**\n   * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await\n\n\n  async subscribe(types, method, params, cb) {\n    l.error(ERROR_SUBSCRIBE);\n    throw new Error(ERROR_SUBSCRIBE);\n  }\n  /**\n   * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await\n\n\n  async unsubscribe(type, method, id) {\n    l.error(ERROR_SUBSCRIBE);\n    throw new Error(ERROR_SUBSCRIBE);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}