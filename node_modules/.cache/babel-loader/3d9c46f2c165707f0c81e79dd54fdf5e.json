{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of } from 'rxjs';\nimport { createHeaderExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\n\nexport function subscribeNewHeads(instanceId, api) {\n  return memo(instanceId, () => combineLatest([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : of(undefined)]).pipe(map(([header, validators]) => {\n    header.createdAtHash = header.hash;\n    return createHeaderExtended(header.registry, header, validators);\n  })));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/chain/subscribeNewHeads.js"],"names":["combineLatest","map","of","createHeaderExtended","memo","subscribeNewHeads","instanceId","api","rpc","chain","query","session","validators","undefined","pipe","header","createdAtHash","hash","registry"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,QAAuC,MAAvC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,GAAvC,EAA4C;AACjD,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAMN,aAAa,CAAC,CAACO,GAAG,CAACC,GAAJ,CAAQC,KAAR,CAAcJ,iBAAd,EAAD,EAAoCE,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoBJ,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBC,UAAlB,EAApB,GAAqDV,EAAE,CAACW,SAAD,CAA3F,CAAD,CAAb,CAAuHC,IAAvH,CAA4Hb,GAAG,CAAC,CAAC,CAACc,MAAD,EAASH,UAAT,CAAD,KAA0B;AACtLG,IAAAA,MAAM,CAACC,aAAP,GAAuBD,MAAM,CAACE,IAA9B;AACA,WAAOd,oBAAoB,CAACY,MAAM,CAACG,QAAR,EAAkBH,MAAlB,EAA0BH,UAA1B,CAA3B;AACD,GAH4J,CAA/H,CAAnB,CAAX;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of } from 'rxjs';\nimport { createHeaderExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\n\nexport function subscribeNewHeads(instanceId, api) {\n  return memo(instanceId, () => combineLatest([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : of(undefined)]).pipe(map(([header, validators]) => {\n    header.createdAtHash = header.hash;\n    return createHeaderExtended(header.registry, header, validators);\n  })));\n}"]},"metadata":{},"sourceType":"module"}