{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport scryptsy from 'scryptsy';\nimport { bufferToU8a, u8aToBuffer, u8aToU8a } from '@polkadot/util';\nimport { isReady, scrypt } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptEncode(passphrase, salt = randomAsU8a(), params = DEFAULT_PARAMS) {\n  const password = isReady() ? scrypt(u8aToU8a(passphrase), salt, Math.log2(params.N), params.r, params.p) : bufferToU8a(scryptsy(u8aToBuffer(u8aToU8a(passphrase)), u8aToBuffer(salt), params.N, params.r, params.p, 64));\n  return {\n    params,\n    password,\n    salt\n  };\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/scrypt/encode.js"],"names":["scryptsy","bufferToU8a","u8aToBuffer","u8aToU8a","isReady","scrypt","randomAsU8a","DEFAULT_PARAMS","scryptEncode","passphrase","salt","params","password","Math","log2","N","r","p"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,gBAAnD;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,uBAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,IAAI,GAAGJ,WAAW,EAApD,EAAwDK,MAAM,GAAGJ,cAAjE,EAAiF;AACtF,QAAMK,QAAQ,GAAGR,OAAO,KAAKC,MAAM,CAACF,QAAQ,CAACM,UAAD,CAAT,EAAuBC,IAAvB,EAA6BG,IAAI,CAACC,IAAL,CAAUH,MAAM,CAACI,CAAjB,CAA7B,EAAkDJ,MAAM,CAACK,CAAzD,EAA4DL,MAAM,CAACM,CAAnE,CAAX,GAAmFhB,WAAW,CAACD,QAAQ,CAACE,WAAW,CAACC,QAAQ,CAACM,UAAD,CAAT,CAAZ,EAAoCP,WAAW,CAACQ,IAAD,CAA/C,EAAuDC,MAAM,CAACI,CAA9D,EAAiEJ,MAAM,CAACK,CAAxE,EAA2EL,MAAM,CAACM,CAAlF,EAAqF,EAArF,CAAT,CAAtH;AACA,SAAO;AACLN,IAAAA,MADK;AAELC,IAAAA,QAFK;AAGLF,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport scryptsy from 'scryptsy';\nimport { bufferToU8a, u8aToBuffer, u8aToU8a } from '@polkadot/util';\nimport { isReady, scrypt } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptEncode(passphrase, salt = randomAsU8a(), params = DEFAULT_PARAMS) {\n  const password = isReady() ? scrypt(u8aToU8a(passphrase), salt, Math.log2(params.N), params.r, params.p) : bufferToU8a(scryptsy(u8aToBuffer(u8aToU8a(passphrase)), u8aToBuffer(salt), params.N, params.r, params.p, 64));\n  return {\n    params,\n    password,\n    salt\n  };\n}"]},"metadata":{},"sourceType":"module"}