{"ast":null,"code":"import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function sample(notifier) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var lastValue = null;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      hasValue = true;\n      lastValue = value;\n    }));\n\n    var emit = function () {\n      if (hasValue) {\n        hasValue = false;\n        var value = lastValue;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    notifier.subscribe(new OperatorSubscriber(subscriber, emit, noop));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/sample.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAwCA,OAAM,SAAU,MAAV,CAAoB,QAApB,EAA6C;AACjD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAI,QAAQ,GAAG,KAAf;AACA,QAAI,SAAS,GAAa,IAA1B;AACA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AACvC,MAAA,QAAQ,GAAG,IAAX;AACA,MAAA,SAAS,GAAG,KAAZ;AACD,KAHD,CADF;;AAMA,QAAM,IAAI,GAAG,YAAA;AACX,UAAI,QAAJ,EAAc;AACZ,QAAA,QAAQ,GAAG,KAAX;AACA,YAAM,KAAK,GAAG,SAAd;AACA,QAAA,SAAS,GAAG,IAAZ;AACA,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACD;AACF,KAPD;;AAQA,IAAA,QAAQ,CAAC,SAAT,CAAmB,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,IAAnC,EAAyC,IAAzC,CAAnB;AACD,GAlBa,CAAd;AAmBD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function sample(notifier) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var lastValue = null;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            lastValue = value;\n        }));\n        var emit = function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        notifier.subscribe(new OperatorSubscriber(subscriber, emit, noop));\n    });\n}\n//# sourceMappingURL=sample.js.map"]},"metadata":{},"sourceType":"module"}