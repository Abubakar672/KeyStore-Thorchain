{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Prefix;\n\n(function (Prefix) {\n  Prefix[\"Cosmos\"] = \"cosmos\";\n  Prefix[\"Public\"] = \"pub\";\n  Prefix[\"Account\"] = \"acc\";\n  Prefix[\"Validator\"] = \"val\";\n  Prefix[\"Operator\"] = \"oper\";\n  Prefix[\"Consensus\"] = \"cons\";\n})(Prefix = exports.Prefix || (exports.Prefix = {}));\n\nexports.bech32Prefix = {\n  accAddr: Prefix.Cosmos,\n  accPub: Prefix.Cosmos + Prefix.Public,\n  valAddr: Prefix.Cosmos + Prefix.Validator + Prefix.Operator,\n  valPub: Prefix.Cosmos + Prefix.Validator + Prefix.Operator + Prefix.Public,\n  consAddr: Prefix.Cosmos + Prefix.Validator + Prefix.Consensus,\n  consPub: Prefix.Cosmos + Prefix.Validator + Prefix.Consensus + Prefix.Public\n};\n/**\n * 各種アドレスの基底クラス。\n */\n\nvar Address =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param value\n   */\n  function Address(value) {\n    var addressLength = 20;\n\n    if (value.length !== addressLength) {\n      throw Error(\"Address must be 20 bytes length.\");\n    }\n\n    this._value = value;\n  }\n  /**\n   *\n   * @param pubKey\n   */\n\n\n  Address.fromPublicKey = function (pubKey) {\n    return new Address(pubKey.getAddress());\n  };\n  /**\n   *\n   * @param accAddr\n   * @param accPub\n   * @param valAddr\n   * @param valPub\n   * @param consAddr\n   * @param consPub\n   */\n\n\n  Address.setBech32Prefix = function (accAddr, accPub, valAddr, valPub, consAddr, consPub) {\n    exports.bech32Prefix.accAddr = accAddr;\n    exports.bech32Prefix.accPub = accPub;\n    exports.bech32Prefix.valAddr = valAddr;\n    exports.bech32Prefix.valPub = valPub;\n    exports.bech32Prefix.consAddr = consAddr;\n    exports.bech32Prefix.consPub = consPub;\n  };\n\n  return Address;\n}();\n\nexports.Address = Address;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/cosmos-client/types/address/address.js"],"names":["Object","defineProperty","exports","value","Prefix","bech32Prefix","accAddr","Cosmos","accPub","Public","valAddr","Validator","Operator","valPub","consAddr","Consensus","consPub","Address","addressLength","length","Error","_value","fromPublicKey","pubKey","getAddress","setBech32Prefix"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,MAAJ;;AACA,CAAC,UAAUA,MAAV,EAAkB;AACfA,EAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,QAAnB;AACAA,EAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,KAAnB;AACAA,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,KAApB;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,KAAtB;AACAA,EAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,MAArB;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,MAAtB;AACH,CAPD,EAOGA,MAAM,GAAGF,OAAO,CAACE,MAAR,KAAmBF,OAAO,CAACE,MAAR,GAAiB,EAApC,CAPZ;;AAQAF,OAAO,CAACG,YAAR,GAAuB;AACnBC,EAAAA,OAAO,EAAEF,MAAM,CAACG,MADG;AAEnBC,EAAAA,MAAM,EAAEJ,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACK,MAFZ;AAGnBC,EAAAA,OAAO,EAAEN,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACO,SAAvB,GAAmCP,MAAM,CAACQ,QAHhC;AAInBC,EAAAA,MAAM,EAAET,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACO,SAAvB,GAAmCP,MAAM,CAACQ,QAA1C,GAAqDR,MAAM,CAACK,MAJjD;AAKnBK,EAAAA,QAAQ,EAAEV,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACO,SAAvB,GAAmCP,MAAM,CAACW,SALjC;AAMnBC,EAAAA,OAAO,EAAEZ,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACO,SAAvB,GAAmCP,MAAM,CAACW,SAA1C,GAAsDX,MAAM,CAACK;AANnD,CAAvB;AAQA;AACA;AACA;;AACA,IAAIQ,OAAO;AAAG;AAAe,YAAY;AACrC;AACJ;AACA;AACA;AACI,WAASA,OAAT,CAAiBd,KAAjB,EAAwB;AACpB,QAAIe,aAAa,GAAG,EAApB;;AACA,QAAIf,KAAK,CAACgB,MAAN,KAAiBD,aAArB,EAAoC;AAChC,YAAME,KAAK,CAAC,kCAAD,CAAX;AACH;;AACD,SAAKC,MAAL,GAAclB,KAAd;AACH;AACD;AACJ;AACA;AACA;;;AACIc,EAAAA,OAAO,CAACK,aAAR,GAAwB,UAAUC,MAAV,EAAkB;AACtC,WAAO,IAAIN,OAAJ,CAAYM,MAAM,CAACC,UAAP,EAAZ,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIP,EAAAA,OAAO,CAACQ,eAAR,GAA0B,UAAUnB,OAAV,EAAmBE,MAAnB,EAA2BE,OAA3B,EAAoCG,MAApC,EAA4CC,QAA5C,EAAsDE,OAAtD,EAA+D;AACrFd,IAAAA,OAAO,CAACG,YAAR,CAAqBC,OAArB,GAA+BA,OAA/B;AACAJ,IAAAA,OAAO,CAACG,YAAR,CAAqBG,MAArB,GAA8BA,MAA9B;AACAN,IAAAA,OAAO,CAACG,YAAR,CAAqBK,OAArB,GAA+BA,OAA/B;AACAR,IAAAA,OAAO,CAACG,YAAR,CAAqBQ,MAArB,GAA8BA,MAA9B;AACAX,IAAAA,OAAO,CAACG,YAAR,CAAqBS,QAArB,GAAgCA,QAAhC;AACAZ,IAAAA,OAAO,CAACG,YAAR,CAAqBW,OAArB,GAA+BA,OAA/B;AACH,GAPD;;AAQA,SAAOC,OAAP;AACH,CArC4B,EAA7B;;AAsCAf,OAAO,CAACe,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Prefix;\n(function (Prefix) {\n    Prefix[\"Cosmos\"] = \"cosmos\";\n    Prefix[\"Public\"] = \"pub\";\n    Prefix[\"Account\"] = \"acc\";\n    Prefix[\"Validator\"] = \"val\";\n    Prefix[\"Operator\"] = \"oper\";\n    Prefix[\"Consensus\"] = \"cons\";\n})(Prefix = exports.Prefix || (exports.Prefix = {}));\nexports.bech32Prefix = {\n    accAddr: Prefix.Cosmos,\n    accPub: Prefix.Cosmos + Prefix.Public,\n    valAddr: Prefix.Cosmos + Prefix.Validator + Prefix.Operator,\n    valPub: Prefix.Cosmos + Prefix.Validator + Prefix.Operator + Prefix.Public,\n    consAddr: Prefix.Cosmos + Prefix.Validator + Prefix.Consensus,\n    consPub: Prefix.Cosmos + Prefix.Validator + Prefix.Consensus + Prefix.Public,\n};\n/**\n * 各種アドレスの基底クラス。\n */\nvar Address = /** @class */ (function () {\n    /**\n     *\n     * @param value\n     */\n    function Address(value) {\n        var addressLength = 20;\n        if (value.length !== addressLength) {\n            throw Error(\"Address must be 20 bytes length.\");\n        }\n        this._value = value;\n    }\n    /**\n     *\n     * @param pubKey\n     */\n    Address.fromPublicKey = function (pubKey) {\n        return new Address(pubKey.getAddress());\n    };\n    /**\n     *\n     * @param accAddr\n     * @param accPub\n     * @param valAddr\n     * @param valPub\n     * @param consAddr\n     * @param consPub\n     */\n    Address.setBech32Prefix = function (accAddr, accPub, valAddr, valPub, consAddr, consPub) {\n        exports.bech32Prefix.accAddr = accAddr;\n        exports.bech32Prefix.accPub = accPub;\n        exports.bech32Prefix.valAddr = valAddr;\n        exports.bech32Prefix.valPub = valPub;\n        exports.bech32Prefix.consAddr = consAddr;\n        exports.bech32Prefix.consPub = consPub;\n    };\n    return Address;\n}());\nexports.Address = Address;\n"]},"metadata":{},"sourceType":"script"}