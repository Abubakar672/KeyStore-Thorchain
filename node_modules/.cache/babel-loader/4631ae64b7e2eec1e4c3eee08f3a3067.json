{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// As per frontier\nimport { rpc } from \"./rpc.js\";\nconst types = {\n  EthereumAccountId: 'GenericEthereumAccountId',\n  EthereumLookupSource: 'GenericEthereumLookupSource',\n  EthereumSignature: '[u8; 65]',\n  EthAccount: {\n    address: 'H160',\n    balance: 'U256',\n    nonce: 'U256',\n    codeHash: 'H256',\n    storageHash: 'H256',\n    accountProof: 'Vec<Bytes>',\n    storageProof: 'Vec<EthStorageProof>'\n  },\n  EthBlock: {\n    header: 'EthHeader',\n    transactions: 'Vec<EthTransaction>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EthHeader: {\n    parentHash: 'H256',\n    ommersHash: 'H256',\n    beneficiary: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    logsBloom: 'EthBloom',\n    difficulty: 'U256',\n    number: 'U256',\n    gasLimit: 'U256',\n    gasUsed: 'U256',\n    timestamp: 'u64',\n    extraData: 'Bytes',\n    mixMash: 'H256',\n    nonce: 'H64'\n  },\n  EthRichBlock: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'H160',\n    miner: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    totalDifficulty: 'Option<U256>',\n    sealFields: 'Vec<Bytes>',\n    uncles: 'Vec<H256>',\n    transactions: 'Vec<EthTransaction>',\n    blockSize: 'Option<U256>'\n  },\n  EthBloom: 'H2048',\n  EthCallRequest: {\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthFilter: {\n    fromBlock: 'Option<BlockNumber>',\n    toBlock: 'Option<BlockNumber>',\n    blockHash: 'Option<H256>',\n    address: 'Option<EthFilterAddress>',\n    topics: 'Option<EthFilterTopic>'\n  },\n  EthFilterAddress: {\n    _enum: {\n      Single: 'H160',\n      Multiple: 'Vec<H160>',\n      Null: 'Null'\n    }\n  },\n  EthFilterChanges: {\n    _enum: {\n      Logs: 'Vec<EthLog>',\n      Hashes: 'Vec<H256>',\n      Empty: 'Null'\n    }\n  },\n  EthFilterTopic: {\n    _enum: {\n      Single: 'EthFilterTopicInner',\n      Multiple: 'Vec<EthFilterTopicInner>',\n      Null: 'Null'\n    }\n  },\n  EthFilterTopicEntry: 'Option<H256>',\n  EthFilterTopicInner: {\n    _enum: {\n      Single: 'EthFilterTopicEntry',\n      Multiple: 'Vec<EthFilterTopicEntry>',\n      Null: 'Null'\n    }\n  },\n  EthRichHeader: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'H160',\n    miner: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    sealFields: 'Vec<Bytes>',\n    blockSize: 'Option<U256>'\n  },\n  EthLog: {\n    address: 'H160',\n    topics: 'Vec<H256>',\n    data: 'Bytes',\n    blockHash: 'Option<H256>',\n    blockNumber: 'Option<U256>',\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    logIndex: 'Option<U256>',\n    transactionLogIndex: 'Option<U256>',\n    removed: 'bool'\n  },\n  EthReceipt: {\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    blockHash: 'Option<H256>',\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    blockNumber: 'Option<U256>',\n    cumulativeGasUsed: 'U256',\n    gasUsed: 'Option<U256>',\n    contractAddress: 'Option<H160>',\n    logs: 'Vec<EthLog>',\n    root: 'Option<H256>',\n    logsBloom: 'EthBloom',\n    statusCode: 'Option<U64>'\n  },\n  EthStorageProof: {\n    key: 'U256',\n    value: 'U256',\n    proof: 'Vec<Bytes>'\n  },\n  EthSubKind: {\n    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n  },\n  EthSubParams: {\n    _enum: {\n      None: 'Null',\n      Logs: 'EthFilter'\n    }\n  },\n  EthSubResult: {\n    _enum: {\n      Header: 'EthRichHeader',\n      Log: 'EthLog',\n      TransactionHash: 'H256',\n      SyncState: 'EthSyncStatus'\n    }\n  },\n  EthSyncInfo: {\n    startingBlock: 'U256',\n    currentBlock: 'U256',\n    highestBlock: 'U256',\n    warpChunksAmount: 'Option<U256>',\n    warpChunksProcessed: 'Option<U256>'\n  },\n  EthSyncStatus: {\n    _enum: {\n      Info: 'EthSyncInfo',\n      None: 'Null'\n    }\n  },\n  EthTransaction: {\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    signature: 'EthTransactionSignature'\n  },\n  EthTransactionSignature: {\n    v: 'u64',\n    r: 'H256',\n    s: 'H256'\n  },\n  EthTransactionAction: {\n    _enum: {\n      Call: 'H160',\n      Create: 'Null'\n    }\n  },\n  EthTransactionCondition: {\n    _enum: {\n      block: 'u64',\n      time: 'u64'\n    }\n  },\n  EthTransactionRequest: {\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthTransactionStatus: {\n    transactionHash: 'H256',\n    transactionIndex: 'u32',\n    from: 'H160',\n    to: 'Option<H160>',\n    contractAddress: 'Option<H160>',\n    logs: 'Vec<EthLog>',\n    logsBloom: 'EthBloom'\n  },\n  EthWork: {\n    powHash: 'H256',\n    seedHash: 'H256',\n    target: 'H256',\n    number: 'Option<u64>'\n  }\n};\nexport default {\n  rpc,\n  types\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/eth/definitions.js"],"names":["rpc","types","EthereumAccountId","EthereumLookupSource","EthereumSignature","EthAccount","address","balance","nonce","codeHash","storageHash","accountProof","storageProof","EthBlock","header","transactions","ommers","EthHeader","parentHash","ommersHash","beneficiary","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","gasLimit","gasUsed","timestamp","extraData","mixMash","EthRichBlock","_alias","blockHash","blockSize","sha3Uncles","author","miner","totalDifficulty","sealFields","uncles","EthBloom","EthCallRequest","from","to","gasPrice","gas","value","data","EthFilter","fromBlock","toBlock","topics","EthFilterAddress","_enum","Single","Multiple","Null","EthFilterChanges","Logs","Hashes","Empty","EthFilterTopic","EthFilterTopicEntry","EthFilterTopicInner","EthRichHeader","EthLog","blockNumber","transactionHash","transactionIndex","logIndex","transactionLogIndex","removed","EthReceipt","cumulativeGasUsed","contractAddress","logs","root","statusCode","EthStorageProof","key","proof","EthSubKind","EthSubParams","None","EthSubResult","Header","Log","TransactionHash","SyncState","EthSyncInfo","startingBlock","currentBlock","highestBlock","warpChunksAmount","warpChunksProcessed","EthSyncStatus","Info","EthTransaction","action","input","signature","EthTransactionSignature","v","r","s","EthTransactionAction","Call","Create","EthTransactionCondition","block","time","EthTransactionRequest","EthTransactionStatus","EthWork","powHash","seedHash","target"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// As per frontier\nimport { rpc } from \"./rpc.js\";\nconst types = {\n  EthereumAccountId: 'GenericEthereumAccountId',\n  EthereumLookupSource: 'GenericEthereumLookupSource',\n  EthereumSignature: '[u8; 65]',\n  EthAccount: {\n    address: 'H160',\n    balance: 'U256',\n    nonce: 'U256',\n    codeHash: 'H256',\n    storageHash: 'H256',\n    accountProof: 'Vec<Bytes>',\n    storageProof: 'Vec<EthStorageProof>'\n  },\n  EthBlock: {\n    header: 'EthHeader',\n    transactions: 'Vec<EthTransaction>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EthHeader: {\n    parentHash: 'H256',\n    ommersHash: 'H256',\n    beneficiary: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    logsBloom: 'EthBloom',\n    difficulty: 'U256',\n    number: 'U256',\n    gasLimit: 'U256',\n    gasUsed: 'U256',\n    timestamp: 'u64',\n    extraData: 'Bytes',\n    mixMash: 'H256',\n    nonce: 'H64'\n  },\n  EthRichBlock: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'H160',\n    miner: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    totalDifficulty: 'Option<U256>',\n    sealFields: 'Vec<Bytes>',\n    uncles: 'Vec<H256>',\n    transactions: 'Vec<EthTransaction>',\n    blockSize: 'Option<U256>'\n  },\n  EthBloom: 'H2048',\n  EthCallRequest: {\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthFilter: {\n    fromBlock: 'Option<BlockNumber>',\n    toBlock: 'Option<BlockNumber>',\n    blockHash: 'Option<H256>',\n    address: 'Option<EthFilterAddress>',\n    topics: 'Option<EthFilterTopic>'\n  },\n  EthFilterAddress: {\n    _enum: {\n      Single: 'H160',\n      Multiple: 'Vec<H160>',\n      Null: 'Null'\n    }\n  },\n  EthFilterChanges: {\n    _enum: {\n      Logs: 'Vec<EthLog>',\n      Hashes: 'Vec<H256>',\n      Empty: 'Null'\n    }\n  },\n  EthFilterTopic: {\n    _enum: {\n      Single: 'EthFilterTopicInner',\n      Multiple: 'Vec<EthFilterTopicInner>',\n      Null: 'Null'\n    }\n  },\n  EthFilterTopicEntry: 'Option<H256>',\n  EthFilterTopicInner: {\n    _enum: {\n      Single: 'EthFilterTopicEntry',\n      Multiple: 'Vec<EthFilterTopicEntry>',\n      Null: 'Null'\n    }\n  },\n  EthRichHeader: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'H160',\n    miner: 'H160',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    sealFields: 'Vec<Bytes>',\n    blockSize: 'Option<U256>'\n  },\n  EthLog: {\n    address: 'H160',\n    topics: 'Vec<H256>',\n    data: 'Bytes',\n    blockHash: 'Option<H256>',\n    blockNumber: 'Option<U256>',\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    logIndex: 'Option<U256>',\n    transactionLogIndex: 'Option<U256>',\n    removed: 'bool'\n  },\n  EthReceipt: {\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    blockHash: 'Option<H256>',\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    blockNumber: 'Option<U256>',\n    cumulativeGasUsed: 'U256',\n    gasUsed: 'Option<U256>',\n    contractAddress: 'Option<H160>',\n    logs: 'Vec<EthLog>',\n    root: 'Option<H256>',\n    logsBloom: 'EthBloom',\n    statusCode: 'Option<U64>'\n  },\n  EthStorageProof: {\n    key: 'U256',\n    value: 'U256',\n    proof: 'Vec<Bytes>'\n  },\n  EthSubKind: {\n    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n  },\n  EthSubParams: {\n    _enum: {\n      None: 'Null',\n      Logs: 'EthFilter'\n    }\n  },\n  EthSubResult: {\n    _enum: {\n      Header: 'EthRichHeader',\n      Log: 'EthLog',\n      TransactionHash: 'H256',\n      SyncState: 'EthSyncStatus'\n    }\n  },\n  EthSyncInfo: {\n    startingBlock: 'U256',\n    currentBlock: 'U256',\n    highestBlock: 'U256',\n    warpChunksAmount: 'Option<U256>',\n    warpChunksProcessed: 'Option<U256>'\n  },\n  EthSyncStatus: {\n    _enum: {\n      Info: 'EthSyncInfo',\n      None: 'Null'\n    }\n  },\n  EthTransaction: {\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    signature: 'EthTransactionSignature'\n  },\n  EthTransactionSignature: {\n    v: 'u64',\n    r: 'H256',\n    s: 'H256'\n  },\n  EthTransactionAction: {\n    _enum: {\n      Call: 'H160',\n      Create: 'Null'\n    }\n  },\n  EthTransactionCondition: {\n    _enum: {\n      block: 'u64',\n      time: 'u64'\n    }\n  },\n  EthTransactionRequest: {\n    from: 'Option<H160>',\n    to: 'Option<H160>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthTransactionStatus: {\n    transactionHash: 'H256',\n    transactionIndex: 'u32',\n    from: 'H160',\n    to: 'Option<H160>',\n    contractAddress: 'Option<H160>',\n    logs: 'Vec<EthLog>',\n    logsBloom: 'EthBloom'\n  },\n  EthWork: {\n    powHash: 'H256',\n    seedHash: 'H256',\n    target: 'H256',\n    number: 'Option<u64>'\n  }\n};\nexport default {\n  rpc,\n  types\n};"]},"metadata":{},"sourceType":"module"}