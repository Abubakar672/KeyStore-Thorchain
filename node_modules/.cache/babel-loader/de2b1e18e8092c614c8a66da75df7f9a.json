{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nimport { u8aConcat } from \"./concat.js\";\nimport { u8aEq } from \"./eq.js\";\nimport { u8aToU8a } from \"./toU8a.js\";\nexport const U8A_WRAP_ETHEREUM = u8aToU8a('\\x19Ethereum Signed Message:\\n');\nexport const U8A_WRAP_PREFIX = u8aToU8a('<Bytes>');\nexport const U8A_WRAP_POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\nexport function u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\nexport function u8aUnwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\nexport function u8aWrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : u8aConcat(U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/u8a/wrap.js"],"names":["u8aConcat","u8aEq","u8aToU8a","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","length","u8aIsWrapped","u8a","withEthereum","subarray","slice","u8aUnwrapBytes","bytes","u8aWrapBytes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,MAAMC,iBAAiB,GAAGD,QAAQ,CAAC,gCAAD,CAAlC;AACP,OAAO,MAAME,eAAe,GAAGF,QAAQ,CAAC,SAAD,CAAhC;AACP,OAAO,MAAMG,gBAAgB,GAAGH,QAAQ,CAAC,UAAD,CAAjC;AACP,MAAMI,QAAQ,GAAGF,eAAe,CAACG,MAAhB,GAAyBF,gBAAgB,CAACE,MAA3D;AACA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,YAA3B,EAAyC;AAC9C,SAAOD,GAAG,CAACF,MAAJ,IAAcD,QAAd,IAA0BL,KAAK,CAACQ,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBP,eAAe,CAACG,MAAhC,CAAD,EAA0CH,eAA1C,CAA/B,IAA6FH,KAAK,CAACQ,GAAG,CAACG,KAAJ,CAAU,CAACP,gBAAgB,CAACE,MAA5B,CAAD,EAAsCF,gBAAtC,CAAlG,IAA6JK,YAAY,IAAID,GAAG,CAACF,MAAJ,IAAcJ,iBAAiB,CAACI,MAAhD,IAA0DN,KAAK,CAACQ,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBR,iBAAiB,CAACI,MAAlC,CAAD,EAA4CJ,iBAA5C,CAAnO;AACD;AACD,OAAO,SAASU,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,QAAML,GAAG,GAAGP,QAAQ,CAACY,KAAD,CAApB,CADoC,CACP;;AAE7B,SAAON,YAAY,CAACC,GAAD,EAAM,KAAN,CAAZ,GAA2BA,GAAG,CAACE,QAAJ,CAAaP,eAAe,CAACG,MAA7B,EAAqCE,GAAG,CAACF,MAAJ,GAAaF,gBAAgB,CAACE,MAAnE,CAA3B,GAAwGE,GAA/G;AACD;AACD,OAAO,SAASM,YAAT,CAAsBD,KAAtB,EAA6B;AAClC,QAAML,GAAG,GAAGP,QAAQ,CAACY,KAAD,CAApB,CADkC,CACL;;AAE7B,SAAON,YAAY,CAACC,GAAD,EAAM,IAAN,CAAZ,GAA0BA,GAA1B,GAAgCT,SAAS,CAACI,eAAD,EAAkBK,GAAlB,EAAuBJ,gBAAvB,CAAhD;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nimport { u8aConcat } from \"./concat.js\";\nimport { u8aEq } from \"./eq.js\";\nimport { u8aToU8a } from \"./toU8a.js\";\nexport const U8A_WRAP_ETHEREUM = u8aToU8a('\\x19Ethereum Signed Message:\\n');\nexport const U8A_WRAP_PREFIX = u8aToU8a('<Bytes>');\nexport const U8A_WRAP_POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\nexport function u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\nexport function u8aUnwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\nexport function u8aWrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : u8aConcat(U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX);\n}"]},"metadata":{},"sourceType":"module"}