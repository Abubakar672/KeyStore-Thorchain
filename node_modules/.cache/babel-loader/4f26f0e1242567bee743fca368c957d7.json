{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { bnToBn, isNull, isUndefined } from '@polkadot/util';\nimport typesChain from \"./chain/index.js\";\nimport typesModules from \"./modules.js\";\nimport typesSpec from \"./spec/index.js\";\nimport upgrades from \"./upgrades/index.js\";\nexport { knownOrigins } from \"./knownOrigins.js\";\nexport { packageInfo } from \"./packageInfo.js\"; // flatten a VersionedType[] into a Record<string, string>\n\n/** @internal */\n\nfunction filterVersions(versions = [], specVersion) {\n  return versions.filter(({\n    minmax: [min, max]\n  }) => (isUndefined(min) || isNull(min) || specVersion >= min) && (isUndefined(max) || isNull(max) || specVersion <= max)).reduce((result, {\n    types\n  }) => _objectSpread(_objectSpread({}, result), types), {});\n}\n/**\n * @description Get types for specific modules (metadata override)\n */\n\n\nexport function getModuleTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return _objectSpread(_objectSpread({}, typesModules[section] || {}), ((_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\n\nexport function getSpecExtensions({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[_specName]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions) || {}), ((_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[_chainName]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\n\nexport function getSpecTypes({\n  knownTypes\n}, chainName, specName, specVersion) {\n  var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  const _specVersion = bnToBn(specVersion).toNumber(); // The order here is always, based on -\n  //   - spec then chain\n  //   - typesBundle takes higher precedence\n  //   - types is the final catch-all override\n\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, filterVersions(typesSpec[_specName], _specVersion)), filterVersions(typesChain[_chainName], _specVersion)), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[_specName]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion)), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[_chainName]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion)), ((_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[_specName]) || {}), ((_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[_chainName]) || {}), knownTypes.types || {});\n}\nexport function getSpecHasher({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return knownTypes.hasher || ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.chain) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[_chainName]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.hasher) || ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.spec) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[_specName]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.hasher) || null;\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\n\nexport function getSpecRpc({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[_specName]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.rpc) || {}), ((_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[_chainName]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.rpc) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\n\nexport function getSpecAlias({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund25, _knownTypes$typesBund26, _knownTypes$typesBund27, _knownTypes$typesBund28, _knownTypes$typesBund29, _knownTypes$typesBund30;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString(); // as per versions, first spec, then chain then finally non-versioned\n\n\n  return _objectSpread(_objectSpread(_objectSpread({}, ((_knownTypes$typesBund25 = knownTypes.typesBundle) === null || _knownTypes$typesBund25 === void 0 ? void 0 : (_knownTypes$typesBund26 = _knownTypes$typesBund25.spec) === null || _knownTypes$typesBund26 === void 0 ? void 0 : (_knownTypes$typesBund27 = _knownTypes$typesBund26[_specName]) === null || _knownTypes$typesBund27 === void 0 ? void 0 : _knownTypes$typesBund27.alias) || {}), ((_knownTypes$typesBund28 = knownTypes.typesBundle) === null || _knownTypes$typesBund28 === void 0 ? void 0 : (_knownTypes$typesBund29 = _knownTypes$typesBund28.chain) === null || _knownTypes$typesBund29 === void 0 ? void 0 : (_knownTypes$typesBund30 = _knownTypes$typesBund29[_chainName]) === null || _knownTypes$typesBund30 === void 0 ? void 0 : _knownTypes$typesBund30.alias) || {}), knownTypes.typesAlias || {});\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\n\nexport function getUpgradeVersion(genesisHash, blockNumber) {\n  const known = upgrades.find(u => genesisHash.eq(u.genesisHash));\n  return known ? [known.versions.reduce((last, version) => {\n    return blockNumber.gt(version.blockNumber) ? version : last;\n  }, undefined), known.versions.find(version => blockNumber.lte(version.blockNumber))] : [undefined, undefined];\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types-known/bundle.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","bnToBn","isNull","isUndefined","typesChain","typesModules","typesSpec","upgrades","knownOrigins","packageInfo","filterVersions","versions","specVersion","minmax","min","max","reduce","result","types","getModuleTypes","knownTypes","section","_knownTypes$typesAlia","typesAlias","getSpecExtensions","chainName","specName","_knownTypes$typesBund","_knownTypes$typesBund2","_knownTypes$typesBund3","_knownTypes$typesBund4","_knownTypes$typesBund5","_knownTypes$typesBund6","_chainName","toString","_specName","typesBundle","spec","signedExtensions","chain","getSpecTypes","_knownTypes$typesBund7","_knownTypes$typesBund8","_knownTypes$typesBund9","_knownTypes$typesBund10","_knownTypes$typesBund11","_knownTypes$typesBund12","_knownTypes$typesSpec","_knownTypes$typesChai","_specVersion","toNumber","getSpecHasher","_knownTypes$typesBund13","_knownTypes$typesBund14","_knownTypes$typesBund15","_knownTypes$typesBund16","_knownTypes$typesBund17","_knownTypes$typesBund18","hasher","getSpecRpc","_knownTypes$typesBund19","_knownTypes$typesBund20","_knownTypes$typesBund21","_knownTypes$typesBund22","_knownTypes$typesBund23","_knownTypes$typesBund24","rpc","getSpecAlias","_knownTypes$typesBund25","_knownTypes$typesBund26","_knownTypes$typesBund27","_knownTypes$typesBund28","_knownTypes$typesBund29","_knownTypes$typesBund30","alias","getUpgradeVersion","genesisHash","blockNumber","known","find","u","eq","last","version","gt","undefined","lte"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;;AAAoD,QAAIC,cAAJ,EAAoB;AAAEI,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,eAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAAjG,CAAV;AAA+G;;AAACP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAEzV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAErB,QAAAA,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB,C,CAEthB;AACA;;;AACA,SAASU,MAAT,EAAiBC,MAAjB,EAAyBC,WAAzB,QAA4C,gBAA5C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAAgD;;AAEhD;;AAEA,SAASC,cAAT,CAAwBC,QAAQ,GAAG,EAAnC,EAAuCC,WAAvC,EAAoD;AAClD,SAAOD,QAAQ,CAAC3B,MAAT,CAAgB,CAAC;AACtB6B,IAAAA,MAAM,EAAE,CAACC,GAAD,EAAMC,GAAN;AADc,GAAD,KAEjB,CAACZ,WAAW,CAACW,GAAD,CAAX,IAAoBZ,MAAM,CAACY,GAAD,CAA1B,IAAmCF,WAAW,IAAIE,GAAnD,MAA4DX,WAAW,CAACY,GAAD,CAAX,IAAoBb,MAAM,CAACa,GAAD,CAA1B,IAAmCH,WAAW,IAAIG,GAA9G,CAFC,EAEmHC,MAFnH,CAE0H,CAACC,MAAD,EAAS;AACxIC,IAAAA;AADwI,GAAT,KAE3H5B,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK2B,MAAL,CAAd,EAA4BC,KAA5B,CAJZ,EAIgD,EAJhD,CAAP;AAKD;AACD;AACA;AACA;;;AAGA,OAAO,SAASC,cAAT,CAAwB;AAC7BC,EAAAA;AAD6B,CAAxB,EAEJC,OAFI,EAEK;AACV,MAAIC,qBAAJ;;AAEA,SAAOhC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKe,YAAY,CAACgB,OAAD,CAAZ,IAAyB,EAA9B,CAAd,EAAiD,CAAC,CAACC,qBAAqB,GAAGF,UAAU,CAACG,UAApC,MAAoD,IAApD,IAA4DD,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,qBAAqB,CAACD,OAAD,CAA9H,KAA4I,EAA7L,CAApB;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASG,iBAAT,CAA2B;AAChCJ,EAAAA;AADgC,CAA3B,EAEJK,SAFI,EAEOC,QAFP,EAEiB;AACtB,MAAIC,qBAAJ,EAA2BC,sBAA3B,EAAmDC,sBAAnD,EAA2EC,sBAA3E,EAAmGC,sBAAnG,EAA2HC,sBAA3H;;AAEA,QAAMC,UAAU,GAAGR,SAAS,CAACS,QAAV,EAAnB;;AAEA,QAAMC,SAAS,GAAGT,QAAQ,CAACQ,QAAT,EAAlB;;AAEA,SAAO5C,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,CAAC,CAACqC,qBAAqB,GAAGP,UAAU,CAACgB,WAApC,MAAqD,IAArD,IAA6DT,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACU,IAAhD,MAA0D,IAA1D,IAAkET,sBAAsB,KAAK,KAAK,CAAlG,GAAsG,KAAK,CAA3G,GAA+G,CAACC,sBAAsB,GAAGD,sBAAsB,CAACO,SAAD,CAAhD,MAAiE,IAAjE,IAAyEN,sBAAsB,KAAK,KAAK,CAAzG,GAA6G,KAAK,CAAlH,GAAsHA,sBAAsB,CAACS,gBAAtW,KAA2X,EAAhY,CAAd,EAAmZ,CAAC,CAACR,sBAAsB,GAAGV,UAAU,CAACgB,WAArC,MAAsD,IAAtD,IAA8DN,sBAAsB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2G,CAACC,sBAAsB,GAAGD,sBAAsB,CAACS,KAAjD,MAA4D,IAA5D,IAAoER,sBAAsB,KAAK,KAAK,CAApG,GAAwG,KAAK,CAA7G,GAAiH,CAACC,sBAAsB,GAAGD,sBAAsB,CAACE,UAAD,CAAhD,MAAkE,IAAlE,IAA0ED,sBAAsB,KAAK,KAAK,CAA1G,GAA8G,KAAK,CAAnH,GAAuHA,sBAAsB,CAACM,gBAA3W,KAAgY,EAAnxB,CAApB;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASE,YAAT,CAAsB;AAC3BpB,EAAAA;AAD2B,CAAtB,EAEJK,SAFI,EAEOC,QAFP,EAEiBd,WAFjB,EAE8B;AACnC,MAAI6B,sBAAJ,EAA4BC,sBAA5B,EAAoDC,sBAApD,EAA4EC,uBAA5E,EAAqGC,uBAArG,EAA8HC,uBAA9H,EAAuJC,qBAAvJ,EAA8KC,qBAA9K;;AAEA,QAAMf,UAAU,GAAGR,SAAS,CAACS,QAAV,EAAnB;;AAEA,QAAMC,SAAS,GAAGT,QAAQ,CAACQ,QAAT,EAAlB;;AAEA,QAAMe,YAAY,GAAGhD,MAAM,CAACW,WAAD,CAAN,CAAoBsC,QAApB,EAArB,CAPmC,CAOkB;AACrD;AACA;AACA;;;AAGA,SAAO5D,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKoB,cAAc,CAACJ,SAAS,CAAC6B,SAAD,CAAV,EAAuBc,YAAvB,CAAnB,CAAd,EAAwEvC,cAAc,CAACN,UAAU,CAAC6B,UAAD,CAAX,EAAyBgB,YAAzB,CAAtF,CAAd,EAA6IvC,cAAc,CAAC,CAAC+B,sBAAsB,GAAGrB,UAAU,CAACgB,WAArC,MAAsD,IAAtD,IAA8DK,sBAAsB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2G,CAACC,sBAAsB,GAAGD,sBAAsB,CAACJ,IAAjD,MAA2D,IAA3D,IAAmEK,sBAAsB,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgH,CAACC,sBAAsB,GAAGD,sBAAsB,CAACP,SAAD,CAAhD,MAAiE,IAAjE,IAAyEQ,sBAAsB,KAAK,KAAK,CAAzG,GAA6G,KAAK,CAAlH,GAAsHA,sBAAsB,CAACzB,KAAzW,EAAgX+B,YAAhX,CAA3J,CAAd,EAAyiBvC,cAAc,CAAC,CAACkC,uBAAuB,GAAGxB,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DQ,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAACL,KAAnD,MAA8D,IAA9D,IAAsEM,uBAAuB,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoH,CAACC,uBAAuB,GAAGD,uBAAuB,CAACZ,UAAD,CAAlD,MAAoE,IAApE,IAA4Ea,uBAAuB,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,uBAAuB,CAAC5B,KAApX,EAA2X+B,YAA3X,CAAvjB,CAAd,EAAg9B,CAAC,CAACF,qBAAqB,GAAG3B,UAAU,CAACd,SAApC,MAAmD,IAAnD,IAA2DyC,qBAAqB,KAAK,KAAK,CAA1F,GAA8F,KAAK,CAAnG,GAAuGA,qBAAqB,CAACZ,SAAD,CAA7H,KAA6I,EAA7lC,CAAd,EAAgnC,CAAC,CAACa,qBAAqB,GAAG5B,UAAU,CAAChB,UAApC,MAAoD,IAApD,IAA4D4C,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,qBAAqB,CAACf,UAAD,CAA9H,KAA+I,EAA/vC,CAAd,EAAkxCb,UAAU,CAACF,KAAX,IAAoB,EAAtyC,CAApB;AACD;AACD,OAAO,SAASiC,aAAT,CAAuB;AAC5B/B,EAAAA;AAD4B,CAAvB,EAEJK,SAFI,EAEOC,QAFP,EAEiB;AACtB,MAAI0B,uBAAJ,EAA6BC,uBAA7B,EAAsDC,uBAAtD,EAA+EC,uBAA/E,EAAwGC,uBAAxG,EAAiIC,uBAAjI;;AAEA,QAAMxB,UAAU,GAAGR,SAAS,CAACS,QAAV,EAAnB;;AAEA,QAAMC,SAAS,GAAGT,QAAQ,CAACQ,QAAT,EAAlB;;AAEA,SAAOd,UAAU,CAACsC,MAAX,KAAsB,CAACN,uBAAuB,GAAGhC,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DgB,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAACb,KAAnD,MAA8D,IAA9D,IAAsEc,uBAAuB,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoH,CAACC,uBAAuB,GAAGD,uBAAuB,CAACpB,UAAD,CAAlD,MAAoE,IAApE,IAA4EqB,uBAAuB,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,uBAAuB,CAACI,MAAzY,MAAqZ,CAACH,uBAAuB,GAAGnC,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DmB,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAAClB,IAAnD,MAA6D,IAA7D,IAAqEmB,uBAAuB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmH,CAACC,uBAAuB,GAAGD,uBAAuB,CAACrB,SAAD,CAAlD,MAAmE,IAAnE,IAA2EsB,uBAAuB,KAAK,KAAK,CAA5G,GAAgH,KAAK,CAArH,GAAyHA,uBAAuB,CAACC,MAAtwB,KAAixB,IAAxxB;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,CAAoB;AACzBvC,EAAAA;AADyB,CAApB,EAEJK,SAFI,EAEOC,QAFP,EAEiB;AACtB,MAAIkC,uBAAJ,EAA6BC,uBAA7B,EAAsDC,uBAAtD,EAA+EC,uBAA/E,EAAwGC,uBAAxG,EAAiIC,uBAAjI;;AAEA,QAAMhC,UAAU,GAAGR,SAAS,CAACS,QAAV,EAAnB;;AAEA,QAAMC,SAAS,GAAGT,QAAQ,CAACQ,QAAT,EAAlB;;AAEA,SAAO5C,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,CAAC,CAACsE,uBAAuB,GAAGxC,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DwB,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAACvB,IAAnD,MAA6D,IAA7D,IAAqEwB,uBAAuB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmH,CAACC,uBAAuB,GAAGD,uBAAuB,CAAC1B,SAAD,CAAlD,MAAmE,IAAnE,IAA2E2B,uBAAuB,KAAK,KAAK,CAA5G,GAAgH,KAAK,CAArH,GAAyHA,uBAAuB,CAACI,GAAlX,KAA0X,EAA/X,CAAd,EAAkZ,CAAC,CAACH,uBAAuB,GAAG3C,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+D2B,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAACxB,KAAnD,MAA8D,IAA9D,IAAsEyB,uBAAuB,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoH,CAACC,uBAAuB,GAAGD,uBAAuB,CAAC/B,UAAD,CAAlD,MAAoE,IAApE,IAA4EgC,uBAAuB,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,uBAAuB,CAACC,GAApX,KAA4X,EAA9wB,CAApB;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsB;AAC3B/C,EAAAA;AAD2B,CAAtB,EAEJK,SAFI,EAEOC,QAFP,EAEiB;AACtB,MAAI0C,uBAAJ,EAA6BC,uBAA7B,EAAsDC,uBAAtD,EAA+EC,uBAA/E,EAAwGC,uBAAxG,EAAiIC,uBAAjI;;AAEA,QAAMxC,UAAU,GAAGR,SAAS,CAACS,QAAV,EAAnB;;AAEA,QAAMC,SAAS,GAAGT,QAAQ,CAACQ,QAAT,EAAlB,CALsB,CAKiB;;;AAGvC,SAAO5C,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,CAAC,CAAC8E,uBAAuB,GAAGhD,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DgC,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAAC/B,IAAnD,MAA6D,IAA7D,IAAqEgC,uBAAuB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmH,CAACC,uBAAuB,GAAGD,uBAAuB,CAAClC,SAAD,CAAlD,MAAmE,IAAnE,IAA2EmC,uBAAuB,KAAK,KAAK,CAA5G,GAAgH,KAAK,CAArH,GAAyHA,uBAAuB,CAACI,KAAlX,KAA4X,EAAjY,CAAd,EAAoZ,CAAC,CAACH,uBAAuB,GAAGnD,UAAU,CAACgB,WAAtC,MAAuD,IAAvD,IAA+DmC,uBAAuB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6G,CAACC,uBAAuB,GAAGD,uBAAuB,CAAChC,KAAnD,MAA8D,IAA9D,IAAsEiC,uBAAuB,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoH,CAACC,uBAAuB,GAAGD,uBAAuB,CAACvC,UAAD,CAAlD,MAAoE,IAApE,IAA4EwC,uBAAuB,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,uBAAuB,CAACC,KAApX,KAA8X,EAAlxB,CAAd,EAAqyBtD,UAAU,CAACG,UAAX,IAAyB,EAA9zB,CAApB;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASoD,iBAAT,CAA2BC,WAA3B,EAAwCC,WAAxC,EAAqD;AAC1D,QAAMC,KAAK,GAAGvE,QAAQ,CAACwE,IAAT,CAAcC,CAAC,IAAIJ,WAAW,CAACK,EAAZ,CAAeD,CAAC,CAACJ,WAAjB,CAAnB,CAAd;AACA,SAAOE,KAAK,GAAG,CAACA,KAAK,CAACnE,QAAN,CAAeK,MAAf,CAAsB,CAACkE,IAAD,EAAOC,OAAP,KAAmB;AACvD,WAAON,WAAW,CAACO,EAAZ,CAAeD,OAAO,CAACN,WAAvB,IAAsCM,OAAtC,GAAgDD,IAAvD;AACD,GAFe,EAEbG,SAFa,CAAD,EAEAP,KAAK,CAACnE,QAAN,CAAeoE,IAAf,CAAoBI,OAAO,IAAIN,WAAW,CAACS,GAAZ,CAAgBH,OAAO,CAACN,WAAxB,CAA/B,CAFA,CAAH,GAE2E,CAACQ,SAAD,EAAYA,SAAZ,CAFvF;AAGD","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn, isNull, isUndefined } from '@polkadot/util';\nimport typesChain from \"./chain/index.js\";\nimport typesModules from \"./modules.js\";\nimport typesSpec from \"./spec/index.js\";\nimport upgrades from \"./upgrades/index.js\";\nexport { knownOrigins } from \"./knownOrigins.js\";\nexport { packageInfo } from \"./packageInfo.js\"; // flatten a VersionedType[] into a Record<string, string>\n\n/** @internal */\n\nfunction filterVersions(versions = [], specVersion) {\n  return versions.filter(({\n    minmax: [min, max]\n  }) => (isUndefined(min) || isNull(min) || specVersion >= min) && (isUndefined(max) || isNull(max) || specVersion <= max)).reduce((result, {\n    types\n  }) => _objectSpread(_objectSpread({}, result), types), {});\n}\n/**\n * @description Get types for specific modules (metadata override)\n */\n\n\nexport function getModuleTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return _objectSpread(_objectSpread({}, typesModules[section] || {}), ((_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\n\nexport function getSpecExtensions({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[_specName]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions) || {}), ((_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[_chainName]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\n\nexport function getSpecTypes({\n  knownTypes\n}, chainName, specName, specVersion) {\n  var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  const _specVersion = bnToBn(specVersion).toNumber(); // The order here is always, based on -\n  //   - spec then chain\n  //   - typesBundle takes higher precedence\n  //   - types is the final catch-all override\n\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, filterVersions(typesSpec[_specName], _specVersion)), filterVersions(typesChain[_chainName], _specVersion)), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[_specName]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion)), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[_chainName]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion)), ((_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[_specName]) || {}), ((_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[_chainName]) || {}), knownTypes.types || {});\n}\nexport function getSpecHasher({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return knownTypes.hasher || ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.chain) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[_chainName]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.hasher) || ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.spec) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[_specName]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.hasher) || null;\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\n\nexport function getSpecRpc({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString();\n\n  return _objectSpread(_objectSpread({}, ((_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[_specName]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.rpc) || {}), ((_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[_chainName]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.rpc) || {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\n\nexport function getSpecAlias({\n  knownTypes\n}, chainName, specName) {\n  var _knownTypes$typesBund25, _knownTypes$typesBund26, _knownTypes$typesBund27, _knownTypes$typesBund28, _knownTypes$typesBund29, _knownTypes$typesBund30;\n\n  const _chainName = chainName.toString();\n\n  const _specName = specName.toString(); // as per versions, first spec, then chain then finally non-versioned\n\n\n  return _objectSpread(_objectSpread(_objectSpread({}, ((_knownTypes$typesBund25 = knownTypes.typesBundle) === null || _knownTypes$typesBund25 === void 0 ? void 0 : (_knownTypes$typesBund26 = _knownTypes$typesBund25.spec) === null || _knownTypes$typesBund26 === void 0 ? void 0 : (_knownTypes$typesBund27 = _knownTypes$typesBund26[_specName]) === null || _knownTypes$typesBund27 === void 0 ? void 0 : _knownTypes$typesBund27.alias) || {}), ((_knownTypes$typesBund28 = knownTypes.typesBundle) === null || _knownTypes$typesBund28 === void 0 ? void 0 : (_knownTypes$typesBund29 = _knownTypes$typesBund28.chain) === null || _knownTypes$typesBund29 === void 0 ? void 0 : (_knownTypes$typesBund30 = _knownTypes$typesBund29[_chainName]) === null || _knownTypes$typesBund30 === void 0 ? void 0 : _knownTypes$typesBund30.alias) || {}), knownTypes.typesAlias || {});\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\n\nexport function getUpgradeVersion(genesisHash, blockNumber) {\n  const known = upgrades.find(u => genesisHash.eq(u.genesisHash));\n  return known ? [known.versions.reduce((last, version) => {\n    return blockNumber.gt(version.blockNumber) ? version : last;\n  }, undefined), known.versions.find(version => blockNumber.lte(version.blockNumber))] : [undefined, undefined];\n}"]},"metadata":{},"sourceType":"module"}