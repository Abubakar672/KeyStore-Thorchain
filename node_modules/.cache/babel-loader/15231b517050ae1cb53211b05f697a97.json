{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { variantToMeta } from \"../errors/index.js\";\n/** @internal */\n\nexport function decorateEvents(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.filter(({\n    events\n  }) => events.isSome).reduce((result, {\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = lookup.getSiType(events.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      // we don't camelCase the event name\n      newModule[variant.name.toString()] = {\n        is: eventRecord => eventRecord.index[0] === sectionIndex && variant.index.eq(eventRecord.index[1]),\n        meta: registry.createType('EventMetadataLatest', variantToMeta(lookup, variant))\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/decorate/events/index.js"],"names":["stringCamelCase","variantToMeta","decorateEvents","registry","lookup","pallets","metaVersion","filter","events","isSome","reduce","result","index","name","_sectionIndex","sectionIndex","toNumber","getSiType","unwrap","type","def","asVariant","variants","newModule","variant","toString","is","eventRecord","eq","meta","createType"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACvCC,EAAAA,MADuC;AAEvCC,EAAAA;AAFuC,CAAlC,EAGJC,WAHI,EAGS;AACd,SAAOD,OAAO,CAACE,MAAR,CAAe,CAAC;AACrBC,IAAAA;AADqB,GAAD,KAEhBA,MAAM,CAACC,MAFN,EAEcC,MAFd,CAEqB,CAACC,MAAD,EAAS;AACnCH,IAAAA,MADmC;AAEnCI,IAAAA,KAFmC;AAGnCC,IAAAA;AAHmC,GAAT,EAIzBC,aAJyB,KAIP;AACnB,UAAMC,YAAY,GAAGT,WAAW,IAAI,EAAf,GAAoBM,KAAK,CAACI,QAAN,EAApB,GAAuCF,aAA5D;AACAH,IAAAA,MAAM,CAACX,eAAe,CAACa,IAAD,CAAhB,CAAN,GAAgCT,MAAM,CAACa,SAAP,CAAiBT,MAAM,CAACU,MAAP,GAAgBC,IAAjC,EAAuCC,GAAvC,CAA2CC,SAA3C,CAAqDC,QAArD,CAA8DZ,MAA9D,CAAqE,CAACa,SAAD,EAAYC,OAAZ,KAAwB;AAC3H;AACAD,MAAAA,SAAS,CAACC,OAAO,CAACX,IAAR,CAAaY,QAAb,EAAD,CAAT,GAAqC;AACnCC,QAAAA,EAAE,EAAEC,WAAW,IAAIA,WAAW,CAACf,KAAZ,CAAkB,CAAlB,MAAyBG,YAAzB,IAAyCS,OAAO,CAACZ,KAAR,CAAcgB,EAAd,CAAiBD,WAAW,CAACf,KAAZ,CAAkB,CAAlB,CAAjB,CADzB;AAEnCiB,QAAAA,IAAI,EAAE1B,QAAQ,CAAC2B,UAAT,CAAoB,qBAApB,EAA2C7B,aAAa,CAACG,MAAD,EAASoB,OAAT,CAAxD;AAF6B,OAArC;AAIA,aAAOD,SAAP;AACD,KAP+B,EAO7B,EAP6B,CAAhC;AAQA,WAAOZ,MAAP;AACD,GAjBM,EAiBJ,EAjBI,CAAP;AAkBD","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { variantToMeta } from \"../errors/index.js\";\n/** @internal */\n\nexport function decorateEvents(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.filter(({\n    events\n  }) => events.isSome).reduce((result, {\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = lookup.getSiType(events.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      // we don't camelCase the event name\n      newModule[variant.name.toString()] = {\n        is: eventRecord => eventRecord.index[0] === sectionIndex && variant.index.eq(eventRecord.index[1]),\n        meta: registry.createType('EventMetadataLatest', variantToMeta(lookup, variant))\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}