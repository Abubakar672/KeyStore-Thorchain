{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nconst deprecated = {\n  Points: 'u32',\n  EraPoints: {\n    total: 'Points',\n    individual: 'Vec<Points>'\n  }\n};\nconst phragmen = {\n  CompactAssignments: 'CompactAssignmentsWith16',\n  CompactAssignmentsWith16: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsWith24: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n  CompactAssignmentsTo257: {\n    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n  },\n  CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n  ElectionCompute: {\n    // in previous versions the last entry was \"AuthorityId\"\n    // (since no data attached, and it is via SCALE can rename)\n    _enum: ['OnChain', 'Signed', 'Unsigned']\n  },\n  ElectionPhase: {\n    _enum: {\n      Off: null,\n      Signed: null,\n      Unsigned: '(bool, BlockNumber)',\n      Emergency: null\n    }\n  },\n  ElectionResult: {\n    compute: 'ElectionCompute',\n    slotStake: 'Balance',\n    electedStashes: 'Vec<AccountId>',\n    exposures: 'Vec<(AccountId, Exposure)>'\n  },\n  ElectionScore: '[u128; 3]',\n  ElectionSize: {\n    validators: 'Compact<ValidatorIndex>',\n    nominators: 'Compact<NominatorIndex>'\n  },\n  ElectionStatus: {\n    _enum: {\n      Close: 'Null',\n      Open: 'BlockNumber'\n    }\n  },\n  ExtendedBalance: 'u128',\n  RawSolution: 'RawSolutionWith16',\n  RawSolutionWith16: {\n    compact: 'CompactAssignmentsWith16',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionWith24: {\n    compact: 'CompactAssignmentsWith24',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionTo265: 'RawSolutionWith16',\n  ReadySolution: {\n    supports: 'SolutionSupports',\n    score: 'ElectionScore',\n    compute: 'ElectionCompute'\n  },\n  RoundSnapshot: {\n    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n    targets: 'Vec<AccountId>'\n  },\n  SeatHolder: {\n    who: 'AccountId',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  SignedSubmission: {\n    _fallback: 'SignedSubmissionTo276',\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution',\n    reward: 'Balance'\n  },\n  SignedSubmissionTo276: {\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution'\n  },\n  SignedSubmissionOf: 'SignedSubmission',\n  SolutionOrSnapshotSize: {\n    voters: 'Compact<u32>',\n    targets: 'Compact<u32>'\n  },\n  SolutionSupport: {\n    total: 'ExtendedBalance',\n    voters: 'Vec<(AccountId, ExtendedBalance)>'\n  },\n  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n  Supports: 'SolutionSupports',\n  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n  Voter: {\n    votes: 'Vec<AccountId>',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  VoteWeight: 'u64'\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread({}, deprecated), phragmen), {}, {\n    ActiveEraInfo: {\n      index: 'EraIndex',\n      start: 'Option<Moment>'\n    },\n    EraIndex: 'u32',\n    EraRewardPoints: {\n      total: 'RewardPoint',\n      individual: 'BTreeMap<AccountId, RewardPoint>'\n    },\n    EraRewards: {\n      total: 'u32',\n      rewards: 'Vec<u32>'\n    },\n    Exposure: {\n      total: 'Compact<Balance>',\n      own: 'Compact<Balance>',\n      others: 'Vec<IndividualExposure>'\n    },\n    Forcing: {\n      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    IndividualExposure: {\n      who: 'AccountId',\n      value: 'Compact<Balance>'\n    },\n    KeyType: 'AccountId',\n    MomentOf: 'Moment',\n    Nominations: {\n      targets: 'Vec<AccountId>',\n      submittedIn: 'EraIndex',\n      suppressed: 'bool'\n    },\n    NominatorIndex: 'u32',\n    NominatorIndexCompact: 'Compact<NominatorIndex>',\n    OffchainAccuracy: 'PerU16',\n    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n    PhragmenScore: '[u128; 3]',\n    Points: 'u32',\n    RewardDestination: {\n      _enum: {\n        Staked: 'Null',\n        Stash: 'Null',\n        Controller: 'Null',\n        Account: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RewardPoint: 'u32',\n    SlashJournalEntry: {\n      who: 'AccountId',\n      amount: 'Balance',\n      ownSlash: 'Balance'\n    },\n    SlashingSpansTo204: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SlashingSpans: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      lastNonzeroSlash: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SpanIndex: 'u32',\n    SpanRecord: {\n      slashed: 'Balance',\n      paidOut: 'Balance'\n    },\n    StakingLedgerTo223: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>'\n    },\n    StakingLedgerTo240: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      lastReward: 'Option<EraIndex>'\n    },\n    StakingLedger: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      claimedRewards: 'Vec<EraIndex>'\n    },\n    UnappliedSlashOther: '(AccountId, Balance)',\n    UnappliedSlash: {\n      validator: 'AccountId',\n      own: 'Balance',\n      others: 'Vec<UnappliedSlashOther>',\n      reporters: 'Vec<AccountId>',\n      payout: 'Balance'\n    },\n    UnlockChunk: {\n      value: 'Compact<Balance>',\n      era: 'Compact<BlockNumber>'\n    },\n    ValidatorIndex: 'u16',\n    ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n    ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n    ValidatorPrefsWithCommission: {\n      commission: 'Compact<Perbill>'\n    },\n    ValidatorPrefsWithBlocked: {\n      commission: 'Compact<Perbill>',\n      blocked: 'bool'\n    },\n    ValidatorPrefsTo196: {\n      validatorPayment: 'Compact<Balance>'\n    },\n    ValidatorPrefsTo145: {\n      unstakeThreshold: 'Compact<u32>',\n      validatorPayment: 'Compact<Balance>'\n    }\n  })\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/staking/definitions.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","deprecated","Points","EraPoints","total","individual","phragmen","CompactAssignments","CompactAssignmentsWith16","votes1","votes2","votes3","votes4","votes5","votes6","votes7","votes8","votes9","votes10","votes11","votes12","votes13","votes14","votes15","votes16","CompactAssignmentsWith24","votes17","votes18","votes19","votes20","votes21","votes22","votes23","votes24","CompactAssignmentsTo265","CompactAssignmentsTo257","CompactScore","CompactScoreCompact","ElectionCompute","_enum","ElectionPhase","Off","Signed","Unsigned","Emergency","ElectionResult","compute","slotStake","electedStashes","exposures","ElectionScore","ElectionSize","validators","nominators","ElectionStatus","Close","Open","ExtendedBalance","RawSolution","RawSolutionWith16","compact","score","round","RawSolutionWith24","RawSolutionTo265","ReadySolution","supports","RoundSnapshot","voters","targets","SeatHolder","who","stake","deposit","SignedSubmission","_fallback","solution","reward","SignedSubmissionTo276","SignedSubmissionOf","SolutionOrSnapshotSize","SolutionSupport","SolutionSupports","Supports","SubmissionIndicesOf","Voter","votes","VoteWeight","rpc","types","ActiveEraInfo","index","start","EraIndex","EraRewardPoints","EraRewards","rewards","Exposure","own","others","Forcing","IndividualExposure","value","KeyType","MomentOf","Nominations","submittedIn","suppressed","NominatorIndex","NominatorIndexCompact","OffchainAccuracy","OffchainAccuracyCompact","PhragmenScore","RewardDestination","Staked","Stash","Controller","Account","None","RewardPoint","SlashJournalEntry","amount","ownSlash","SlashingSpansTo204","spanIndex","lastStart","prior","SlashingSpans","lastNonzeroSlash","SpanIndex","SpanRecord","slashed","paidOut","StakingLedgerTo223","stash","active","unlocking","StakingLedgerTo240","lastReward","StakingLedger","claimedRewards","UnappliedSlashOther","UnappliedSlash","validator","reporters","payout","UnlockChunk","era","ValidatorIndex","ValidatorIndexCompact","ValidatorPrefs","ValidatorPrefsWithCommission","commission","ValidatorPrefsWithBlocked","blocked","ValidatorPrefsTo196","validatorPayment","ValidatorPrefsTo145","unstakeThreshold"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst deprecated = {\n  Points: 'u32',\n  EraPoints: {\n    total: 'Points',\n    individual: 'Vec<Points>'\n  }\n};\nconst phragmen = {\n  CompactAssignments: 'CompactAssignmentsWith16',\n  CompactAssignmentsWith16: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsWith24: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n  CompactAssignmentsTo257: {\n    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n  },\n  CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n  ElectionCompute: {\n    // in previous versions the last entry was \"AuthorityId\"\n    // (since no data attached, and it is via SCALE can rename)\n    _enum: ['OnChain', 'Signed', 'Unsigned']\n  },\n  ElectionPhase: {\n    _enum: {\n      Off: null,\n      Signed: null,\n      Unsigned: '(bool, BlockNumber)',\n      Emergency: null\n    }\n  },\n  ElectionResult: {\n    compute: 'ElectionCompute',\n    slotStake: 'Balance',\n    electedStashes: 'Vec<AccountId>',\n    exposures: 'Vec<(AccountId, Exposure)>'\n  },\n  ElectionScore: '[u128; 3]',\n  ElectionSize: {\n    validators: 'Compact<ValidatorIndex>',\n    nominators: 'Compact<NominatorIndex>'\n  },\n  ElectionStatus: {\n    _enum: {\n      Close: 'Null',\n      Open: 'BlockNumber'\n    }\n  },\n  ExtendedBalance: 'u128',\n  RawSolution: 'RawSolutionWith16',\n  RawSolutionWith16: {\n    compact: 'CompactAssignmentsWith16',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionWith24: {\n    compact: 'CompactAssignmentsWith24',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionTo265: 'RawSolutionWith16',\n  ReadySolution: {\n    supports: 'SolutionSupports',\n    score: 'ElectionScore',\n    compute: 'ElectionCompute'\n  },\n  RoundSnapshot: {\n    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n    targets: 'Vec<AccountId>'\n  },\n  SeatHolder: {\n    who: 'AccountId',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  SignedSubmission: {\n    _fallback: 'SignedSubmissionTo276',\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution',\n    reward: 'Balance'\n  },\n  SignedSubmissionTo276: {\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution'\n  },\n  SignedSubmissionOf: 'SignedSubmission',\n  SolutionOrSnapshotSize: {\n    voters: 'Compact<u32>',\n    targets: 'Compact<u32>'\n  },\n  SolutionSupport: {\n    total: 'ExtendedBalance',\n    voters: 'Vec<(AccountId, ExtendedBalance)>'\n  },\n  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n  Supports: 'SolutionSupports',\n  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n  Voter: {\n    votes: 'Vec<AccountId>',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  VoteWeight: 'u64'\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread({}, deprecated), phragmen), {}, {\n    ActiveEraInfo: {\n      index: 'EraIndex',\n      start: 'Option<Moment>'\n    },\n    EraIndex: 'u32',\n    EraRewardPoints: {\n      total: 'RewardPoint',\n      individual: 'BTreeMap<AccountId, RewardPoint>'\n    },\n    EraRewards: {\n      total: 'u32',\n      rewards: 'Vec<u32>'\n    },\n    Exposure: {\n      total: 'Compact<Balance>',\n      own: 'Compact<Balance>',\n      others: 'Vec<IndividualExposure>'\n    },\n    Forcing: {\n      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    IndividualExposure: {\n      who: 'AccountId',\n      value: 'Compact<Balance>'\n    },\n    KeyType: 'AccountId',\n    MomentOf: 'Moment',\n    Nominations: {\n      targets: 'Vec<AccountId>',\n      submittedIn: 'EraIndex',\n      suppressed: 'bool'\n    },\n    NominatorIndex: 'u32',\n    NominatorIndexCompact: 'Compact<NominatorIndex>',\n    OffchainAccuracy: 'PerU16',\n    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n    PhragmenScore: '[u128; 3]',\n    Points: 'u32',\n    RewardDestination: {\n      _enum: {\n        Staked: 'Null',\n        Stash: 'Null',\n        Controller: 'Null',\n        Account: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RewardPoint: 'u32',\n    SlashJournalEntry: {\n      who: 'AccountId',\n      amount: 'Balance',\n      ownSlash: 'Balance'\n    },\n    SlashingSpansTo204: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SlashingSpans: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      lastNonzeroSlash: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SpanIndex: 'u32',\n    SpanRecord: {\n      slashed: 'Balance',\n      paidOut: 'Balance'\n    },\n    StakingLedgerTo223: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>'\n    },\n    StakingLedgerTo240: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      lastReward: 'Option<EraIndex>'\n    },\n    StakingLedger: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      claimedRewards: 'Vec<EraIndex>'\n    },\n    UnappliedSlashOther: '(AccountId, Balance)',\n    UnappliedSlash: {\n      validator: 'AccountId',\n      own: 'Balance',\n      others: 'Vec<UnappliedSlashOther>',\n      reporters: 'Vec<AccountId>',\n      payout: 'Balance'\n    },\n    UnlockChunk: {\n      value: 'Compact<Balance>',\n      era: 'Compact<BlockNumber>'\n    },\n    ValidatorIndex: 'u16',\n    ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n    ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n    ValidatorPrefsWithCommission: {\n      commission: 'Compact<Perbill>'\n    },\n    ValidatorPrefsWithBlocked: {\n      commission: 'Compact<Perbill>',\n      blocked: 'bool'\n    },\n    ValidatorPrefsTo196: {\n      validatorPayment: 'Compact<Balance>'\n    },\n    ValidatorPrefsTo145: {\n      unstakeThreshold: 'Compact<u32>',\n      validatorPayment: 'Compact<Balance>'\n    }\n  })\n};"]},"metadata":{},"sourceType":"module"}