{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nimport { isFunction } from \"./is/function.js\";\nimport { isString } from \"./is/string.js\";\nimport { assert } from \"./assert.js\";\nconst DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:';\n/** @internal */\n\nfunction getEntry(name) {\n  const _global = xglobal;\n\n  if (!_global.__polkadotjs) {\n    _global.__polkadotjs = {};\n  }\n\n  if (!_global.__polkadotjs[name]) {\n    _global.__polkadotjs[name] = [];\n  }\n\n  return _global.__polkadotjs[name];\n}\n\nfunction getVersionLength(all) {\n  return all.reduce((max, {\n    version\n  }) => Math.max(max, version.length), 0);\n}\n/** @internal */\n\n\nfunction flattenInfos(all) {\n  const verLength = getVersionLength(all);\n  return all.map(({\n    name,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${name}`).join('\\n');\n}\n/** @internal */\n\n\nfunction flattenVersions(entry) {\n  const all = entry.map(version => isString(version) ? {\n    version\n  } : version);\n  const verLength = getVersionLength(all);\n  return all.map(({\n    path,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${!path || path.length < 5 ? '<unknown>' : path}`).join('\\n');\n}\n/** @internal */\n\n\nfunction getPath(pathOrFn) {\n  if (isFunction(pathOrFn)) {\n    try {\n      return pathOrFn() || '';\n    } catch (error) {\n      return '';\n    }\n  }\n\n  return pathOrFn || '';\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n */\n\n\nexport function detectPackage({\n  name,\n  version\n}, pathOrFn, deps = []) {\n  assert(name.startsWith('@polkadot'), () => `Invalid package descriptor ${name}`);\n  const entry = getEntry(name);\n  entry.push({\n    path: getPath(pathOrFn),\n    version\n  });\n\n  if (entry.length !== 1) {\n    console.warn(`${name} has multiple versions, ensure that there is only one installed.\\n${DEDUPE}\\n${flattenVersions(entry)}`);\n  } else {\n    const mismatches = deps.filter(d => d && d.version !== version);\n\n    if (mismatches.length) {\n      console.warn(`${name} requires direct dependencies exactly matching version ${version}.\\n${DEDUPE}\\n${flattenInfos(mismatches)}`);\n    }\n  }\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/versionDetect.js"],"names":["xglobal","isFunction","isString","assert","DEDUPE","getEntry","name","_global","__polkadotjs","getVersionLength","all","reduce","max","version","Math","length","flattenInfos","verLength","map","padEnd","join","flattenVersions","entry","path","getPath","pathOrFn","error","detectPackage","deps","startsWith","push","console","warn","mismatches","filter","d"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nimport { isFunction } from \"./is/function.js\";\nimport { isString } from \"./is/string.js\";\nimport { assert } from \"./assert.js\";\nconst DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:';\n/** @internal */\n\nfunction getEntry(name) {\n  const _global = xglobal;\n\n  if (!_global.__polkadotjs) {\n    _global.__polkadotjs = {};\n  }\n\n  if (!_global.__polkadotjs[name]) {\n    _global.__polkadotjs[name] = [];\n  }\n\n  return _global.__polkadotjs[name];\n}\n\nfunction getVersionLength(all) {\n  return all.reduce((max, {\n    version\n  }) => Math.max(max, version.length), 0);\n}\n/** @internal */\n\n\nfunction flattenInfos(all) {\n  const verLength = getVersionLength(all);\n  return all.map(({\n    name,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${name}`).join('\\n');\n}\n/** @internal */\n\n\nfunction flattenVersions(entry) {\n  const all = entry.map(version => isString(version) ? {\n    version\n  } : version);\n  const verLength = getVersionLength(all);\n  return all.map(({\n    path,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${!path || path.length < 5 ? '<unknown>' : path}`).join('\\n');\n}\n/** @internal */\n\n\nfunction getPath(pathOrFn) {\n  if (isFunction(pathOrFn)) {\n    try {\n      return pathOrFn() || '';\n    } catch (error) {\n      return '';\n    }\n  }\n\n  return pathOrFn || '';\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n */\n\n\nexport function detectPackage({\n  name,\n  version\n}, pathOrFn, deps = []) {\n  assert(name.startsWith('@polkadot'), () => `Invalid package descriptor ${name}`);\n  const entry = getEntry(name);\n  entry.push({\n    path: getPath(pathOrFn),\n    version\n  });\n\n  if (entry.length !== 1) {\n    console.warn(`${name} has multiple versions, ensure that there is only one installed.\\n${DEDUPE}\\n${flattenVersions(entry)}`);\n  } else {\n    const mismatches = deps.filter(d => d && d.version !== version);\n\n    if (mismatches.length) {\n      console.warn(`${name} requires direct dependencies exactly matching version ${version}.\\n${DEDUPE}\\n${flattenInfos(mismatches)}`);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}