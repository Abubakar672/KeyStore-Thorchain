{"ast":null,"code":"// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asapScheduler, Observable, Subscription } from 'rxjs';\n/** @internal */\n\nexport function refCountDelay(delay = 1750) {\n  return source => {\n    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n    let [state, refCount, connection, scheduler] = [0, 0, Subscription.EMPTY, Subscription.EMPTY];\n    return new Observable(ob => {\n      source.subscribe(ob);\n\n      if (refCount++ === 0) {\n        if (state === 1) {\n          scheduler.unsubscribe();\n        } else {\n          connection = source.connect();\n        }\n\n        state = 3;\n      }\n\n      return () => {\n        if (--refCount === 0) {\n          if (state === 2) {\n            state = 0;\n            scheduler.unsubscribe();\n          } else {\n            // state === 3\n            state = 1;\n            scheduler = asapScheduler.schedule(() => {\n              state = 0;\n              connection.unsubscribe();\n            }, delay);\n          }\n        }\n      };\n    });\n  };\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/rpc-core/util/refCountDelay.js"],"names":["asapScheduler","Observable","Subscription","refCountDelay","delay","source","state","refCount","connection","scheduler","EMPTY","ob","subscribe","unsubscribe","connect","schedule"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,YAApC,QAAwD,MAAxD;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAK,GAAG,IAA/B,EAAqC;AAC1C,SAAOC,MAAM,IAAI;AACf;AACA,QAAI,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,IAA2C,CAAC,CAAD,EAAI,CAAJ,EAAOP,YAAY,CAACQ,KAApB,EAA2BR,YAAY,CAACQ,KAAxC,CAA/C;AACA,WAAO,IAAIT,UAAJ,CAAeU,EAAE,IAAI;AAC1BN,MAAAA,MAAM,CAACO,SAAP,CAAiBD,EAAjB;;AAEA,UAAIJ,QAAQ,OAAO,CAAnB,EAAsB;AACpB,YAAID,KAAK,KAAK,CAAd,EAAiB;AACfG,UAAAA,SAAS,CAACI,WAAV;AACD,SAFD,MAEO;AACLL,UAAAA,UAAU,GAAGH,MAAM,CAACS,OAAP,EAAb;AACD;;AAEDR,QAAAA,KAAK,GAAG,CAAR;AACD;;AAED,aAAO,MAAM;AACX,YAAI,EAAEC,QAAF,KAAe,CAAnB,EAAsB;AACpB,cAAID,KAAK,KAAK,CAAd,EAAiB;AACfA,YAAAA,KAAK,GAAG,CAAR;AACAG,YAAAA,SAAS,CAACI,WAAV;AACD,WAHD,MAGO;AACL;AACAP,YAAAA,KAAK,GAAG,CAAR;AACAG,YAAAA,SAAS,GAAGT,aAAa,CAACe,QAAd,CAAuB,MAAM;AACvCT,cAAAA,KAAK,GAAG,CAAR;AACAE,cAAAA,UAAU,CAACK,WAAX;AACD,aAHW,EAGTT,KAHS,CAAZ;AAID;AACF;AACF,OAdD;AAeD,KA5BM,CAAP;AA6BD,GAhCD;AAiCD","sourcesContent":["// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asapScheduler, Observable, Subscription } from 'rxjs';\n/** @internal */\n\nexport function refCountDelay(delay = 1750) {\n  return source => {\n    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n    let [state, refCount, connection, scheduler] = [0, 0, Subscription.EMPTY, Subscription.EMPTY];\n    return new Observable(ob => {\n      source.subscribe(ob);\n\n      if (refCount++ === 0) {\n        if (state === 1) {\n          scheduler.unsubscribe();\n        } else {\n          connection = source.connect();\n        }\n\n        state = 3;\n      }\n\n      return () => {\n        if (--refCount === 0) {\n          if (state === 2) {\n            state = 0;\n            scheduler.unsubscribe();\n          } else {\n            // state === 3\n            state = 1;\n            scheduler = asapScheduler.schedule(() => {\n              state = 0;\n              connection.unsubscribe();\n            }, delay);\n          }\n        }\n      };\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}