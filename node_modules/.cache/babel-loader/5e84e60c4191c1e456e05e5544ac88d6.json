{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { from } from '../observable/from';\nimport { take } from '../operators/take';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.connector,\n      connector = _a === void 0 ? function () {\n    return new Subject();\n  } : _a,\n      _b = options.resetOnError,\n      resetOnError = _b === void 0 ? true : _b,\n      _c = options.resetOnComplete,\n      resetOnComplete = _c === void 0 ? true : _c,\n      _d = options.resetOnRefCountZero,\n      resetOnRefCountZero = _d === void 0 ? true : _d;\n  return function (wrapperSource) {\n    var connection = null;\n    var resetConnection = null;\n    var subject = null;\n    var refCount = 0;\n    var hasCompleted = false;\n    var hasErrored = false;\n\n    var cancelReset = function () {\n      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n      resetConnection = null;\n    };\n\n    var reset = function () {\n      cancelReset();\n      connection = subject = null;\n      hasCompleted = hasErrored = false;\n    };\n\n    var resetAndUnsubscribe = function () {\n      var conn = connection;\n      reset();\n      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n    };\n\n    return operate(function (source, subscriber) {\n      refCount++;\n\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();\n      subscriber.add(function () {\n        refCount--;\n\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n      dest.subscribe(subscriber);\n\n      if (!connection) {\n        connection = new SafeSubscriber({\n          next: function (value) {\n            return dest.next(value);\n          },\n          error: function (err) {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: function () {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          }\n        });\n        from(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset(reset, on) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (on === true) {\n    reset();\n    return null;\n  }\n\n  if (on === false) {\n    return null;\n  }\n\n  return on.apply(void 0, __spreadArray([], __read(args))).pipe(take(1)).subscribe(function () {\n    return reset();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/share.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { from } from '../observable/from';\nimport { take } from '../operators/take';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n    return function (wrapperSource) {\n        var connection = null;\n        var resetConnection = null;\n        var subject = null;\n        var refCount = 0;\n        var hasCompleted = false;\n        var hasErrored = false;\n        var cancelReset = function () {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = null;\n        };\n        var reset = function () {\n            cancelReset();\n            connection = subject = null;\n            hasCompleted = hasErrored = false;\n        };\n        var resetAndUnsubscribe = function () {\n            var conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate(function (source, subscriber) {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(function () {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection) {\n                connection = new SafeSubscriber({\n                    next: function (value) { return dest.next(value); },\n                    error: function (err) {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: function () {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                from(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (on === true) {\n        reset();\n        return null;\n    }\n    if (on === false) {\n        return null;\n    }\n    return on.apply(void 0, __spreadArray([], __read(args))).pipe(take(1))\n        .subscribe(function () { return reset(); });\n}\n//# sourceMappingURL=share.js.map"]},"metadata":{},"sourceType":"module"}