{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n\n    var emit = function (record) {\n      var buffer = record.buffer,\n          subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    var startBuffer = function () {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record_1 = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record_1);\n        subs.add(scheduler.schedule(function () {\n          return emit(record_1);\n        }, bufferTimeSpan));\n      }\n    };\n\n    bufferCreationInterval !== null && bufferCreationInterval >= 0 ? subscriber.add(scheduler.schedule(function () {\n      startBuffer();\n      !this.closed && subscriber.add(this.schedule(null, bufferCreationInterval));\n    }, bufferCreationInterval)) : restartOnEmit = true;\n    startBuffer();\n    var bufferTimeSubscriber = new OperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var recordsCopy = bufferRecords.slice();\n\n      try {\n        for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n          var record = recordsCopy_1_1.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/bufferTime.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nexport function bufferTime(bufferTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxBufferSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var bufferRecords = [];\n        var restartOnEmit = false;\n        var emit = function (record) {\n            var buffer = record.buffer, subs = record.subs;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        var startBuffer = function () {\n            if (bufferRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var buffer = [];\n                var record_1 = {\n                    buffer: buffer,\n                    subs: subs,\n                };\n                bufferRecords.push(record_1);\n                subs.add(scheduler.schedule(function () { return emit(record_1); }, bufferTimeSpan));\n            }\n        };\n        bufferCreationInterval !== null && bufferCreationInterval >= 0\n            ?\n                subscriber.add(scheduler.schedule(function () {\n                    startBuffer();\n                    !this.closed && subscriber.add(this.schedule(null, bufferCreationInterval));\n                }, bufferCreationInterval))\n            : (restartOnEmit = true);\n        startBuffer();\n        var bufferTimeSubscriber = new OperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var recordsCopy = bufferRecords.slice();\n            try {\n                for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n                    var record = recordsCopy_1_1.value;\n                    var buffer = record.buffer;\n                    buffer.push(value);\n                    maxBufferSize <= buffer.length && emit(record);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, function () { return (bufferRecords = null); });\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n//# sourceMappingURL=bufferTime.js.map"]},"metadata":{},"sourceType":"module"}