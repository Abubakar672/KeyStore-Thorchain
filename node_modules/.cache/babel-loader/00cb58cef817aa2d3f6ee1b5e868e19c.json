{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\n\nvar bech32 = require('bech32');\n\nvar bs58check = require('bs58check');\n\nvar bscript = require('./script');\n\nvar btemplates = require('./templates');\n\nvar networks = require('./networks');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nfunction fromBase58Check(address) {\n  var payload = bs58check.decode(address); // TODO: 4.0.0, move to \"toOutputScript\"\n\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  var version = payload.readUInt8(0);\n  var hash = payload.slice(1);\n  return {\n    version: version,\n    hash: hash\n  };\n}\n\nfunction fromBech32(address) {\n  var result = bech32.decode(address);\n  var data = bech32.fromWords(result.words.slice(1));\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data)\n  };\n}\n\nfunction toBase58Check(hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments);\n  var payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\n\nfunction toBech32(data, version, prefix) {\n  var words = bech32.toWords(data);\n  words.unshift(version);\n  return bech32.encode(prefix, words);\n}\n\nfunction fromOutputScript(outputScript, network) {\n  network = network || networks.bitcoin;\n  if (btemplates.pubKeyHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(3, 23), network.pubKeyHash);\n  if (btemplates.scriptHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(2, 22), network.scriptHash);\n  if (btemplates.witnessPubKeyHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 22), 0, network.bech32);\n  if (btemplates.witnessScriptHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 34), 0, network.bech32);\n  throw new Error(bscript.toASM(outputScript) + ' has no matching Address');\n}\n\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  var decode;\n\n  try {\n    decode = fromBase58Check(address);\n  } catch (e) {}\n\n  if (decode) {\n    if (decode.version === network.pubKeyHash) return btemplates.pubKeyHash.output.encode(decode.hash);\n    if (decode.version === network.scriptHash) return btemplates.scriptHash.output.encode(decode.hash);\n  } else {\n    try {\n      decode = fromBech32(address);\n    } catch (e) {}\n\n    if (decode) {\n      if (decode.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n\n      if (decode.version === 0) {\n        if (decode.data.length === 20) return btemplates.witnessPubKeyHash.output.encode(decode.data);\n        if (decode.data.length === 32) return btemplates.witnessScriptHash.output.encode(decode.data);\n      }\n    }\n  }\n\n  throw new Error(address + ' has no matching Script');\n}\n\nmodule.exports = {\n  fromBase58Check: fromBase58Check,\n  fromBech32: fromBech32,\n  fromOutputScript: fromOutputScript,\n  toBase58Check: toBase58Check,\n  toBech32: toBech32,\n  toOutputScript: toOutputScript\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@psf/bitcoincashjs-lib/src/address.js"],"names":["Buffer","require","bech32","bs58check","bscript","btemplates","networks","typeforce","types","fromBase58Check","address","payload","decode","length","TypeError","version","readUInt8","hash","slice","fromBech32","result","data","fromWords","words","prefix","from","toBase58Check","tuple","Hash160bit","UInt8","arguments","allocUnsafe","writeUInt8","copy","encode","toBech32","toWords","unshift","fromOutputScript","outputScript","network","bitcoin","pubKeyHash","output","check","compile","scriptHash","witnessPubKeyHash","witnessScriptHash","Error","toASM","toOutputScript","e","module","exports"],"mappings":"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","sourcesContent":["var Buffer = require('safe-buffer').Buffer\nvar bech32 = require('bech32')\nvar bs58check = require('bs58check')\nvar bscript = require('./script')\nvar btemplates = require('./templates')\nvar networks = require('./networks')\nvar typeforce = require('typeforce')\nvar types = require('./types')\n\nfunction fromBase58Check (address) {\n  var payload = bs58check.decode(address)\n\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short')\n  if (payload.length > 21) throw new TypeError(address + ' is too long')\n\n  var version = payload.readUInt8(0)\n  var hash = payload.slice(1)\n\n  return { version: version, hash: hash }\n}\n\nfunction fromBech32 (address) {\n  var result = bech32.decode(address)\n  var data = bech32.fromWords(result.words.slice(1))\n\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data)\n  }\n}\n\nfunction toBase58Check (hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments)\n\n  var payload = Buffer.allocUnsafe(21)\n  payload.writeUInt8(version, 0)\n  hash.copy(payload, 1)\n\n  return bs58check.encode(payload)\n}\n\nfunction toBech32 (data, version, prefix) {\n  var words = bech32.toWords(data)\n  words.unshift(version)\n\n  return bech32.encode(prefix, words)\n}\n\nfunction fromOutputScript (outputScript, network) {\n  network = network || networks.bitcoin\n\n  if (btemplates.pubKeyHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(3, 23), network.pubKeyHash)\n  if (btemplates.scriptHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(2, 22), network.scriptHash)\n  if (btemplates.witnessPubKeyHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 22), 0, network.bech32)\n  if (btemplates.witnessScriptHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 34), 0, network.bech32)\n\n  throw new Error(bscript.toASM(outputScript) + ' has no matching Address')\n}\n\nfunction toOutputScript (address, network) {\n  network = network || networks.bitcoin\n\n  var decode\n  try {\n    decode = fromBase58Check(address)\n  } catch (e) {}\n\n  if (decode) {\n    if (decode.version === network.pubKeyHash) return btemplates.pubKeyHash.output.encode(decode.hash)\n    if (decode.version === network.scriptHash) return btemplates.scriptHash.output.encode(decode.hash)\n  } else {\n    try {\n      decode = fromBech32(address)\n    } catch (e) {}\n\n    if (decode) {\n      if (decode.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix')\n      if (decode.version === 0) {\n        if (decode.data.length === 20) return btemplates.witnessPubKeyHash.output.encode(decode.data)\n        if (decode.data.length === 32) return btemplates.witnessScriptHash.output.encode(decode.data)\n      }\n    }\n  }\n\n  throw new Error(address + ' has no matching Script')\n}\n\nmodule.exports = {\n  fromBase58Check: fromBase58Check,\n  fromBech32: fromBech32,\n  fromOutputScript: fromOutputScript,\n  toBase58Check: toBase58Check,\n  toBech32: toBech32,\n  toOutputScript: toOutputScript\n}\n"]},"metadata":{},"sourceType":"script"}