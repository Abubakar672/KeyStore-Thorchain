{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasProposals as collectiveHasProposals, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from \"../collective/index.js\";\nimport { memo } from \"../util/index.js\";\nexport function hasProposals(instanceId, api) {\n  return memo(instanceId, collectiveHasProposals(instanceId, api, 'membership'));\n}\nexport function proposal(instanceId, api) {\n  return memo(instanceId, collectiveProposal(instanceId, api, 'membership'));\n}\nexport function proposalCount(instanceId, api) {\n  return memo(instanceId, collectiveProposalCount(instanceId, api, 'membership'));\n}\nexport function proposalHashes(instanceId, api) {\n  return memo(instanceId, collectiveProposalHashes(instanceId, api, 'membership'));\n}\nexport function proposals(instanceId, api) {\n  return memo(instanceId, collectiveProposals(instanceId, api, 'membership'));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/membership/proposals.js"],"names":["hasProposals","collectiveHasProposals","proposal","collectiveProposal","proposalCount","collectiveProposalCount","proposalHashes","collectiveProposalHashes","proposals","collectiveProposals","memo","instanceId","api"],"mappings":"AAAA;AACA;AACA,SAASA,YAAY,IAAIC,sBAAzB,EAAiDC,QAAQ,IAAIC,kBAA7D,EAAiFC,aAAa,IAAIC,uBAAlG,EAA2HC,cAAc,IAAIC,wBAA7I,EAAuKC,SAAS,IAAIC,mBAApL,QAA+M,wBAA/M;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,SAASV,YAAT,CAAsBW,UAAtB,EAAkCC,GAAlC,EAAuC;AAC5C,SAAOF,IAAI,CAACC,UAAD,EAAaV,sBAAsB,CAACU,UAAD,EAAaC,GAAb,EAAkB,YAAlB,CAAnC,CAAX;AACD;AACD,OAAO,SAASV,QAAT,CAAkBS,UAAlB,EAA8BC,GAA9B,EAAmC;AACxC,SAAOF,IAAI,CAACC,UAAD,EAAaR,kBAAkB,CAACQ,UAAD,EAAaC,GAAb,EAAkB,YAAlB,CAA/B,CAAX;AACD;AACD,OAAO,SAASR,aAAT,CAAuBO,UAAvB,EAAmCC,GAAnC,EAAwC;AAC7C,SAAOF,IAAI,CAACC,UAAD,EAAaN,uBAAuB,CAACM,UAAD,EAAaC,GAAb,EAAkB,YAAlB,CAApC,CAAX;AACD;AACD,OAAO,SAASN,cAAT,CAAwBK,UAAxB,EAAoCC,GAApC,EAAyC;AAC9C,SAAOF,IAAI,CAACC,UAAD,EAAaJ,wBAAwB,CAACI,UAAD,EAAaC,GAAb,EAAkB,YAAlB,CAArC,CAAX;AACD;AACD,OAAO,SAASJ,SAAT,CAAmBG,UAAnB,EAA+BC,GAA/B,EAAoC;AACzC,SAAOF,IAAI,CAACC,UAAD,EAAaF,mBAAmB,CAACE,UAAD,EAAaC,GAAb,EAAkB,YAAlB,CAAhC,CAAX;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasProposals as collectiveHasProposals, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from \"../collective/index.js\";\nimport { memo } from \"../util/index.js\";\nexport function hasProposals(instanceId, api) {\n  return memo(instanceId, collectiveHasProposals(instanceId, api, 'membership'));\n}\nexport function proposal(instanceId, api) {\n  return memo(instanceId, collectiveProposal(instanceId, api, 'membership'));\n}\nexport function proposalCount(instanceId, api) {\n  return memo(instanceId, collectiveProposalCount(instanceId, api, 'membership'));\n}\nexport function proposalHashes(instanceId, api) {\n  return memo(instanceId, collectiveProposalHashes(instanceId, api, 'membership'));\n}\nexport function proposals(instanceId, api) {\n  return memo(instanceId, collectiveProposals(instanceId, api, 'membership'));\n}"]},"metadata":{},"sourceType":"module"}