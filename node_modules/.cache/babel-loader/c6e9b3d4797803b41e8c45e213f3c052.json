{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport elliptic from 'elliptic';\nconst EC = elliptic.ec;\nexport const secp256k1 = new EC('secp256k1');\nexport const EXPAND_OPT = {\n  bitLength: 256,\n  isLe: false\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/secp256k1/secp256k1.js"],"names":["elliptic","EC","ec","secp256k1","EXPAND_OPT","bitLength","isLe"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,EAApB;AACA,OAAO,MAAMC,SAAS,GAAG,IAAIF,EAAJ,CAAO,WAAP,CAAlB;AACP,OAAO,MAAMG,UAAU,GAAG;AACxBC,EAAAA,SAAS,EAAE,GADa;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAAnB","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport elliptic from 'elliptic';\nconst EC = elliptic.ec;\nexport const secp256k1 = new EC('secp256k1');\nexport const EXPAND_OPT = {\n  bitLength: 256,\n  isLe: false\n};"]},"metadata":{},"sourceType":"module"}