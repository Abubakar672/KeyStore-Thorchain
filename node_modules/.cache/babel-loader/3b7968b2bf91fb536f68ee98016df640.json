{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function extractContributed(paraId, events) {\n  var _events$createdAtHash;\n\n  const added = [];\n  const removed = [];\n  return events.filter(({\n    event: {\n      data: [, eventParaId],\n      method,\n      section\n    }\n  }) => section === 'crowdloan' && ['Contributed', 'Withdrew'].includes(method) && eventParaId.eq(paraId)).reduce((result, {\n    event: {\n      data: [accountId],\n      method\n    }\n  }) => {\n    if (method === 'Contributed') {\n      result.added.push(accountId.toHex());\n    } else {\n      result.removed.push(accountId.toHex());\n    }\n\n    return result;\n  }, {\n    added,\n    blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',\n    removed\n  });\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/crowdloan/util.js"],"names":["extractContributed","paraId","events","_events$createdAtHash","added","removed","filter","event","data","eventParaId","method","section","includes","eq","reduce","result","accountId","push","toHex","blockHash","createdAtHash"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,kBAAT,CAA4BC,MAA5B,EAAoCC,MAApC,EAA4C;AACjD,MAAIC,qBAAJ;;AAEA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,SAAOH,MAAM,CAACI,MAAP,CAAc,CAAC;AACpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,GAAGC,WAAH,CADD;AAELC,MAAAA,MAFK;AAGLC,MAAAA;AAHK;AADa,GAAD,KAMfA,OAAO,KAAK,WAAZ,IAA2B,CAAC,aAAD,EAAgB,UAAhB,EAA4BC,QAA5B,CAAqCF,MAArC,CAA3B,IAA2ED,WAAW,CAACI,EAAZ,CAAeZ,MAAf,CAN1E,EAMkGa,MANlG,CAMyG,CAACC,MAAD,EAAS;AACvHR,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CAACQ,SAAD,CADD;AAELN,MAAAA;AAFK;AADgH,GAAT,KAK1G;AACJ,QAAIA,MAAM,KAAK,aAAf,EAA8B;AAC5BK,MAAAA,MAAM,CAACX,KAAP,CAAaa,IAAb,CAAkBD,SAAS,CAACE,KAAV,EAAlB;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACV,OAAP,CAAeY,IAAf,CAAoBD,SAAS,CAACE,KAAV,EAApB;AACD;;AAED,WAAOH,MAAP;AACD,GAnBM,EAmBJ;AACDX,IAAAA,KADC;AAEDe,IAAAA,SAAS,EAAE,CAAC,CAAChB,qBAAqB,GAAGD,MAAM,CAACkB,aAAhC,MAAmD,IAAnD,IAA2DjB,qBAAqB,KAAK,KAAK,CAA1F,GAA8F,KAAK,CAAnG,GAAuGA,qBAAqB,CAACe,KAAtB,EAAxG,KAA0I,GAFpJ;AAGDb,IAAAA;AAHC,GAnBI,CAAP;AAwBD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function extractContributed(paraId, events) {\n  var _events$createdAtHash;\n\n  const added = [];\n  const removed = [];\n  return events.filter(({\n    event: {\n      data: [, eventParaId],\n      method,\n      section\n    }\n  }) => section === 'crowdloan' && ['Contributed', 'Withdrew'].includes(method) && eventParaId.eq(paraId)).reduce((result, {\n    event: {\n      data: [accountId],\n      method\n    }\n  }) => {\n    if (method === 'Contributed') {\n      result.added.push(accountId.toHex());\n    } else {\n      result.removed.push(accountId.toHex());\n    }\n\n    return result;\n  }, {\n    added,\n    blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',\n    removed\n  });\n}"]},"metadata":{},"sourceType":"module"}