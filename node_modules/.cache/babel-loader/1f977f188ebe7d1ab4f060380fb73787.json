{"ast":null,"code":"// OP_RETURN {aa21a9ed} {commitment}\nvar Buffer = require('safe-buffer').Buffer;\n\nvar bscript = require('../../script');\n\nvar types = require('../../types');\n\nvar typeforce = require('typeforce');\n\nvar OPS = require('@psf/bitcoincash-ops');\n\nvar HEADER = Buffer.from('aa21a9ed', 'hex');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length > 37 && buffer[0] === OPS.OP_RETURN && buffer[1] === 0x24 && buffer.slice(2, 6).equals(HEADER);\n}\n\ncheck.toJSON = function () {\n  return 'Witness commitment output';\n};\n\nfunction encode(commitment) {\n  typeforce(types.Hash256bit, commitment);\n  var buffer = Buffer.allocUnsafe(36);\n  HEADER.copy(buffer, 0);\n  commitment.copy(buffer, 4);\n  return bscript.compile([OPS.OP_RETURN, buffer]);\n}\n\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return bscript.decompile(buffer)[1].slice(4, 36);\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@psf/bitcoincashjs-lib/src/templates/witnesscommitment/output.js"],"names":["Buffer","require","bscript","types","typeforce","OPS","HEADER","from","check","script","buffer","compile","length","OP_RETURN","slice","equals","toJSON","encode","commitment","Hash256bit","allocUnsafe","copy","decode","decompile","module","exports"],"mappings":"AAAA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,sBAAD,CAAjB;;AAEA,IAAIK,MAAM,GAAGN,MAAM,CAACO,IAAP,CAAY,UAAZ,EAAwB,KAAxB,CAAb;;AAEA,SAASC,KAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,MAAM,GAAGR,OAAO,CAACS,OAAR,CAAgBF,MAAhB,CAAb;AAEA,SAAOC,MAAM,CAACE,MAAP,GAAgB,EAAhB,IACLF,MAAM,CAAC,CAAD,CAAN,KAAcL,GAAG,CAACQ,SADb,IAELH,MAAM,CAAC,CAAD,CAAN,KAAc,IAFT,IAGLA,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBC,MAAnB,CAA0BT,MAA1B,CAHF;AAID;;AAEDE,KAAK,CAACQ,MAAN,GAAe,YAAY;AAAE,SAAO,2BAAP;AAAoC,CAAjE;;AAEA,SAASC,MAAT,CAAiBC,UAAjB,EAA6B;AAC3Bd,EAAAA,SAAS,CAACD,KAAK,CAACgB,UAAP,EAAmBD,UAAnB,CAAT;AAEA,MAAIR,MAAM,GAAGV,MAAM,CAACoB,WAAP,CAAmB,EAAnB,CAAb;AACAd,EAAAA,MAAM,CAACe,IAAP,CAAYX,MAAZ,EAAoB,CAApB;AACAQ,EAAAA,UAAU,CAACG,IAAX,CAAgBX,MAAhB,EAAwB,CAAxB;AAEA,SAAOR,OAAO,CAACS,OAAR,CAAgB,CAACN,GAAG,CAACQ,SAAL,EAAgBH,MAAhB,CAAhB,CAAP;AACD;;AAED,SAASY,MAAT,CAAiBZ,MAAjB,EAAyB;AACvBN,EAAAA,SAAS,CAACI,KAAD,EAAQE,MAAR,CAAT;AAEA,SAAOR,OAAO,CAACqB,SAAR,CAAkBb,MAAlB,EAA0B,CAA1B,EAA6BI,KAA7B,CAAmC,CAAnC,EAAsC,EAAtC,CAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,KAAK,EAAEA,KADQ;AAEfc,EAAAA,MAAM,EAAEA,MAFO;AAGfL,EAAAA,MAAM,EAAEA;AAHO,CAAjB","sourcesContent":["// OP_RETURN {aa21a9ed} {commitment}\n\nvar Buffer = require('safe-buffer').Buffer\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nvar HEADER = Buffer.from('aa21a9ed', 'hex')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length > 37 &&\n    buffer[0] === OPS.OP_RETURN &&\n    buffer[1] === 0x24 &&\n    buffer.slice(2, 6).equals(HEADER)\n}\n\ncheck.toJSON = function () { return 'Witness commitment output' }\n\nfunction encode (commitment) {\n  typeforce(types.Hash256bit, commitment)\n\n  var buffer = Buffer.allocUnsafe(36)\n  HEADER.copy(buffer, 0)\n  commitment.copy(buffer, 4)\n\n  return bscript.compile([OPS.OP_RETURN, buffer])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return bscript.decompile(buffer)[1].slice(4, 36)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n"]},"metadata":{},"sourceType":"script"}