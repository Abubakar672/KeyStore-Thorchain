{"ast":null,"code":"import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n  if (keySelector === void 0) {\n    keySelector = identity;\n  }\n\n  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n  return operate(function (source, subscriber) {\n    var previousKey;\n    var first = true;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var currentKey = keySelector(value);\n\n      if (first || !comparator(previousKey, currentKey)) {\n        first = false;\n        previousKey = currentKey;\n        subscriber.next(value);\n      }\n    }));\n  });\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}","map":{"version":3,"sources":["../../../../src/internal/operators/distinctUntilChanged.ts"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,kBAAzB;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AA+IA,OAAM,SAAU,oBAAV,CACJ,UADI,EAEJ,WAFI,EAEsD;AAA1D,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAA+B,QAA/B;AAA0D;;AAK1D,EAAA,UAAU,GAAG,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAA,UAAA,GAAc,cAA3B;AAEA,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAGhC,QAAI,WAAJ;AAEA,QAAI,KAAK,GAAG,IAAZ;AAEA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AAEvC,UAAM,UAAU,GAAG,WAAW,CAAC,KAAD,CAA9B;;AAKA,UAAI,KAAK,IAAI,CAAC,UAAW,CAAC,WAAD,EAAc,UAAd,CAAzB,EAAoD;AAMlD,QAAA,KAAK,GAAG,KAAR;AACA,QAAA,WAAW,GAAG,UAAd;AAGA,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACD;AACF,KAnBD,CADF;AAsBD,GA7Ba,CAAd;AA8BD;;AAED,SAAS,cAAT,CAAwB,CAAxB,EAAgC,CAAhC,EAAsC;AACpC,SAAO,CAAC,KAAK,CAAb;AACD","sourceRoot":"","sourcesContent":["import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map"]},"metadata":{},"sourceType":"module"}