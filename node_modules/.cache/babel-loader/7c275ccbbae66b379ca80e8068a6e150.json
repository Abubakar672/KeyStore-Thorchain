{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VarInt = exports.UVarInt = void 0;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nfunction VarIntFunc(signed) {\n  var encodingLength = function encodingLength(n) {\n    if (signed) n *= 2;\n\n    if (n < 0) {\n      throw Error(\"varint value is out of bounds\");\n    }\n\n    var bits = Math.log2(n + 1);\n    return Math.ceil(bits / 7) || 1;\n  };\n\n  var encode = function encode(n, buffer, offset) {\n    if (n < 0) {\n      throw Error(\"varint value is out of bounds\");\n    }\n\n    buffer = buffer || Buffer.alloc(encodingLength(n));\n    offset = offset || 0;\n    var nStr = n.toString();\n    var bn = new _bn[\"default\"](nStr, 10);\n    var num255 = new _bn[\"default\"](0xff);\n    var num128 = new _bn[\"default\"](0x80); // amino signed varint is multiplied by 2\n\n    if (signed) {\n      bn = bn.muln(2);\n    }\n\n    var i = 0;\n\n    while (bn.gten(0x80)) {\n      buffer[offset + i] = bn.and(num255).or(num128).toNumber();\n      bn = bn.shrn(7);\n      i++;\n    }\n\n    buffer[offset + i] = bn.andln(0xff); // TODO\n    // encode.bytes = i + 1\n\n    return buffer;\n  };\n  /**\n   * https://github.com/golang/go/blob/master/src/encoding/binary/varint.go#L60\n   */\n\n\n  var decode = function decode(bytes) {\n    var x = 0;\n    var s = 0;\n\n    for (var i = 0, len = bytes.length; i < len; i++) {\n      var b = bytes[i];\n\n      if (b < 0x80) {\n        if (i > 9 || i === 9 && b > 1) {\n          return 0;\n        }\n\n        return x | b << s;\n      }\n\n      x |= (b & 0x7f) << s;\n      s += 7;\n    }\n\n    return 0;\n  };\n\n  return {\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n}\n\nvar UVarInt = VarIntFunc(false);\nexports.UVarInt = UVarInt;\nvar VarInt = VarIntFunc(true);\nexports.VarInt = VarInt;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@binance-chain/javascript-sdk/lib/amino/encoder/varint.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","VarInt","UVarInt","_bn","VarIntFunc","signed","encodingLength","n","Error","bits","Math","log2","ceil","encode","buffer","offset","Buffer","alloc","nStr","toString","bn","num255","num128","muln","i","gten","and","or","toNumber","shrn","andln","decode","bytes","x","s","len","length","b"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VarInt = exports.UVarInt = void 0;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nfunction VarIntFunc(signed) {\n  var encodingLength = function encodingLength(n) {\n    if (signed) n *= 2;\n\n    if (n < 0) {\n      throw Error(\"varint value is out of bounds\");\n    }\n\n    var bits = Math.log2(n + 1);\n    return Math.ceil(bits / 7) || 1;\n  };\n\n  var encode = function encode(n, buffer, offset) {\n    if (n < 0) {\n      throw Error(\"varint value is out of bounds\");\n    }\n\n    buffer = buffer || Buffer.alloc(encodingLength(n));\n    offset = offset || 0;\n    var nStr = n.toString();\n    var bn = new _bn[\"default\"](nStr, 10);\n    var num255 = new _bn[\"default\"](0xff);\n    var num128 = new _bn[\"default\"](0x80); // amino signed varint is multiplied by 2\n\n    if (signed) {\n      bn = bn.muln(2);\n    }\n\n    var i = 0;\n\n    while (bn.gten(0x80)) {\n      buffer[offset + i] = bn.and(num255).or(num128).toNumber();\n      bn = bn.shrn(7);\n      i++;\n    }\n\n    buffer[offset + i] = bn.andln(0xff); // TODO\n    // encode.bytes = i + 1\n\n    return buffer;\n  };\n  /**\n   * https://github.com/golang/go/blob/master/src/encoding/binary/varint.go#L60\n   */\n\n\n  var decode = function decode(bytes) {\n    var x = 0;\n    var s = 0;\n\n    for (var i = 0, len = bytes.length; i < len; i++) {\n      var b = bytes[i];\n\n      if (b < 0x80) {\n        if (i > 9 || i === 9 && b > 1) {\n          return 0;\n        }\n\n        return x | b << s;\n      }\n\n      x |= (b & 0x7f) << s;\n      s += 7;\n    }\n\n    return 0;\n  };\n\n  return {\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n}\n\nvar UVarInt = VarIntFunc(false);\nexports.UVarInt = UVarInt;\nvar VarInt = VarIntFunc(true);\nexports.VarInt = VarInt;"]},"metadata":{},"sourceType":"script"}