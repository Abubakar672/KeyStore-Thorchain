{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto = __importStar(require(\"crypto\"));\n\nvar secp256k1 = __importStar(require(\"tiny-secp256k1\"));\n/**\n * secp256k1\n */\n\n\nvar PrivKeySecp256k1 =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param privKey\n   */\n  function PrivKeySecp256k1(privKey) {\n    this.pubKey = new PubKeySecp256k1(secp256k1.pointFromScalar(privKey));\n    this.privKey = privKey;\n  }\n  /**\n   *\n   */\n\n\n  PrivKeySecp256k1.prototype.getPubKey = function () {\n    return this.pubKey;\n  };\n  /**\n   *\n   * @param message\n   */\n\n\n  PrivKeySecp256k1.prototype.sign = function (message) {\n    var hash = crypto.createHash(\"sha256\").update(message).digest();\n    var signature = secp256k1.sign(hash, this.privKey);\n    return signature;\n  };\n  /**\n   *\n   */\n\n\n  PrivKeySecp256k1.prototype.toBuffer = function () {\n    return Buffer.from(this.privKey);\n  };\n  /**\n   *\n   */\n\n\n  PrivKeySecp256k1.prototype.toBase64 = function () {\n    return this.privKey.toString(\"base64\");\n  };\n\n  PrivKeySecp256k1.prototype.toJSONInCodec = function () {\n    return this.toBase64();\n  };\n  /**\n   *\n   * @param value\n   */\n\n\n  PrivKeySecp256k1.fromBase64 = function (value) {\n    var buffer = Buffer.from(value, \"base64\");\n    return new PrivKeySecp256k1(buffer);\n  };\n\n  PrivKeySecp256k1.fromJSON = function (value) {\n    return PrivKeySecp256k1.fromBase64(value);\n  };\n\n  return PrivKeySecp256k1;\n}();\n\nexports.PrivKeySecp256k1 = PrivKeySecp256k1;\n/**\n * secp256k1公開鍵。\n */\n\nvar PubKeySecp256k1 =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param pubKey\n   */\n  function PubKeySecp256k1(pubKey) {\n    this.pubKey = pubKey;\n  }\n\n  PubKeySecp256k1.prototype.hash160 = function (buffer) {\n    var sha256Hash = crypto.createHash(\"sha256\").update(buffer).digest();\n\n    try {\n      return crypto.createHash(\"rmd160\").update(sha256Hash).digest();\n    } catch (err) {\n      return crypto.createHash(\"ripemd160\").update(sha256Hash).digest();\n    }\n  };\n\n  PubKeySecp256k1.prototype.getAddress = function () {\n    return this.hash160(this.pubKey);\n  };\n  /**\n   *\n   * @param message\n   * @param signature\n   */\n\n\n  PubKeySecp256k1.prototype.verify = function (signature, message) {\n    var hash = crypto.createHash(\"sha256\").update(message).digest();\n    return secp256k1.verify(hash, signature, this.pubKey);\n  };\n  /**\n   *\n   */\n\n\n  PubKeySecp256k1.prototype.toBuffer = function () {\n    return Buffer.from(this.pubKey);\n  };\n  /**\n   *\n   */\n\n\n  PubKeySecp256k1.prototype.toBase64 = function () {\n    return this.pubKey.toString(\"base64\");\n  };\n\n  PubKeySecp256k1.prototype.toJSONInCodec = function () {\n    return this.toBase64();\n  };\n  /**\n   *\n   */\n\n\n  PubKeySecp256k1.fromBase64 = function (value) {\n    var buffer = Buffer.from(value, \"base64\");\n    return new PubKeySecp256k1(buffer);\n  };\n\n  PubKeySecp256k1.fromJSON = function (value) {\n    return PubKeySecp256k1.fromBase64(value);\n  };\n\n  return PubKeySecp256k1;\n}();\n\nexports.PubKeySecp256k1 = PubKeySecp256k1;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/cosmos-client/tendermint/types/secp256k1.js"],"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","crypto","require","secp256k1","PrivKeySecp256k1","privKey","pubKey","PubKeySecp256k1","pointFromScalar","prototype","getPubKey","sign","message","hash","createHash","update","digest","signature","toBuffer","Buffer","from","toBase64","toString","toJSONInCodec","fromBase64","buffer","fromJSON","hash160","sha256Hash","err","getAddress","verify"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = __importStar(require(\"crypto\"));\nvar secp256k1 = __importStar(require(\"tiny-secp256k1\"));\n/**\n * secp256k1\n */\nvar PrivKeySecp256k1 = /** @class */ (function () {\n    /**\n     *\n     * @param privKey\n     */\n    function PrivKeySecp256k1(privKey) {\n        this.pubKey = new PubKeySecp256k1(secp256k1.pointFromScalar(privKey));\n        this.privKey = privKey;\n    }\n    /**\n     *\n     */\n    PrivKeySecp256k1.prototype.getPubKey = function () {\n        return this.pubKey;\n    };\n    /**\n     *\n     * @param message\n     */\n    PrivKeySecp256k1.prototype.sign = function (message) {\n        var hash = crypto.createHash(\"sha256\").update(message).digest();\n        var signature = secp256k1.sign(hash, this.privKey);\n        return signature;\n    };\n    /**\n     *\n     */\n    PrivKeySecp256k1.prototype.toBuffer = function () {\n        return Buffer.from(this.privKey);\n    };\n    /**\n     *\n     */\n    PrivKeySecp256k1.prototype.toBase64 = function () {\n        return this.privKey.toString(\"base64\");\n    };\n    PrivKeySecp256k1.prototype.toJSONInCodec = function () {\n        return this.toBase64();\n    };\n    /**\n     *\n     * @param value\n     */\n    PrivKeySecp256k1.fromBase64 = function (value) {\n        var buffer = Buffer.from(value, \"base64\");\n        return new PrivKeySecp256k1(buffer);\n    };\n    PrivKeySecp256k1.fromJSON = function (value) {\n        return PrivKeySecp256k1.fromBase64(value);\n    };\n    return PrivKeySecp256k1;\n}());\nexports.PrivKeySecp256k1 = PrivKeySecp256k1;\n/**\n * secp256k1公開鍵。\n */\nvar PubKeySecp256k1 = /** @class */ (function () {\n    /**\n     *\n     * @param pubKey\n     */\n    function PubKeySecp256k1(pubKey) {\n        this.pubKey = pubKey;\n    }\n    PubKeySecp256k1.prototype.hash160 = function (buffer) {\n        var sha256Hash = crypto\n            .createHash(\"sha256\")\n            .update(buffer)\n            .digest();\n        try {\n            return crypto.createHash(\"rmd160\").update(sha256Hash).digest();\n        }\n        catch (err) {\n            return crypto.createHash(\"ripemd160\").update(sha256Hash).digest();\n        }\n    };\n    PubKeySecp256k1.prototype.getAddress = function () {\n        return this.hash160(this.pubKey);\n    };\n    /**\n     *\n     * @param message\n     * @param signature\n     */\n    PubKeySecp256k1.prototype.verify = function (signature, message) {\n        var hash = crypto.createHash(\"sha256\").update(message).digest();\n        return secp256k1.verify(hash, signature, this.pubKey);\n    };\n    /**\n     *\n     */\n    PubKeySecp256k1.prototype.toBuffer = function () {\n        return Buffer.from(this.pubKey);\n    };\n    /**\n     *\n     */\n    PubKeySecp256k1.prototype.toBase64 = function () {\n        return this.pubKey.toString(\"base64\");\n    };\n    PubKeySecp256k1.prototype.toJSONInCodec = function () {\n        return this.toBase64();\n    };\n    /**\n     *\n     */\n    PubKeySecp256k1.fromBase64 = function (value) {\n        var buffer = Buffer.from(value, \"base64\");\n        return new PubKeySecp256k1(buffer);\n    };\n    PubKeySecp256k1.fromJSON = function (value) {\n        return PubKeySecp256k1.fromBase64(value);\n    };\n    return PubKeySecp256k1;\n}());\nexports.PubKeySecp256k1 = PubKeySecp256k1;\n"]},"metadata":{},"sourceType":"script"}