{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      alias: ['state_callAt'],\n      description: 'Perform a call to a builtin on the chain',\n      params: [{\n        name: 'method',\n        type: 'Text'\n      }, {\n        name: 'data',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Bytes'\n    },\n    getKeys: {\n      description: 'Retrieves the keys with a certain prefix',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getPairs: {\n      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n      params: [{\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<KeyValue>'\n    },\n    getKeysPaged: {\n      alias: ['state_getKeysPagedAt'],\n      description: 'Returns the keys with prefix with pagination support.',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      alias: ['state_getStorageAt'],\n      description: 'Retrieves the storage for a key',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getStorageHash: {\n      alias: ['state_getStorageHashAt'],\n      description: 'Retrieves the storage hash',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getStorageSize: {\n      alias: ['state_getStorageSizeAt'],\n      description: 'Retrieves the storage size',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getChildKeys: {\n      description: 'Retrieves the keys with prefix of a specific child storage',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getChildStorage: {\n      description: 'Retrieves the child storage for a key',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getChildStorageHash: {\n      description: 'Retrieves the child storage hash',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getChildStorageSize: {\n      description: 'Retrieves the child storage size',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getMetadata: {\n      description: 'Returns the runtime metadata',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Metadata'\n    },\n    getRuntimeVersion: {\n      alias: ['chain_getRuntimeVersion'],\n      description: 'Get the runtime version',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'RuntimeVersion'\n    },\n    queryStorage: {\n      description: 'Query historical storage entries (by key) starting from a start block',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'fromBlock',\n        type: 'Hash'\n      }, {\n        name: 'toBlock',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n      description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    getChildReadProof: {\n      description: 'Returns proof of storage for child key entries at a specific block state.',\n      params: [{\n        name: 'childStorageKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    getReadProof: {\n      description: 'Returns proof of storage entries at a specific block state',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    subscribeRuntimeVersion: {\n      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n      description: 'Retrieves the runtime version via subscription',\n      params: [],\n      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n      type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n      description: 'Subscribes to storage changes for the provided keys',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>',\n        isOptional: true\n      }],\n      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],\n      type: 'StorageChangeSet'\n    },\n    traceBlock: {\n      description: 'Provides a way to trace the re-execution of a single block',\n      params: [{\n        name: 'block',\n        type: 'Hash'\n      }, {\n        name: 'targets',\n        type: 'Option<Text>'\n      }, {\n        name: 'storageKeys',\n        type: 'Option<Text>'\n      }],\n      type: 'TraceBlockResponse'\n    }\n  },\n  types: {\n    ApiId: '[u8; 8]',\n    BlockTrace: {\n      blockHash: 'Text',\n      parentHash: 'Text',\n      tracingTargets: 'Text',\n      storageKeys: 'Text',\n      spans: 'Vec<BlockTraceSpan>',\n      events: 'Vec<BlockTraceEvent>'\n    },\n    BlockTraceEvent: {\n      target: 'Text',\n      data: 'BlockTraceEventData',\n      parentId: 'Option<u64>'\n    },\n    BlockTraceEventData: {\n      stringValues: 'HashMap<Text, Text>'\n    },\n    BlockTraceSpan: {\n      id: 'u64',\n      parentId: 'Option<u64>',\n      name: 'Text',\n      target: 'Text',\n      wasm: 'bool'\n    },\n    KeyValueOption: '(StorageKey, Option<StorageData>)',\n    ReadProof: {\n      at: 'Hash',\n      proof: 'Vec<Bytes>'\n    },\n    RuntimeVersionApi: '(ApiId, u32)',\n    RuntimeVersion: {\n      specName: 'Text',\n      implName: 'Text',\n      authoringVersion: 'u32',\n      specVersion: 'u32',\n      implVersion: 'u32',\n      apis: 'Vec<RuntimeVersionApi>',\n      transactionVersion: 'u32'\n    },\n    RuntimeVersionPartial: {\n      specName: 'Text',\n      specVersion: 'u32'\n    },\n    StorageChangeSet: {\n      block: 'Hash',\n      changes: 'Vec<KeyValueOption>'\n    },\n    TraceBlockResponse: {\n      _enum: {\n        TraceError: 'TraceError',\n        BlockTrace: 'BlockTrace'\n      }\n    },\n    TraceError: {\n      error: 'Text'\n    }\n  }\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/state/definitions.js"],"names":["rpc","call","alias","description","params","name","type","isHistoric","isOptional","getKeys","getPairs","getKeysPaged","getStorage","getStorageHash","getStorageSize","getChildKeys","getChildStorage","getChildStorageHash","getChildStorageSize","getMetadata","getRuntimeVersion","queryStorage","queryStorageAt","getChildReadProof","getReadProof","subscribeRuntimeVersion","pubsub","subscribeStorage","traceBlock","types","ApiId","BlockTrace","blockHash","parentHash","tracingTargets","storageKeys","spans","events","BlockTraceEvent","target","data","parentId","BlockTraceEventData","stringValues","BlockTraceSpan","id","wasm","KeyValueOption","ReadProof","at","proof","RuntimeVersionApi","RuntimeVersion","specName","implName","authoringVersion","specVersion","implVersion","apis","transactionVersion","RuntimeVersionPartial","StorageChangeSet","block","changes","TraceBlockResponse","_enum","TraceError","error"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      alias: ['state_callAt'],\n      description: 'Perform a call to a builtin on the chain',\n      params: [{\n        name: 'method',\n        type: 'Text'\n      }, {\n        name: 'data',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Bytes'\n    },\n    getKeys: {\n      description: 'Retrieves the keys with a certain prefix',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getPairs: {\n      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n      params: [{\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<KeyValue>'\n    },\n    getKeysPaged: {\n      alias: ['state_getKeysPagedAt'],\n      description: 'Returns the keys with prefix with pagination support.',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      alias: ['state_getStorageAt'],\n      description: 'Retrieves the storage for a key',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getStorageHash: {\n      alias: ['state_getStorageHashAt'],\n      description: 'Retrieves the storage hash',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getStorageSize: {\n      alias: ['state_getStorageSizeAt'],\n      description: 'Retrieves the storage size',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getChildKeys: {\n      description: 'Retrieves the keys with prefix of a specific child storage',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getChildStorage: {\n      description: 'Retrieves the child storage for a key',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getChildStorageHash: {\n      description: 'Retrieves the child storage hash',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getChildStorageSize: {\n      description: 'Retrieves the child storage size',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getMetadata: {\n      description: 'Returns the runtime metadata',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Metadata'\n    },\n    getRuntimeVersion: {\n      alias: ['chain_getRuntimeVersion'],\n      description: 'Get the runtime version',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'RuntimeVersion'\n    },\n    queryStorage: {\n      description: 'Query historical storage entries (by key) starting from a start block',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'fromBlock',\n        type: 'Hash'\n      }, {\n        name: 'toBlock',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n      description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    getChildReadProof: {\n      description: 'Returns proof of storage for child key entries at a specific block state.',\n      params: [{\n        name: 'childStorageKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    getReadProof: {\n      description: 'Returns proof of storage entries at a specific block state',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    subscribeRuntimeVersion: {\n      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n      description: 'Retrieves the runtime version via subscription',\n      params: [],\n      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n      type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n      description: 'Subscribes to storage changes for the provided keys',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>',\n        isOptional: true\n      }],\n      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],\n      type: 'StorageChangeSet'\n    },\n    traceBlock: {\n      description: 'Provides a way to trace the re-execution of a single block',\n      params: [{\n        name: 'block',\n        type: 'Hash'\n      }, {\n        name: 'targets',\n        type: 'Option<Text>'\n      }, {\n        name: 'storageKeys',\n        type: 'Option<Text>'\n      }],\n      type: 'TraceBlockResponse'\n    }\n  },\n  types: {\n    ApiId: '[u8; 8]',\n    BlockTrace: {\n      blockHash: 'Text',\n      parentHash: 'Text',\n      tracingTargets: 'Text',\n      storageKeys: 'Text',\n      spans: 'Vec<BlockTraceSpan>',\n      events: 'Vec<BlockTraceEvent>'\n    },\n    BlockTraceEvent: {\n      target: 'Text',\n      data: 'BlockTraceEventData',\n      parentId: 'Option<u64>'\n    },\n    BlockTraceEventData: {\n      stringValues: 'HashMap<Text, Text>'\n    },\n    BlockTraceSpan: {\n      id: 'u64',\n      parentId: 'Option<u64>',\n      name: 'Text',\n      target: 'Text',\n      wasm: 'bool'\n    },\n    KeyValueOption: '(StorageKey, Option<StorageData>)',\n    ReadProof: {\n      at: 'Hash',\n      proof: 'Vec<Bytes>'\n    },\n    RuntimeVersionApi: '(ApiId, u32)',\n    RuntimeVersion: {\n      specName: 'Text',\n      implName: 'Text',\n      authoringVersion: 'u32',\n      specVersion: 'u32',\n      implVersion: 'u32',\n      apis: 'Vec<RuntimeVersionApi>',\n      transactionVersion: 'u32'\n    },\n    RuntimeVersionPartial: {\n      specName: 'Text',\n      specVersion: 'u32'\n    },\n    StorageChangeSet: {\n      block: 'Hash',\n      changes: 'Vec<KeyValueOption>'\n    },\n    TraceBlockResponse: {\n      _enum: {\n        TraceError: 'TraceError',\n        BlockTrace: 'BlockTrace'\n      }\n    },\n    TraceError: {\n      error: 'Text'\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}