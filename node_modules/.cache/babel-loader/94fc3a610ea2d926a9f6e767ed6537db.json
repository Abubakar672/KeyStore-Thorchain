{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\n\nfunction formatValue(elapsed) {\n  if (elapsed < 15) {\n    return `${elapsed.toFixed(1)}s`;\n  } else if (elapsed < 60) {\n    return `${elapsed | 0}s`;\n  } else if (elapsed < 3600) {\n    return `${elapsed / 60 | 0}m`;\n  }\n\n  return `${elapsed / 3600 | 0}h`;\n}\n\nexport function formatElapsed(now, value) {\n  const tsNow = now && now.getTime() || 0;\n  const tsValue = value instanceof Date ? value.getTime() : bnToBn(value).toNumber();\n  return tsNow && tsValue ? formatValue(Math.max(Math.abs(tsNow - tsValue), 0) / 1000) : '0.0s';\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/format/formatElapsed.js"],"names":["bnToBn","formatValue","elapsed","toFixed","formatElapsed","now","value","tsNow","getTime","tsValue","Date","toNumber","Math","max","abs"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,QAAuB,eAAvB;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,MAAIA,OAAO,GAAG,EAAd,EAAkB;AAChB,WAAQ,GAAEA,OAAO,CAACC,OAAR,CAAgB,CAAhB,CAAmB,GAA7B;AACD,GAFD,MAEO,IAAID,OAAO,GAAG,EAAd,EAAkB;AACvB,WAAQ,GAAEA,OAAO,GAAG,CAAE,GAAtB;AACD,GAFM,MAEA,IAAIA,OAAO,GAAG,IAAd,EAAoB;AACzB,WAAQ,GAAEA,OAAO,GAAG,EAAV,GAAe,CAAE,GAA3B;AACD;;AAED,SAAQ,GAAEA,OAAO,GAAG,IAAV,GAAiB,CAAE,GAA7B;AACD;;AAED,OAAO,SAASE,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmC;AACxC,QAAMC,KAAK,GAAGF,GAAG,IAAIA,GAAG,CAACG,OAAJ,EAAP,IAAwB,CAAtC;AACA,QAAMC,OAAO,GAAGH,KAAK,YAAYI,IAAjB,GAAwBJ,KAAK,CAACE,OAAN,EAAxB,GAA0CR,MAAM,CAACM,KAAD,CAAN,CAAcK,QAAd,EAA1D;AACA,SAAOJ,KAAK,IAAIE,OAAT,GAAmBR,WAAW,CAACW,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASP,KAAK,GAAGE,OAAjB,CAAT,EAAoC,CAApC,IAAyC,IAA1C,CAA9B,GAAgF,MAAvF;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\n\nfunction formatValue(elapsed) {\n  if (elapsed < 15) {\n    return `${elapsed.toFixed(1)}s`;\n  } else if (elapsed < 60) {\n    return `${elapsed | 0}s`;\n  } else if (elapsed < 3600) {\n    return `${elapsed / 60 | 0}m`;\n  }\n\n  return `${elapsed / 3600 | 0}h`;\n}\n\nexport function formatElapsed(now, value) {\n  const tsNow = now && now.getTime() || 0;\n  const tsValue = value instanceof Date ? value.getTime() : bnToBn(value).toNumber();\n  return tsNow && tsValue ? formatValue(Math.max(Math.abs(tsNow - tsValue), 0) / 1000) : '0.0s';\n}"]},"metadata":{},"sourceType":"module"}