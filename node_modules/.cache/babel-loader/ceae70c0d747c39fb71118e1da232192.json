{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst mapCache = new Map();\nexport const deriveMapCache = {\n  del: key => {\n    mapCache.delete(key);\n  },\n  forEach: cb => {\n    const entries = mapCache.entries();\n\n    for (const entry in entries) {\n      cb(entry[0], entry[1]);\n    }\n  },\n  get: key => {\n    return mapCache.get(key);\n  },\n  set: (key, value) => {\n    mapCache.set(key, value);\n  }\n};\nexport const deriveNoopCache = {\n  del: () => undefined,\n  forEach: () => undefined,\n  get: () => undefined,\n  set: (_, value) => value\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/util/cacheImpl.js"],"names":["mapCache","Map","deriveMapCache","del","key","delete","forEach","cb","entries","entry","get","set","value","deriveNoopCache","undefined","_"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;AACA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,GAAG,EAAEC,GAAG,IAAI;AACVJ,IAAAA,QAAQ,CAACK,MAAT,CAAgBD,GAAhB;AACD,GAH2B;AAI5BE,EAAAA,OAAO,EAAEC,EAAE,IAAI;AACb,UAAMC,OAAO,GAAGR,QAAQ,CAACQ,OAAT,EAAhB;;AAEA,SAAK,MAAMC,KAAX,IAAoBD,OAApB,EAA6B;AAC3BD,MAAAA,EAAE,CAACE,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAF;AACD;AACF,GAV2B;AAW5BC,EAAAA,GAAG,EAAEN,GAAG,IAAI;AACV,WAAOJ,QAAQ,CAACU,GAAT,CAAaN,GAAb,CAAP;AACD,GAb2B;AAc5BO,EAAAA,GAAG,EAAE,CAACP,GAAD,EAAMQ,KAAN,KAAgB;AACnBZ,IAAAA,QAAQ,CAACW,GAAT,CAAaP,GAAb,EAAkBQ,KAAlB;AACD;AAhB2B,CAAvB;AAkBP,OAAO,MAAMC,eAAe,GAAG;AAC7BV,EAAAA,GAAG,EAAE,MAAMW,SADkB;AAE7BR,EAAAA,OAAO,EAAE,MAAMQ,SAFc;AAG7BJ,EAAAA,GAAG,EAAE,MAAMI,SAHkB;AAI7BH,EAAAA,GAAG,EAAE,CAACI,CAAD,EAAIH,KAAJ,KAAcA;AAJU,CAAxB","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst mapCache = new Map();\nexport const deriveMapCache = {\n  del: key => {\n    mapCache.delete(key);\n  },\n  forEach: cb => {\n    const entries = mapCache.entries();\n\n    for (const entry in entries) {\n      cb(entry[0], entry[1]);\n    }\n  },\n  get: key => {\n    return mapCache.get(key);\n  },\n  set: (key, value) => {\n    mapCache.set(key, value);\n  }\n};\nexport const deriveNoopCache = {\n  del: () => undefined,\n  forEach: () => undefined,\n  get: () => undefined,\n  set: (_, value) => value\n};"]},"metadata":{},"sourceType":"module"}