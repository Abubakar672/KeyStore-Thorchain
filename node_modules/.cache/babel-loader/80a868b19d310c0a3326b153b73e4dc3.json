{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { arrayRange } from \"../array/index.js\";\nconst ALPHABET = arrayRange(256).map(n => n.toString(16).padStart(2, '0'));\n/** @internal */\n\nfunction extract(value) {\n  const result = new Array(value.length);\n\n  for (let i = 0; i < value.length; i++) {\n    result[i] = ALPHABET[value[i]];\n  }\n\n  return result.join('');\n}\n/** @internal */\n\n\nfunction unprefixed(value, bitLength = -1) {\n  const byteLength = Math.ceil(bitLength / 8);\n  return byteLength > 0 && value.length > byteLength ? trim(value, Math.ceil(byteLength / 2)) : extract(value);\n}\n/** @internal */\n\n\nfunction trim(value, halfLength) {\n  return `${unprefixed(value.subarray(0, halfLength))}…${unprefixed(value.subarray(value.length - halfLength))}`;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : unprefixed(value, bitLength)}`;\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/u8a/toHex.js"],"names":["arrayRange","ALPHABET","map","n","toString","padStart","extract","value","result","Array","length","i","join","unprefixed","bitLength","byteLength","Math","ceil","trim","halfLength","subarray","u8aToHex","isPrefixed"],"mappings":"AAAA;AACA;AACA,SAASA,UAAT,QAA2B,mBAA3B;AACA,MAAMC,QAAQ,GAAGD,UAAU,CAAC,GAAD,CAAV,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAW,EAAX,EAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAzB,CAAjB;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACG,MAAhB,CAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACG,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,MAAM,CAACG,CAAD,CAAN,GAAYV,QAAQ,CAACM,KAAK,CAACI,CAAD,CAAN,CAApB;AACD;;AAED,SAAOH,MAAM,CAACI,IAAP,CAAY,EAAZ,CAAP;AACD;AACD;;;AAGA,SAASC,UAAT,CAAoBN,KAApB,EAA2BO,SAAS,GAAG,CAAC,CAAxC,EAA2C;AACzC,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,SAAS,GAAG,CAAtB,CAAnB;AACA,SAAOC,UAAU,GAAG,CAAb,IAAkBR,KAAK,CAACG,MAAN,GAAeK,UAAjC,GAA8CG,IAAI,CAACX,KAAD,EAAQS,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAG,CAAvB,CAAR,CAAlD,GAAuFT,OAAO,CAACC,KAAD,CAArG;AACD;AACD;;;AAGA,SAASW,IAAT,CAAcX,KAAd,EAAqBY,UAArB,EAAiC;AAC/B,SAAQ,GAAEN,UAAU,CAACN,KAAK,CAACa,QAAN,CAAe,CAAf,EAAkBD,UAAlB,CAAD,CAAgC,IAAGN,UAAU,CAACN,KAAK,CAACa,QAAN,CAAeb,KAAK,CAACG,MAAN,GAAeS,UAA9B,CAAD,CAA4C,EAA7G;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASE,QAAT,CAAkBd,KAAlB,EAAyBO,SAAS,GAAG,CAAC,CAAtC,EAAyCQ,UAAU,GAAG,IAAtD,EAA4D;AACjE,SAAQ,GAAEA,UAAU,GAAG,IAAH,GAAU,EAAG,GAAE,CAACf,KAAD,IAAU,CAACA,KAAK,CAACG,MAAjB,GAA0B,EAA1B,GAA+BG,UAAU,CAACN,KAAD,EAAQO,SAAR,CAAmB,EAA/F;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { arrayRange } from \"../array/index.js\";\nconst ALPHABET = arrayRange(256).map(n => n.toString(16).padStart(2, '0'));\n/** @internal */\n\nfunction extract(value) {\n  const result = new Array(value.length);\n\n  for (let i = 0; i < value.length; i++) {\n    result[i] = ALPHABET[value[i]];\n  }\n\n  return result.join('');\n}\n/** @internal */\n\n\nfunction unprefixed(value, bitLength = -1) {\n  const byteLength = Math.ceil(bitLength / 8);\n  return byteLength > 0 && value.length > byteLength ? trim(value, Math.ceil(byteLength / 2)) : extract(value);\n}\n/** @internal */\n\n\nfunction trim(value, halfLength) {\n  return `${unprefixed(value.subarray(0, halfLength))}…${unprefixed(value.subarray(value.length - halfLength))}`;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : unprefixed(value, bitLength)}`;\n}"]},"metadata":{},"sourceType":"module"}