{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { BehaviorSubject, combineLatest, from, map, of, switchMap, tap, toArray } from 'rxjs';\nimport { decorateDerive } from '@polkadot/api-derive';\nimport { memo, RpcCore } from '@polkadot/rpc-core';\nimport { WsProvider } from '@polkadot/rpc-provider';\nimport { expandMetadata, TypeRegistry, unwrapStorageType } from '@polkadot/types';\nimport { arrayChunk, arrayFlatten, assert, BN, BN_ZERO, compactStripLength, logger, u8aToHex } from '@polkadot/util';\nimport { createSubmittable } from \"../submittable/index.js\";\nimport { augmentObject } from \"../util/augmentObject.js\";\nimport { decorateSections } from \"../util/decorate.js\";\nimport { extractStorageArgs } from \"../util/validate.js\";\nimport { Events } from \"./Events.js\"; // the max amount of keys/values that we will retrieve at once\n\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\n\nconst PAGE_SIZE_V = 250; // limited since the data may be very large (e.g. misfiring elections)\n\nconst l = logger('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = /*#__PURE__*/_classPrivateFieldLooseKey(\"instanceId\");\n\nvar _registry = /*#__PURE__*/_classPrivateFieldLooseKey(\"registry\");\n\nexport class Decorate extends Events {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n  // latest extrinsic version\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new BN(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._errors = {};\n    this._events = {};\n    this._extrinsics = void 0;\n    this._extrinsicType = 4;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    _classPrivateFieldLooseBase(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    _classPrivateFieldLooseBase(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new TypeRegistry();\n    this._rx.registry = _classPrivateFieldLooseBase(this, _registry)[_registry];\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type; // The RPC interface decorates the known interfaces on init\n\n    this._rpcCore = new RpcCore(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], _classPrivateFieldLooseBase(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @description Return the current used registry\n   */\n\n\n  get registry() {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && _classPrivateFieldLooseBase(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @returns `true` if the API decorate multi-key queries\n   */\n\n\n  get supportMulti() {\n    return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;\n  }\n\n  _createDecorated(registry, fromEmpty, blockHash, decoratedApi) {\n    if (!decoratedApi) {\n      decoratedApi = {\n        consts: {},\n        errors: {},\n        events: {},\n        query: {},\n        rx: {\n          query: {}\n        }\n      };\n    }\n\n    if (!registry.decoratedMeta) {\n      registry.decoratedMeta = expandMetadata(registry.registry, registry.metadata);\n    } // adjust the versioned registry\n\n\n    augmentObject('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);\n    augmentObject('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);\n    augmentObject('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);\n    const storage = blockHash ? this._decorateStorageAt(registry.decoratedMeta, this._decorateMethod, blockHash) : this._decorateStorage(registry.decoratedMeta, this._decorateMethod);\n    const storageRx = blockHash ? this._decorateStorageAt(registry.decoratedMeta, this._rxDecorateMethod, blockHash) : this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod);\n    augmentObject('query', storage, decoratedApi.query, fromEmpty);\n    augmentObject('query', storageRx, decoratedApi.rx.query, fromEmpty);\n    return {\n      decoratedApi,\n      decoratedMeta: registry.decoratedMeta\n    };\n  }\n\n  _injectMetadata(registry, fromEmpty) {\n    // clear the decoration, we are redoing it here\n    if (fromEmpty || !registry.decoratedApi) {\n      registry.decoratedApi = {\n        consts: {},\n        errors: {},\n        events: {},\n        query: {},\n        rx: {\n          query: {}\n        }\n      };\n    }\n\n    const {\n      decoratedApi,\n      decoratedMeta\n    } = this._createDecorated(registry, fromEmpty, null, registry.decoratedApi);\n\n    this._consts = decoratedApi.consts;\n    this._errors = decoratedApi.errors;\n    this._events = decoratedApi.events;\n    this._query = decoratedApi.query;\n    this._rx.query = decoratedApi.rx.query;\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      augmentObject('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      augmentObject(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    }\n\n    augmentObject(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n  /**\n   * @deprecated\n   * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)\n   */\n\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    this._injectMetadata({\n      metadata,\n      registry: registry || _classPrivateFieldLooseBase(this, _registry)[_registry],\n      specName: _classPrivateFieldLooseBase(this, _registry)[_registry].createType('Text'),\n      specVersion: BN_ZERO\n    }, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  _filterRpc(methods, additional) {\n    // add any specific user-base RPCs\n    if (Object.keys(additional).length !== 0) {\n      this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces\n\n\n      this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);\n\n      this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(k => !allKeys.includes(k));\n    const deletion = allKnown.filter(([k]) => hasResults && !exposed.includes(k) && k !== 'rpc_methods');\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    deletion.forEach(([, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod, input = {}) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName;\n\n      if (!out[sectionName]) {\n        // out and section here are horrors to get right from a typing perspective :(\n        out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n          //  skip subscriptions where we have a non-subscribe interface\n          if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n            section[methodName] = decorateMethod(method, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].json = decorateMethod(method.json, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].raw = decorateMethod(method.raw, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].meta = method.meta;\n          }\n\n          return section;\n        }, {});\n      }\n\n      return out;\n    }, input);\n  } // only be called if supportMulti is true\n\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => (this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt)(calls.map(args => Array.isArray(args) ? args[0].creator.meta.type.asMap.hashers.length === 1 ? [args[0].creator, args.slice(1)] : [args[0].creator, ...args.slice(1)] : [args.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = createSubmittable(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // pass through the `.is`\n\n\n    decorated.is = other => method.is(other); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageAt({\n    query\n  }, decorateMethod, blockHash) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntryAt(method, decorateMethod, blockHash);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, ...args) => from(this.at(hash)).pipe(switchMap(api => {\n      assert(api.rx.query[creator.section] && api.rx.query[creator.section][creator.method], () => `query.${creator.section}.${creator.method} is not available in this version of the metadata`);\n      return api.rx.query[creator.section][creator.method](...args);\n    })));\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(...args))[1]);\n\n    decorated.keyPrefix = (...args) => u8aToHex(creator.keyPrefix(...args));\n\n    decorated.range = decorateMethod((range, ...args) => this._decorateStorageRange(decorated, args, range));\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));\n    decorated.sizeAt = decorateMethod((hash, ...args) => this._rpcCore.state.getStorageSize(getArgs(args), hash)); // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && creator.meta.type.isMap) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, null, args)));\n      decorated.entriesAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapEntries(creator, hash, args)));\n      decorated.entriesPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, null, args)));\n      decorated.keysAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapKeys(creator, hash, args)));\n      decorated.keysPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    }\n\n    if (this.supportMulti && creator.meta.type.isMap) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => creator.meta.type.asMap.hashers.length === 1 ? this._retrieveMulti(args.map(a => [creator, [a]])) : this._retrieveMulti(args.map(a => [creator, a])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  }\n\n  _decorateStorageEntryAt(creator, decorateMethod, blockHash) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = decorateMethod((...args) => this._rpcCore.state.getStorage(getArgs(args), blockHash));\n    decorated.creator = creator;\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args), blockHash));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(creator.meta.type.isPlain ? undefined : args))[1]);\n\n    decorated.keyPrefix = (...keys) => u8aToHex(creator.keyPrefix(...keys));\n\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args), blockHash)); // FIXME NMap support\n    // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && creator.meta.type.isMap) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, blockHash, args)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, blockHash, args)));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args)]).pipe(map(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage(extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage(extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = unwrapStorageType(_classPrivateFieldLooseBase(this, _registry)[_registry], decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe(map(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes\n\n\n  _retrieveMulti(keys) {\n    if (!keys.length) {\n      return of([]);\n    }\n\n    const queryCall = this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;\n    return combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(keys => queryCall(keys))).pipe(map(arrayFlatten));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, args) {\n    assert(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');\n    const headKey = iterKey(...args).toHex();\n    const startSubject = new BehaviorSubject(headKey);\n    const queryCall = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);\n    return startSubject.pipe(switchMap(queryCall), map(keys => keys.map(key => key.setMeta(meta, section, method))), tap(keys => {\n      setTimeout(() => {\n        keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n      }, 0);\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map(arrayFlatten));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    assert(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');\n    const headKey = iterKey(...opts.args).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe(map(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, args) {\n    const query = at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset);\n    return this._retrieveMapKeys(entry, at, args).pipe(switchMap(keys => keys.length ? combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(query)).pipe(map(valsArr => arrayFlatten(valsArr).map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe(switchMap(keys => keys.length ? this._rpcCore.state.queryStorageAt(keys).pipe(map(valsArr => valsArr.map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;\n\n    const specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString();\n\n    const derives = _objectSpread(_objectSpread({}, this._options.derives), ((_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName !== null && specName !== void 0 ? specName : '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives) || {}); // Pull in derive from api-derive\n\n\n    const derive = decorateDerive(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], this._rx, derives);\n    return decorateSections(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return decorateSections(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api/base/Decorate.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","BehaviorSubject","combineLatest","from","map","of","switchMap","tap","toArray","decorateDerive","memo","RpcCore","WsProvider","expandMetadata","TypeRegistry","unwrapStorageType","arrayChunk","arrayFlatten","assert","BN","BN_ZERO","compactStripLength","logger","u8aToHex","createSubmittable","augmentObject","decorateSections","extractStorageArgs","Events","PAGE_SIZE_K","PAGE_SIZE_V","l","instanceCounter","_instanceId","_registry","Decorate","constructor","options","type","decorateMethod","_options$source","writable","value","__phantom","_consts","_derive","_errors","_events","_extrinsics","_extrinsicType","_genesisHash","_isConnected","_isReady","_options","_query","_queryMulti","_rpc","_rpcCore","_runtimeChain","_runtimeMetadata","_runtimeVersion","_rx","consts","query","tx","_type","_decorateMethod","_rxDecorateMethod","method","registry","thisProvider","provider","clone","rpc","isConnected","hasSubscriptions","createType","params","registerTypes","types","register","supportMulti","state","queryStorageAt","_createDecorated","fromEmpty","blockHash","decoratedApi","errors","events","rx","decoratedMeta","metadata","storage","_decorateStorageAt","_decorateStorage","storageRx","_injectMetadata","_decorateExtrinsics","injectMetadata","specName","specVersion","_decorateFunctionMeta","input","output","meta","section","toJSON","callIndex","_filterRpc","methods","additional","addUserInterfaces","_decorateRpc","_filterRpcMethods","exposed","hasResults","allKnown","mapping","entries","allKeys","reduce","alias","endpoint","pubsub","unknown","k","includes","deletion","warn","join","sections","out","_sectionName","sectionName","methodName","startsWith","json","raw","_decorateMulti","calls","subscribeStorage","args","Array","isArray","creator","asMap","hashers","slice","name","_decorateExtrinsicEntry","decorated","is","other","_decorateStorageEntry","_decorateStorageEntryAt","getArgs","_decorateStorageCall","at","hash","pipe","api","getStorageHash","keyPrefix","range","_decorateStorageRange","size","getStorageSize","sizeAt","iterKey","isMap","_retrieveMapEntries","entriesAt","entriesPaged","opts","_retrieveMapEntriesPaged","_retrieveMapKeys","keysAt","keysPaged","_retrieveMapKeysPaged","multi","_retrieveMulti","a","getStorage","isPlain","undefined","data","overrideNoSub","outputType","modifier","isOptional","queryStorage","result","isSome","unwrap","toHex","queryCall","headKey","startSubject","startKey","getKeysPaged","setMeta","setTimeout","next","complete","pageSize","entry","keyset","valsArr","index","_decorateDeriveRx","_this$_runtimeVersion","_this$_options$typesB","_this$_options$typesB2","_this$_options$typesB3","toString","derives","typesBundle","spec","derive","_decorateDerive"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject, combineLatest, from, map, of, switchMap, tap, toArray } from 'rxjs';\nimport { decorateDerive } from '@polkadot/api-derive';\nimport { memo, RpcCore } from '@polkadot/rpc-core';\nimport { WsProvider } from '@polkadot/rpc-provider';\nimport { expandMetadata, TypeRegistry, unwrapStorageType } from '@polkadot/types';\nimport { arrayChunk, arrayFlatten, assert, BN, BN_ZERO, compactStripLength, logger, u8aToHex } from '@polkadot/util';\nimport { createSubmittable } from \"../submittable/index.js\";\nimport { augmentObject } from \"../util/augmentObject.js\";\nimport { decorateSections } from \"../util/decorate.js\";\nimport { extractStorageArgs } from \"../util/validate.js\";\nimport { Events } from \"./Events.js\";\n// the max amount of keys/values that we will retrieve at once\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\n\nconst PAGE_SIZE_V = 250; // limited since the data may be very large (e.g. misfiring elections)\n\nconst l = logger('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = /*#__PURE__*/_classPrivateFieldLooseKey(\"instanceId\");\n\nvar _registry = /*#__PURE__*/_classPrivateFieldLooseKey(\"registry\");\n\nexport class Decorate extends Events {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n  // latest extrinsic version\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new BN(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._errors = {};\n    this._events = {};\n    this._extrinsics = void 0;\n    this._extrinsicType = 4;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    _classPrivateFieldLooseBase(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    _classPrivateFieldLooseBase(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new TypeRegistry();\n    this._rx.registry = _classPrivateFieldLooseBase(this, _registry)[_registry];\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type; // The RPC interface decorates the known interfaces on init\n\n    this._rpcCore = new RpcCore(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], _classPrivateFieldLooseBase(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n  }\n\n  /**\n   * @description Return the current used registry\n   */\n  get registry() {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && _classPrivateFieldLooseBase(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @returns `true` if the API decorate multi-key queries\n   */\n\n\n  get supportMulti() {\n    return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;\n  }\n\n  _createDecorated(registry, fromEmpty, blockHash, decoratedApi) {\n    if (!decoratedApi) {\n      decoratedApi = {\n        consts: {},\n        errors: {},\n        events: {},\n        query: {},\n        rx: {\n          query: {}\n        }\n      };\n    }\n\n    if (!registry.decoratedMeta) {\n      registry.decoratedMeta = expandMetadata(registry.registry, registry.metadata);\n    } // adjust the versioned registry\n\n\n    augmentObject('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);\n    augmentObject('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);\n    augmentObject('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);\n    const storage = blockHash ? this._decorateStorageAt(registry.decoratedMeta, this._decorateMethod, blockHash) : this._decorateStorage(registry.decoratedMeta, this._decorateMethod);\n    const storageRx = blockHash ? this._decorateStorageAt(registry.decoratedMeta, this._rxDecorateMethod, blockHash) : this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod);\n    augmentObject('query', storage, decoratedApi.query, fromEmpty);\n    augmentObject('query', storageRx, decoratedApi.rx.query, fromEmpty);\n    return {\n      decoratedApi,\n      decoratedMeta: registry.decoratedMeta\n    };\n  }\n\n  _injectMetadata(registry, fromEmpty) {\n    // clear the decoration, we are redoing it here\n    if (fromEmpty || !registry.decoratedApi) {\n      registry.decoratedApi = {\n        consts: {},\n        errors: {},\n        events: {},\n        query: {},\n        rx: {\n          query: {}\n        }\n      };\n    }\n\n    const {\n      decoratedApi,\n      decoratedMeta\n    } = this._createDecorated(registry, fromEmpty, null, registry.decoratedApi);\n\n    this._consts = decoratedApi.consts;\n    this._errors = decoratedApi.errors;\n    this._events = decoratedApi.events;\n    this._query = decoratedApi.query;\n    this._rx.query = decoratedApi.rx.query;\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      augmentObject('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      augmentObject(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    }\n\n    augmentObject(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n  /**\n   * @deprecated\n   * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)\n   */\n\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    this._injectMetadata({\n      metadata,\n      registry: registry || _classPrivateFieldLooseBase(this, _registry)[_registry],\n      specName: _classPrivateFieldLooseBase(this, _registry)[_registry].createType('Text'),\n      specVersion: BN_ZERO\n    }, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  _filterRpc(methods, additional) {\n    // add any specific user-base RPCs\n    if (Object.keys(additional).length !== 0) {\n      this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces\n\n\n      this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);\n\n      this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(k => !allKeys.includes(k));\n    const deletion = allKnown.filter(([k]) => hasResults && !exposed.includes(k) && k !== 'rpc_methods');\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    deletion.forEach(([, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod, input = {}) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName;\n\n      if (!out[sectionName]) {\n        // out and section here are horrors to get right from a typing perspective :(\n        out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n          //  skip subscriptions where we have a non-subscribe interface\n          if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n            section[methodName] = decorateMethod(method, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].json = decorateMethod(method.json, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].raw = decorateMethod(method.raw, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].meta = method.meta;\n          }\n\n          return section;\n        }, {});\n      }\n\n      return out;\n    }, input);\n  } // only be called if supportMulti is true\n\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => (this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt)(calls.map(args => Array.isArray(args) ? args[0].creator.meta.type.asMap.hashers.length === 1 ? [args[0].creator, args.slice(1)] : [args[0].creator, ...args.slice(1)] : [args.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = createSubmittable(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // pass through the `.is`\n\n\n    decorated.is = other => method.is(other); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageAt({\n    query\n  }, decorateMethod, blockHash) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntryAt(method, decorateMethod, blockHash);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, ...args) => from(this.at(hash)).pipe(switchMap(api => {\n      assert(api.rx.query[creator.section] && api.rx.query[creator.section][creator.method], () => `query.${creator.section}.${creator.method} is not available in this version of the metadata`);\n      return api.rx.query[creator.section][creator.method](...args);\n    })));\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(...args))[1]);\n\n    decorated.keyPrefix = (...args) => u8aToHex(creator.keyPrefix(...args));\n\n    decorated.range = decorateMethod((range, ...args) => this._decorateStorageRange(decorated, args, range));\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));\n    decorated.sizeAt = decorateMethod((hash, ...args) => this._rpcCore.state.getStorageSize(getArgs(args), hash)); // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && creator.meta.type.isMap) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, null, args)));\n      decorated.entriesAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapEntries(creator, hash, args)));\n      decorated.entriesPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, null, args)));\n      decorated.keysAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapKeys(creator, hash, args)));\n      decorated.keysPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    }\n\n    if (this.supportMulti && creator.meta.type.isMap) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => creator.meta.type.asMap.hashers.length === 1 ? this._retrieveMulti(args.map(a => [creator, [a]])) : this._retrieveMulti(args.map(a => [creator, a])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  }\n\n  _decorateStorageEntryAt(creator, decorateMethod, blockHash) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = decorateMethod((...args) => this._rpcCore.state.getStorage(getArgs(args), blockHash));\n    decorated.creator = creator;\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args), blockHash));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(creator.meta.type.isPlain ? undefined : args))[1]);\n\n    decorated.keyPrefix = (...keys) => u8aToHex(creator.keyPrefix(...keys));\n\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args), blockHash)); // FIXME NMap support\n    // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && creator.meta.type.isMap) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, blockHash, args)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, blockHash, args)));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args)]).pipe(map(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage(extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage(extractStorageArgs(_classPrivateFieldLooseBase(this, _registry)[_registry], creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = unwrapStorageType(_classPrivateFieldLooseBase(this, _registry)[_registry], decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe(map(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes\n\n\n  _retrieveMulti(keys) {\n    if (!keys.length) {\n      return of([]);\n    }\n\n    const queryCall = this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;\n    return combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(keys => queryCall(keys))).pipe(map(arrayFlatten));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, args) {\n    assert(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');\n    const headKey = iterKey(...args).toHex();\n    const startSubject = new BehaviorSubject(headKey);\n    const queryCall = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);\n    return startSubject.pipe(switchMap(queryCall), map(keys => keys.map(key => key.setMeta(meta, section, method))), tap(keys => {\n      setTimeout(() => {\n        keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n      }, 0);\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map(arrayFlatten));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    assert(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');\n    const headKey = iterKey(...opts.args).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe(map(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, args) {\n    const query = at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset);\n    return this._retrieveMapKeys(entry, at, args).pipe(switchMap(keys => keys.length ? combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(query)).pipe(map(valsArr => arrayFlatten(valsArr).map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe(switchMap(keys => keys.length ? this._rpcCore.state.queryStorageAt(keys).pipe(map(valsArr => valsArr.map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;\n\n    const specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString();\n\n    const derives = _objectSpread(_objectSpread({}, this._options.derives), ((_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName !== null && specName !== void 0 ? specName : '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives) || {}); // Pull in derive from api-derive\n\n\n    const derive = decorateDerive(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], this._rx, derives);\n    return decorateSections(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return decorateSections(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}"]},"metadata":{},"sourceType":"module"}