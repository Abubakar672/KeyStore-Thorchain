{"ast":null,"code":"import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function skipLast(skipCount) {\n  return skipCount <= 0 ? identity : operate(function (source, subscriber) {\n    var ring = new Array(skipCount);\n    var seen = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var valueIndex = seen++;\n\n      if (valueIndex < skipCount) {\n        ring[valueIndex] = value;\n      } else {\n        var index = valueIndex % skipCount;\n        var oldValue = ring[index];\n        ring[index] = value;\n        subscriber.next(oldValue);\n      }\n    }));\n    return function () {\n      ring = null;\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/skipLast.ts"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,kBAAzB;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AA6CA,OAAM,SAAU,QAAV,CAAsB,SAAtB,EAAuC;AAC3C,SAAO,SAAS,IAAI,CAAb,GAEH,QAFG,GAGH,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAIzB,QAAI,IAAI,GAAQ,IAAI,KAAJ,CAAU,SAAV,CAAhB;AAGA,QAAI,IAAI,GAAG,CAAX;AACA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AAKvC,UAAM,UAAU,GAAG,IAAI,EAAvB;;AACA,UAAI,UAAU,GAAG,SAAjB,EAA4B;AAI1B,QAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,KAAnB;AACD,OALD,MAKO;AAIL,YAAM,KAAK,GAAG,UAAU,GAAG,SAA3B;AAGA,YAAM,QAAQ,GAAG,IAAI,CAAC,KAAD,CAArB;AACA,QAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,KAAd;AAKA,QAAA,UAAU,CAAC,IAAX,CAAgB,QAAhB;AACD;AACF,KA1BD,CADF;AA8BA,WAAO,YAAA;AAEL,MAAA,IAAI,GAAG,IAAP;AACD,KAHD;AAID,GA1CM,CAHX;AA8CD","sourceRoot":"","sourcesContent":["import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function skipLast(skipCount) {\n    return skipCount <= 0\n        ?\n            identity\n        : operate(function (source, subscriber) {\n            var ring = new Array(skipCount);\n            var seen = 0;\n            source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n                var valueIndex = seen++;\n                if (valueIndex < skipCount) {\n                    ring[valueIndex] = value;\n                }\n                else {\n                    var index = valueIndex % skipCount;\n                    var oldValue = ring[index];\n                    ring[index] = value;\n                    subscriber.next(oldValue);\n                }\n            }));\n            return function () {\n                ring = null;\n            };\n        });\n}\n//# sourceMappingURL=skipLast.js.map"]},"metadata":{},"sourceType":"module"}