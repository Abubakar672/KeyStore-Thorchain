{"ast":null,"code":"import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nexport function windowTime(windowTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n\n    var closeWindow = function (record) {\n      var window = record.window,\n          subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    var startWindow = function () {\n      if (windowRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var window_1 = new Subject();\n        var record_1 = {\n          window: window_1,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record_1);\n        subscriber.next(window_1.asObservable());\n        subs.add(scheduler.schedule(function () {\n          return closeWindow(record_1);\n        }, windowTimeSpan));\n      }\n    };\n\n    windowCreationInterval !== null && windowCreationInterval >= 0 ? subscriber.add(scheduler.schedule(function () {\n      startWindow();\n      !this.closed && subscriber.add(this.schedule(null, windowCreationInterval));\n    }, windowCreationInterval)) : restartOnClose = true;\n    startWindow();\n\n    var loop = function (cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n\n    var terminate = function (cb) {\n      loop(function (_a) {\n        var window = _a.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/windowTime.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nexport function windowTime(windowTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxWindowSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var windowRecords = [];\n        var restartOnClose = false;\n        var closeWindow = function (record) {\n            var window = record.window, subs = record.subs;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        var startWindow = function () {\n            if (windowRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var window_1 = new Subject();\n                var record_1 = {\n                    window: window_1,\n                    subs: subs,\n                    seen: 0,\n                };\n                windowRecords.push(record_1);\n                subscriber.next(window_1.asObservable());\n                subs.add(scheduler.schedule(function () { return closeWindow(record_1); }, windowTimeSpan));\n            }\n        };\n        windowCreationInterval !== null && windowCreationInterval >= 0\n            ?\n                subscriber.add(scheduler.schedule(function () {\n                    startWindow();\n                    !this.closed && subscriber.add(this.schedule(null, windowCreationInterval));\n                }, windowCreationInterval))\n            : (restartOnClose = true);\n        startWindow();\n        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n        var terminate = function (cb) {\n            loop(function (_a) {\n                var window = _a.window;\n                return cb(window);\n            });\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            loop(function (record) {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n        return function () {\n            windowRecords = null;\n        };\n    });\n}\n//# sourceMappingURL=windowTime.js.map"]},"metadata":{},"sourceType":"module"}