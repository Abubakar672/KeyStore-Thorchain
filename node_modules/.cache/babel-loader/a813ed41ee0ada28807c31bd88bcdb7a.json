{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function schnorrkelKeypairFromU8a(full) {\n  const fullU8a = u8aToU8a(full);\n  assert(fullU8a.length === TOT_LEN, () => `Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n  return {\n    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n    secretKey: fullU8a.slice(0, SEC_LEN)\n  };\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/schnorrkel/keypair/fromU8a.js"],"names":["assert","u8aToU8a","SEC_LEN","PUB_LEN","TOT_LEN","schnorrkelKeypairFromU8a","full","fullU8a","length","publicKey","slice","secretKey"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAGF,OAAO,GAAGC,OAA1B;AACA,OAAO,SAASE,wBAAT,CAAkCC,IAAlC,EAAwC;AAC7C,QAAMC,OAAO,GAAGN,QAAQ,CAACK,IAAD,CAAxB;AACAN,EAAAA,MAAM,CAACO,OAAO,CAACC,MAAR,KAAmBJ,OAApB,EAA6B,MAAO,yBAAwBA,OAAQ,iBAAgBG,OAAO,CAACC,MAAO,EAAnG,CAAN;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEF,OAAO,CAACG,KAAR,CAAcR,OAAd,EAAuBE,OAAvB,CADN;AAELO,IAAAA,SAAS,EAAEJ,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiBR,OAAjB;AAFN,GAAP;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function schnorrkelKeypairFromU8a(full) {\n  const fullU8a = u8aToU8a(full);\n  assert(fullU8a.length === TOT_LEN, () => `Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n  return {\n    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n    secretKey: fullU8a.slice(0, SEC_LEN)\n  };\n}"]},"metadata":{},"sourceType":"module"}