{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { AllHashers } from \"./hashers.js\";\nexport const v11 = {\n  // v11\n  ErrorMetadataV11: 'ErrorMetadataV10',\n  EventMetadataV11: 'EventMetadataV10',\n  ExtrinsicMetadataV11: {\n    version: 'u8',\n    signedExtensions: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n  FunctionMetadataV11: 'FunctionMetadataV10',\n  MetadataV11: {\n    modules: 'Vec<ModuleMetadataV11>',\n    extrinsic: 'ExtrinsicMetadataV11'\n  },\n  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n  ModuleMetadataV11: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV11>',\n    calls: 'Option<Vec<FunctionMetadataV11>>',\n    events: 'Option<Vec<EventMetadataV11>>',\n    constants: 'Vec<ModuleConstantMetadataV11>',\n    errors: 'Vec<ErrorMetadataV11>'\n  },\n  StorageEntryModifierV11: 'StorageEntryModifierV10',\n  StorageEntryMetadataV11: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV11',\n    type: 'StorageEntryTypeV11',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV11: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV11',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV11',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV11'\n      }\n    }\n  },\n  StorageMetadataV11: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV11>'\n  },\n  StorageHasherV11: {\n    _enum: AllHashers\n  }\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/metadata/v11.js"],"names":["AllHashers","v11","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","version","signedExtensions","FunctionArgumentMetadataV11","FunctionMetadataV11","MetadataV11","modules","extrinsic","ModuleConstantMetadataV11","ModuleMetadataV11","name","storage","calls","events","constants","errors","StorageEntryModifierV11","StorageEntryMetadataV11","modifier","type","fallback","docs","StorageEntryTypeV11","_enum","Plain","Map","hasher","key","value","linked","DoubleMap","key1","key2","key2Hasher","StorageMetadataV11","prefix","items","StorageHasherV11"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAO,MAAMC,GAAG,GAAG;AACjB;AACAC,EAAAA,gBAAgB,EAAE,kBAFD;AAGjBC,EAAAA,gBAAgB,EAAE,kBAHD;AAIjBC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,OAAO,EAAE,IADW;AAEpBC,IAAAA,gBAAgB,EAAE;AAFE,GAJL;AAQjBC,EAAAA,2BAA2B,EAAE,6BARZ;AASjBC,EAAAA,mBAAmB,EAAE,qBATJ;AAUjBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,wBADE;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAVI;AAcjBC,EAAAA,yBAAyB,EAAE,2BAdV;AAejBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,IAAI,EAAE,MADW;AAEjBC,IAAAA,OAAO,EAAE,4BAFQ;AAGjBC,IAAAA,KAAK,EAAE,kCAHU;AAIjBC,IAAAA,MAAM,EAAE,+BAJS;AAKjBC,IAAAA,SAAS,EAAE,gCALM;AAMjBC,IAAAA,MAAM,EAAE;AANS,GAfF;AAuBjBC,EAAAA,uBAAuB,EAAE,yBAvBR;AAwBjBC,EAAAA,uBAAuB,EAAE;AACvBP,IAAAA,IAAI,EAAE,MADiB;AAEvBQ,IAAAA,QAAQ,EAAE,yBAFa;AAGvBC,IAAAA,IAAI,EAAE,qBAHiB;AAIvBC,IAAAA,QAAQ,EAAE,OAJa;AAKvBC,IAAAA,IAAI,EAAE;AALiB,GAxBR;AA+BjBC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,GAAG,EAAE;AACHC,QAAAA,MAAM,EAAE,kBADL;AAEHC,QAAAA,GAAG,EAAE,MAFF;AAGHC,QAAAA,KAAK,EAAE,MAHJ;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAFA;AAQLC,MAAAA,SAAS,EAAE;AACTJ,QAAAA,MAAM,EAAE,kBADC;AAETK,QAAAA,IAAI,EAAE,MAFG;AAGTC,QAAAA,IAAI,EAAE,MAHG;AAITJ,QAAAA,KAAK,EAAE,MAJE;AAKTK,QAAAA,UAAU,EAAE;AALH;AARN;AADY,GA/BJ;AAiDjBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,MAAM,EAAE,MADU;AAElBC,IAAAA,KAAK,EAAE;AAFW,GAjDH;AAqDjBC,EAAAA,gBAAgB,EAAE;AAChBd,IAAAA,KAAK,EAAE3B;AADS;AArDD,CAAZ","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { AllHashers } from \"./hashers.js\";\nexport const v11 = {\n  // v11\n  ErrorMetadataV11: 'ErrorMetadataV10',\n  EventMetadataV11: 'EventMetadataV10',\n  ExtrinsicMetadataV11: {\n    version: 'u8',\n    signedExtensions: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n  FunctionMetadataV11: 'FunctionMetadataV10',\n  MetadataV11: {\n    modules: 'Vec<ModuleMetadataV11>',\n    extrinsic: 'ExtrinsicMetadataV11'\n  },\n  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n  ModuleMetadataV11: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV11>',\n    calls: 'Option<Vec<FunctionMetadataV11>>',\n    events: 'Option<Vec<EventMetadataV11>>',\n    constants: 'Vec<ModuleConstantMetadataV11>',\n    errors: 'Vec<ErrorMetadataV11>'\n  },\n  StorageEntryModifierV11: 'StorageEntryModifierV10',\n  StorageEntryMetadataV11: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV11',\n    type: 'StorageEntryTypeV11',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV11: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV11',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV11',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV11'\n      }\n    }\n  },\n  StorageMetadataV11: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV11>'\n  },\n  StorageHasherV11: {\n    _enum: AllHashers\n  }\n};"]},"metadata":{},"sourceType":"module"}