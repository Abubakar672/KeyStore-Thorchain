{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { stringCamelCase } from '@polkadot/util';\nexport function variantToMeta(lookup, variant) {\n  return _objectSpread(_objectSpread({}, variant), {}, {\n    args: variant.fields.map(({\n      type\n    }) => lookup.getTypeDef(type).type)\n  });\n}\n/** @internal */\n\nexport function decorateErrors(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.reduce((result, {\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    if (!errors.isSome) {\n      return result;\n    }\n\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = lookup.getSiType(errors.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      // we don't camelCase the error name\n      newModule[variant.name.toString()] = {\n        is: ({\n          error,\n          index\n        }) => index.eq(sectionIndex) && error.eq(variant.index),\n        meta: registry.createType('ErrorMetadataLatest', variantToMeta(lookup, variant))\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/decorate/errors/index.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","stringCamelCase","variantToMeta","lookup","variant","args","fields","map","type","getTypeDef","decorateErrors","registry","pallets","metaVersion","reduce","result","errors","index","name","_sectionIndex","isSome","sectionIndex","toNumber","getSiType","unwrap","def","asVariant","variants","newModule","toString","is","error","eq","meta","createType"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nexport function variantToMeta(lookup, variant) {\n  return _objectSpread(_objectSpread({}, variant), {}, {\n    args: variant.fields.map(({\n      type\n    }) => lookup.getTypeDef(type).type)\n  });\n}\n/** @internal */\n\nexport function decorateErrors(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.reduce((result, {\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    if (!errors.isSome) {\n      return result;\n    }\n\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = lookup.getSiType(errors.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      // we don't camelCase the error name\n      newModule[variant.name.toString()] = {\n        is: ({\n          error,\n          index\n        }) => index.eq(sectionIndex) && error.eq(variant.index),\n        meta: registry.createType('ErrorMetadataLatest', variantToMeta(lookup, variant))\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}