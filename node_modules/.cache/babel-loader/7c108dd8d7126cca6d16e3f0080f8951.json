{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeAddress } from \"./decode.js\";\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */\n\nexport function addressToEvm(address, ignoreChecksum) {\n  const decoded = decodeAddress(address, ignoreChecksum);\n  return decoded.subarray(0, 20);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/address/addressToEvm.js"],"names":["decodeAddress","addressToEvm","address","ignoreChecksum","decoded","subarray"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,QAA8B,aAA9B;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,cAA/B,EAA+C;AACpD,QAAMC,OAAO,GAAGJ,aAAa,CAACE,OAAD,EAAUC,cAAV,CAA7B;AACA,SAAOC,OAAO,CAACC,QAAR,CAAiB,CAAjB,EAAoB,EAApB,CAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeAddress } from \"./decode.js\";\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */\n\nexport function addressToEvm(address, ignoreChecksum) {\n  const decoded = decodeAddress(address, ignoreChecksum);\n  return decoded.subarray(0, 20);\n}"]},"metadata":{},"sourceType":"module"}