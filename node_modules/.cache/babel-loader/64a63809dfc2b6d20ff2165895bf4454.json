{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringify } from \"../stringify.js\";\n/**\n * @name isJsonObject\n * @summary Tests for a valid JSON `object`.\n * @description\n * Checks to see if the input value is a valid JSON object.\n * It returns false if the input is JSON parsable, but not an Javascript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isJsonObject } from '@polkadot/util';\n *\n * isJsonObject({}); // => true\n * isJsonObject({\n *  \"Test\": \"1234\",\n *  \"NestedTest\": {\n *   \"Test\": \"5678\"\n *  }\n * }); // => true\n * isJsonObject(1234); // JSON parsable, but not an object =>  false\n * isJsonObject(null); // JSON parsable, but not an object => false\n * isJsonObject('not an object'); // => false\n * ```\n */\n\nexport function isJsonObject(value) {\n  const str = typeof value !== 'string' ? stringify(value) : value;\n\n  try {\n    const obj = JSON.parse(str);\n    return typeof obj === 'object' && obj !== null;\n  } catch (e) {\n    return false;\n  }\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/is/jsonObject.js"],"names":["stringify","isJsonObject","value","str","obj","JSON","parse","e"],"mappings":"AAAA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,QAAMC,GAAG,GAAG,OAAOD,KAAP,KAAiB,QAAjB,GAA4BF,SAAS,CAACE,KAAD,CAArC,GAA+CA,KAA3D;;AAEA,MAAI;AACF,UAAME,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAZ;AACA,WAAO,OAAOC,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringify } from \"../stringify.js\";\n\n/**\n * @name isJsonObject\n * @summary Tests for a valid JSON `object`.\n * @description\n * Checks to see if the input value is a valid JSON object.\n * It returns false if the input is JSON parsable, but not an Javascript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isJsonObject } from '@polkadot/util';\n *\n * isJsonObject({}); // => true\n * isJsonObject({\n *  \"Test\": \"1234\",\n *  \"NestedTest\": {\n *   \"Test\": \"5678\"\n *  }\n * }); // => true\n * isJsonObject(1234); // JSON parsable, but not an object =>  false\n * isJsonObject(null); // JSON parsable, but not an object => false\n * isJsonObject('not an object'); // => false\n * ```\n */\nexport function isJsonObject(value) {\n  const str = typeof value !== 'string' ? stringify(value) : value;\n\n  try {\n    const obj = JSON.parse(str);\n    return typeof obj === 'object' && obj !== null;\n  } catch (e) {\n    return false;\n  }\n}"]},"metadata":{},"sourceType":"module"}