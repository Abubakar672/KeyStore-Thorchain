{"ast":null,"code":"/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n\n/* jshint newcap: false */\n(function (root, f) {\n  'use strict';\n\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));else root.ed2curve = f(root.nacl);\n})(this, function (nacl) {\n  'use strict';\n\n  if (!nacl) throw new Error('tweetnacl not loaded'); // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function (init) {\n    var i,\n        r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function car25519(o) {\n    var c;\n    var i;\n\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i + 1) * (i < 15 ? 1 : 0)] += c - 1 + 37 * (c - 1) * (i === 15 ? 1 : 0);\n      o[i] -= c * 65536;\n    }\n  }\n\n  function sel25519(p, q, b) {\n    var t,\n        c = ~(b - 1);\n\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function unpack25519(o, n) {\n    var i;\n\n    for (i = 0; i < 16; i++) o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n\n    o[15] &= 0x7fff;\n  } // addition\n\n\n  function A(o, a, b) {\n    var i;\n\n    for (i = 0; i < 16; i++) o[i] = a[i] + b[i] | 0;\n  } // subtraction\n\n\n  function Z(o, a, b) {\n    var i;\n\n    for (i = 0; i < 16; i++) o[i] = a[i] - b[i] | 0;\n  } // multiplication\n\n\n  function M(o, a, b) {\n    var i,\n        j,\n        t = new Float64Array(31);\n\n    for (i = 0; i < 31; i++) t[i] = 0;\n\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i + j] += a[i] * b[j];\n      }\n    }\n\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i + 16];\n    }\n\n    for (i = 0; i < 16; i++) o[i] = t[i];\n\n    car25519(o);\n    car25519(o);\n  } // squaring\n\n\n  function S(o, a) {\n    M(o, a, a);\n  } // inversion\n\n\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n\n    for (a = 0; a < 16; a++) c[a] = i[a];\n\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if (a !== 2 && a !== 4) M(c, c, i);\n    }\n\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(),\n        t = gf();\n\n    for (i = 0; i < 16; i++) t[i] = n[i];\n\n    car25519(t);\n    car25519(t);\n    car25519(t);\n\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n        m[i - 1] &= 0xffff;\n      }\n\n      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n      b = m[15] >> 16 & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1 - b);\n    }\n\n    for (i = 0; i < 16; i++) {\n      o[2 * i] = t[i] & 0xff;\n      o[2 * i + 1] = t[i] >> 8;\n    }\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i,\n        d = 0;\n\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n\n    return (1 & d - 1 >>> 8) - 1;\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32),\n        d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n\n    for (a = 0; a < 16; a++) c[a] = i[a];\n\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function set25519(r, a) {\n    var i;\n\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(),\n        chk = gf(),\n        num = gf(),\n        den = gf(),\n        den2 = gf(),\n        den4 = gf(),\n        den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n    if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n    M(r[3], r[0], r[1]);\n    return 0;\n  } // ----\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n\n\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n        q = [gf(), gf(), gf(), gf()],\n        a = gf(),\n        b = gf();\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n    pack25519(z, a);\n    return z;\n  } // Converts Ed25519 secret key to Curve25519 secret key.\n\n\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64),\n        o = new Uint8Array(32),\n        i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    for (i = 0; i < 32; i++) o[i] = d[i];\n\n    for (i = 0; i < 64; i++) d[i] = 0;\n\n    return o;\n  }\n\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair\n  };\n});","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/ed2curve/ed2curve.js"],"names":["root","f","module","exports","require","ed2curve","nacl","Error","gf","init","i","r","Float64Array","length","gf0","gf1","D","I","car25519","o","c","Math","floor","sel25519","p","q","b","t","unpack25519","n","A","a","Z","M","j","S","inv25519","pack25519","m","par25519","d","Uint8Array","vn","x","xi","y","yi","crypto_verify_32","neq25519","pow2523","set25519","unpackneg","chk","num","den","den2","den4","den6","convertPublicKey","pk","z","convertSecretKey","sk","lowlevel","crypto_hash","convertKeyPair","edKeyPair","publicKey","secretKey"],"mappings":"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","sourcesContent":["/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n/* jshint newcap: false */\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));\n  else root.ed2curve = f(root.nacl);\n}(this, function(nacl) {\n  'use strict';\n  if (!nacl) throw new Error('tweetnacl not loaded');\n\n  // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function(init) {\n    var i, r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n    }\n  }\n\n  function sel25519(p, q, b) {\n    var t, c = ~(b-1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n    o[15] &= 0x7fff;\n  }\n\n  // addition\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n  }\n\n  // subtraction\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n  }\n\n  // multiplication\n  function M(o, a, b) {\n    var i, j, t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i+j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i+16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n\n  // squaring\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  // inversion\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if(a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(), t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n        m[i-1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n      b = (m[15]>>16) & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1-b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2*i] = t[i] & 0xff;\n      o[2*i+1] = t[i] >> 8;\n    }\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i, d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32), d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n\n    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);\n\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  // ----\n\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n      q = [gf(), gf(), gf(), gf()],\n      a = gf(), b = gf();\n\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n\n    pack25519(z, a);\n    return z;\n  }\n\n  // Converts Ed25519 secret key to Curve25519 secret key.\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64), o = new Uint8Array(32), i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    for (i = 0; i < 32; i++) o[i] = d[i];\n    for (i = 0; i < 64; i++) d[i] = 0;\n    return o;\n  }\n\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair,\n  };\n\n}));\n"]},"metadata":{},"sourceType":"script"}