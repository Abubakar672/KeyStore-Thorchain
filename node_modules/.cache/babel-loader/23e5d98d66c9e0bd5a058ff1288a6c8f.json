{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function distinct(keySelector, flushes) {\n  return operate(function (source, subscriber) {\n    var distinctKeys = new Set();\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var key = keySelector ? keySelector(value) : value;\n\n      if (!distinctKeys.has(key)) {\n        distinctKeys.add(key);\n        subscriber.next(value);\n      }\n    }));\n    flushes === null || flushes === void 0 ? void 0 : flushes.subscribe(new OperatorSubscriber(subscriber, function () {\n      return distinctKeys.clear();\n    }, noop));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/distinct.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,IAAT,QAAqB,cAArB;AAqEA,OAAM,SAAU,QAAV,CAAyB,WAAzB,EAAwD,OAAxD,EAAiF;AACrF,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAM,YAAY,GAAG,IAAI,GAAJ,EAArB;AACA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AACvC,UAAM,GAAG,GAAG,WAAW,GAAG,WAAW,CAAC,KAAD,CAAd,GAAwB,KAA/C;;AACA,UAAI,CAAC,YAAY,CAAC,GAAb,CAAiB,GAAjB,CAAL,EAA4B;AAC1B,QAAA,YAAY,CAAC,GAAb,CAAiB,GAAjB;AACA,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACD;AACF,KAND,CADF;AAUA,IAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,SAAT,CAAmB,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,YAAA;AAAM,aAAA,YAAY,CAAZ,KAAA,EAAA;AAAoB,KAA7D,EAA+D,IAA/D,CAAnB,CAAA;AACD,GAba,CAAd;AAcD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function distinct(keySelector, flushes) {\n    return operate(function (source, subscriber) {\n        var distinctKeys = new Set();\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var key = keySelector ? keySelector(value) : value;\n            if (!distinctKeys.has(key)) {\n                distinctKeys.add(key);\n                subscriber.next(value);\n            }\n        }));\n        flushes === null || flushes === void 0 ? void 0 : flushes.subscribe(new OperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop));\n    });\n}\n//# sourceMappingURL=distinct.js.map"]},"metadata":{},"sourceType":"module"}