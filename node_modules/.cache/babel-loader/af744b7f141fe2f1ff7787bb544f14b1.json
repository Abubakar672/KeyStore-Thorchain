{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { BN_ONE, BN_ZERO } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nexport function erasHistoric(instanceId, api) {\n  return memo(instanceId, withActive => api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe(map(([activeEraOpt, historyDepth]) => {\n    const result = [];\n    const max = historyDepth.toNumber();\n    const activeEra = activeEraOpt.unwrapOrDefault().index;\n    let lastEra = activeEra;\n\n    while (lastEra.gte(BN_ZERO) && result.length < max) {\n      if (lastEra !== activeEra || withActive === true) {\n        result.push(api.registry.createType('EraIndex', lastEra));\n      }\n\n      lastEra = lastEra.sub(BN_ONE);\n    } // go from oldest to newest\n\n\n    return result.reverse();\n  })));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/staking/erasHistoric.js"],"names":["map","BN_ONE","BN_ZERO","memo","erasHistoric","instanceId","api","withActive","queryMulti","query","staking","activeEra","historyDepth","pipe","activeEraOpt","result","max","toNumber","unwrapOrDefault","index","lastEra","gte","length","push","registry","createType","sub","reverse"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,QAAoB,MAApB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,GAAlC,EAAuC;AAC5C,SAAOH,IAAI,CAACE,UAAD,EAAaE,UAAU,IAAID,GAAG,CAACE,UAAJ,CAAe,CAACF,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBC,SAAnB,EAA8BL,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBE,YAAhD,CAAf,EAA8EC,IAA9E,CAAmFb,GAAG,CAAC,CAAC,CAACc,YAAD,EAAeF,YAAf,CAAD,KAAkC;AAC7J,UAAMG,MAAM,GAAG,EAAf;AACA,UAAMC,GAAG,GAAGJ,YAAY,CAACK,QAAb,EAAZ;AACA,UAAMN,SAAS,GAAGG,YAAY,CAACI,eAAb,GAA+BC,KAAjD;AACA,QAAIC,OAAO,GAAGT,SAAd;;AAEA,WAAOS,OAAO,CAACC,GAAR,CAAYnB,OAAZ,KAAwBa,MAAM,CAACO,MAAP,GAAgBN,GAA/C,EAAoD;AAClD,UAAII,OAAO,KAAKT,SAAZ,IAAyBJ,UAAU,KAAK,IAA5C,EAAkD;AAChDQ,QAAAA,MAAM,CAACQ,IAAP,CAAYjB,GAAG,CAACkB,QAAJ,CAAaC,UAAb,CAAwB,UAAxB,EAAoCL,OAApC,CAAZ;AACD;;AAEDA,MAAAA,OAAO,GAAGA,OAAO,CAACM,GAAR,CAAYzB,MAAZ,CAAV;AACD,KAZ4J,CAY3J;;;AAGF,WAAOc,MAAM,CAACY,OAAP,EAAP;AACD,GAhB2H,CAAtF,CAA3B,CAAX;AAiBD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { BN_ONE, BN_ZERO } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nexport function erasHistoric(instanceId, api) {\n  return memo(instanceId, withActive => api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe(map(([activeEraOpt, historyDepth]) => {\n    const result = [];\n    const max = historyDepth.toNumber();\n    const activeEra = activeEraOpt.unwrapOrDefault().index;\n    let lastEra = activeEra;\n\n    while (lastEra.gte(BN_ZERO) && result.length < max) {\n      if (lastEra !== activeEra || withActive === true) {\n        result.push(api.registry.createType('EraIndex', lastEra));\n      }\n\n      lastEra = lastEra.sub(BN_ONE);\n    } // go from oldest to newest\n\n\n    return result.reverse();\n  })));\n}"]},"metadata":{},"sourceType":"module"}