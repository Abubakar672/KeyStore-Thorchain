{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keyHdkdEcdsa } from \"./hdkdEcdsa.js\";\nimport { keyHdkdEd25519 } from \"./hdkdEd25519.js\";\nimport { keyHdkdSr25519 } from \"./hdkdSr25519.js\";\nconst generators = {\n  ecdsa: keyHdkdEcdsa,\n  ed25519: keyHdkdEd25519,\n  // FIXME This is Substrate-compatible, not Ethereum-compatible\n  ethereum: keyHdkdEcdsa,\n  sr25519: keyHdkdSr25519\n};\nexport function keyFromPath(pair, path, type) {\n  const keyHdkd = generators[type];\n  return path.reduce((pair, junction) => {\n    return keyHdkd(pair, junction);\n  }, pair);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/key/fromPath.js"],"names":["keyHdkdEcdsa","keyHdkdEd25519","keyHdkdSr25519","generators","ecdsa","ed25519","ethereum","sr25519","keyFromPath","pair","path","type","keyHdkd","reduce","junction"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAEJ,YADU;AAEjBK,EAAAA,OAAO,EAAEJ,cAFQ;AAGjB;AACAK,EAAAA,QAAQ,EAAEN,YAJO;AAKjBO,EAAAA,OAAO,EAAEL;AALQ,CAAnB;AAOA,OAAO,SAASM,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AAC5C,QAAMC,OAAO,GAAGT,UAAU,CAACQ,IAAD,CAA1B;AACA,SAAOD,IAAI,CAACG,MAAL,CAAY,CAACJ,IAAD,EAAOK,QAAP,KAAoB;AACrC,WAAOF,OAAO,CAACH,IAAD,EAAOK,QAAP,CAAd;AACD,GAFM,EAEJL,IAFI,CAAP;AAGD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keyHdkdEcdsa } from \"./hdkdEcdsa.js\";\nimport { keyHdkdEd25519 } from \"./hdkdEd25519.js\";\nimport { keyHdkdSr25519 } from \"./hdkdSr25519.js\";\nconst generators = {\n  ecdsa: keyHdkdEcdsa,\n  ed25519: keyHdkdEd25519,\n  // FIXME This is Substrate-compatible, not Ethereum-compatible\n  ethereum: keyHdkdEcdsa,\n  sr25519: keyHdkdSr25519\n};\nexport function keyFromPath(pair, path, type) {\n  const keyHdkd = generators[type];\n  return path.reduce((pair, junction) => {\n    return keyHdkd(pair, junction);\n  }, pair);\n}"]},"metadata":{},"sourceType":"module"}