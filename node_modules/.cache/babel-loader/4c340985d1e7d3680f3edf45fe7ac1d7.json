{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nconst DEFAULT_FLAGS = {\n  withController: true,\n  withPrefs: true\n};\nexport function waitingInfo(instanceId, api) {\n  return memo(instanceId, (flags = DEFAULT_FLAGS) => combineLatest([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe(switchMap(([{\n    nextElected\n  }, stashes]) => {\n    const elected = nextElected.map(a => a.toString());\n    const waiting = stashes.filter(v => !elected.includes(v.toString()));\n    return api.derive.staking.queryMulti(waiting, flags).pipe(map(info => ({\n      info,\n      waiting\n    })));\n  })));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/staking/waitingInfo.js"],"names":["combineLatest","map","switchMap","memo","DEFAULT_FLAGS","withController","withPrefs","waitingInfo","instanceId","api","flags","derive","staking","validators","stashes","pipe","nextElected","elected","a","toString","waiting","filter","v","includes","queryMulti","info"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,SAA7B,QAA8C,MAA9C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,cAAc,EAAE,IADI;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAIA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C,SAAON,IAAI,CAACK,UAAD,EAAa,CAACE,KAAK,GAAGN,aAAT,KAA2BJ,aAAa,CAAC,CAACS,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBC,UAAnB,EAAD,EAAkCJ,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBE,OAAnB,EAAlC,CAAD,CAAb,CAA+EC,IAA/E,CAAoFb,SAAS,CAAC,CAAC,CAAC;AACjJc,IAAAA;AADiJ,GAAD,EAE/IF,OAF+I,CAAD,KAEjI;AACd,UAAMG,OAAO,GAAGD,WAAW,CAACf,GAAZ,CAAgBiB,CAAC,IAAIA,CAAC,CAACC,QAAF,EAArB,CAAhB;AACA,UAAMC,OAAO,GAAGN,OAAO,CAACO,MAAR,CAAeC,CAAC,IAAI,CAACL,OAAO,CAACM,QAAR,CAAiBD,CAAC,CAACH,QAAF,EAAjB,CAArB,CAAhB;AACA,WAAOV,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBY,UAAnB,CAA8BJ,OAA9B,EAAuCV,KAAvC,EAA8CK,IAA9C,CAAmDd,GAAG,CAACwB,IAAI,KAAK;AACrEA,MAAAA,IADqE;AAErEL,MAAAA;AAFqE,KAAL,CAAL,CAAtD,CAAP;AAID,GAT+I,CAA7F,CAAxC,CAAX;AAUD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, switchMap } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nconst DEFAULT_FLAGS = {\n  withController: true,\n  withPrefs: true\n};\nexport function waitingInfo(instanceId, api) {\n  return memo(instanceId, (flags = DEFAULT_FLAGS) => combineLatest([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe(switchMap(([{\n    nextElected\n  }, stashes]) => {\n    const elected = nextElected.map(a => a.toString());\n    const waiting = stashes.filter(v => !elected.includes(v.toString()));\n    return api.derive.staking.queryMulti(waiting, flags).pipe(map(info => ({\n      info,\n      waiting\n    })));\n  })));\n}"]},"metadata":{},"sourceType":"module"}