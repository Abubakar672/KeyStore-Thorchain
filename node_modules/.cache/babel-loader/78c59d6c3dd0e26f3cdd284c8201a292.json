{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58Decode } from \"../base58/decode.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\n\nexport function checkAddress(address, prefix) {\n  let decoded;\n\n  try {\n    decoded = base58Decode(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n\n  const [isValid,,, ss58Decoded] = checkAddressChecksum(decoded);\n\n  if (ss58Decoded !== prefix) {\n    return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];\n  } else if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/address/check.js"],"names":["base58Decode","checkAddressChecksum","defaults","checkAddress","address","prefix","decoded","error","message","isValid","ss58Decoded","allowedEncodedLengths","includes","length"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,oBAAT,QAAqC,eAArC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuC;AAC5C,MAAIC,OAAJ;;AAEA,MAAI;AACFA,IAAAA,OAAO,GAAGN,YAAY,CAACI,OAAD,CAAtB;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,WAAO,CAAC,KAAD,EAAQA,KAAK,CAACC,OAAd,CAAP;AACD;;AAED,QAAM,CAACC,OAAD,IAAYC,WAAZ,IAA2BT,oBAAoB,CAACK,OAAD,CAArD;;AAEA,MAAII,WAAW,KAAKL,MAApB,EAA4B;AAC1B,WAAO,CAAC,KAAD,EAAS,6BAA4BA,MAAO,WAAUK,WAAY,EAAlE,CAAP;AACD,GAFD,MAEO,IAAI,CAACR,QAAQ,CAACS,qBAAT,CAA+BC,QAA/B,CAAwCN,OAAO,CAACO,MAAhD,CAAL,EAA8D;AACnE,WAAO,CAAC,KAAD,EAAQ,gCAAR,CAAP;AACD;;AAED,SAAO,CAACJ,OAAD,EAAUA,OAAO,GAAG,IAAH,GAAU,kCAA3B,CAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58Decode } from \"../base58/decode.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\n\nexport function checkAddress(address, prefix) {\n  let decoded;\n\n  try {\n    decoded = base58Decode(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n\n  const [isValid,,, ss58Decoded] = checkAddressChecksum(decoded);\n\n  if (ss58Decoded !== prefix) {\n    return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];\n  } else if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}"]},"metadata":{},"sourceType":"module"}