{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  if (comparator === void 0) {\n    comparator = function (a, b) {\n      return a === b;\n    };\n  }\n\n  return operate(function (source, subscriber) {\n    var aState = createState();\n    var bState = createState();\n\n    var emit = function (isEqual) {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    var createSubscriber = function (selfState, otherState) {\n      var sequenceEqualSubscriber = new OperatorSubscriber(subscriber, function (a) {\n        var buffer = otherState.buffer,\n            complete = otherState.complete;\n\n        if (buffer.length === 0) {\n          complete ? emit(false) : selfState.buffer.push(a);\n        } else {\n          !comparator(a, buffer.shift()) && emit(false);\n        }\n      }, function () {\n        selfState.complete = true;\n        var complete = otherState.complete,\n            buffer = otherState.buffer;\n        complete && emit(buffer.length === 0);\n        sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n      });\n      return sequenceEqualSubscriber;\n    };\n\n    source.subscribe(createSubscriber(aState, bState));\n    compareTo.subscribe(createSubscriber(bState, aState));\n  });\n}\n\nfunction createState() {\n  return {\n    buffer: [],\n    complete: false\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/operators/sequenceEqual.ts"],"names":[],"mappings":"AAGA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AA0DA,OAAM,SAAU,aAAV,CACJ,SADI,EAEJ,UAFI,EAEmD;AAAvD,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,UAAuC,CAAvC,EAA0C,CAA1C,EAA2C;AAAK,aAAA,CAAC,KAAD,CAAA;AAAO,KAAvD;AAAuD;;AAEvD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAEhC,QAAM,MAAM,GAAG,WAAW,EAA1B;AAEA,QAAM,MAAM,GAAG,WAAW,EAA1B;;AAGA,QAAM,IAAI,GAAG,UAAC,OAAD,EAAiB;AAC5B,MAAA,UAAU,CAAC,IAAX,CAAgB,OAAhB;AACA,MAAA,UAAU,CAAC,QAAX;AACD,KAHD;;AAUA,QAAM,gBAAgB,GAAG,UAAC,SAAD,EAA8B,UAA9B,EAA0D;AACjF,UAAM,uBAAuB,GAAG,IAAI,kBAAJ,CAC9B,UAD8B,EAE9B,UAAC,CAAD,EAAK;AACK,YAAA,MAAM,GAAe,UAAU,CAAzB,MAAN;AAAA,YAAQ,QAAQ,GAAK,UAAU,CAAf,QAAhB;;AACR,YAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AAOvB,UAAA,QAAQ,GAAG,IAAI,CAAC,KAAD,CAAP,GAAiB,SAAS,CAAC,MAAV,CAAiB,IAAjB,CAAsB,CAAtB,CAAzB;AACD,SARD,MAQO;AAIL,WAAC,UAAU,CAAC,CAAD,EAAI,MAAM,CAAC,KAAP,EAAJ,CAAX,IAAmC,IAAI,CAAC,KAAD,CAAvC;AACD;AACF,OAlB6B,EAmB9B,YAAA;AAEE,QAAA,SAAS,CAAC,QAAV,GAAqB,IAArB;AACQ,YAAA,QAAQ,GAAa,UAAU,CAAvB,QAAR;AAAA,YAAU,MAAM,GAAK,UAAU,CAAf,MAAhB;AAKR,QAAA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAP,KAAkB,CAAnB,CAAhB;AAEA,QAAA,uBAAuB,KAAA,IAAvB,IAAA,uBAAuB,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAA,uBAAuB,CAAE,WAAzB,EAAA;AACD,OA9B6B,CAAhC;AAiCA,aAAO,uBAAP;AACD,KAnCD;;AAsCA,IAAA,MAAM,CAAC,SAAP,CAAiB,gBAAgB,CAAC,MAAD,EAAS,MAAT,CAAjC;AACA,IAAA,SAAS,CAAC,SAAV,CAAoB,gBAAgB,CAAC,MAAD,EAAS,MAAT,CAApC;AACD,GAzDa,CAAd;AA0DD;;AAgBD,SAAS,WAAT,GAAoB;AAClB,SAAO;AACL,IAAA,MAAM,EAAE,EADH;AAEL,IAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }\n    return operate(function (source, subscriber) {\n        var aState = createState();\n        var bState = createState();\n        var emit = function (isEqual) {\n            subscriber.next(isEqual);\n            subscriber.complete();\n        };\n        var createSubscriber = function (selfState, otherState) {\n            var sequenceEqualSubscriber = new OperatorSubscriber(subscriber, function (a) {\n                var buffer = otherState.buffer, complete = otherState.complete;\n                if (buffer.length === 0) {\n                    complete ? emit(false) : selfState.buffer.push(a);\n                }\n                else {\n                    !comparator(a, buffer.shift()) && emit(false);\n                }\n            }, function () {\n                selfState.complete = true;\n                var complete = otherState.complete, buffer = otherState.buffer;\n                complete && emit(buffer.length === 0);\n                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n            });\n            return sequenceEqualSubscriber;\n        };\n        source.subscribe(createSubscriber(aState, bState));\n        compareTo.subscribe(createSubscriber(bState, aState));\n    });\n}\nfunction createState() {\n    return {\n        buffer: [],\n        complete: false,\n    };\n}\n//# sourceMappingURL=sequenceEqual.js.map"]},"metadata":{},"sourceType":"module"}