{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject } from '@polkadot/util';\n\nfunction compareSetArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(entry => !a.has(entry));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Set<string, Codec> that the first has to be as well\n\n\nexport function compareSet(a, b) {\n  if (Array.isArray(b)) {\n    return compareSetArray(a, b);\n  } else if (b instanceof Set) {\n    return compareSetArray(a, [...b.values()]);\n  } else if (isObject(b)) {\n    return compareSetArray(a, Object.values(b));\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/codec/utils/compareSet.js"],"names":["isObject","compareSetArray","a","b","size","length","some","entry","has","compareSet","Array","isArray","Set","values","Object"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,QAAyB,gBAAzB;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAC7B;AACA,SAAOD,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACE,MAAb,IAAuB,CAACF,CAAC,CAACG,IAAF,CAAOC,KAAK,IAAI,CAACL,CAAC,CAACM,GAAF,CAAMD,KAAN,CAAjB,CAA/B;AACD,C,CAAC;AACF;;;AAGA,OAAO,SAASE,UAAT,CAAoBP,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAIO,KAAK,CAACC,OAAN,CAAcR,CAAd,CAAJ,EAAsB;AACpB,WAAOF,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAAtB;AACD,GAFD,MAEO,IAAIA,CAAC,YAAYS,GAAjB,EAAsB;AAC3B,WAAOX,eAAe,CAACC,CAAD,EAAI,CAAC,GAAGC,CAAC,CAACU,MAAF,EAAJ,CAAJ,CAAtB;AACD,GAFM,MAEA,IAAIb,QAAQ,CAACG,CAAD,CAAZ,EAAiB;AACtB,WAAOF,eAAe,CAACC,CAAD,EAAIY,MAAM,CAACD,MAAP,CAAcV,CAAd,CAAJ,CAAtB;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject } from '@polkadot/util';\n\nfunction compareSetArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(entry => !a.has(entry));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Set<string, Codec> that the first has to be as well\n\n\nexport function compareSet(a, b) {\n  if (Array.isArray(b)) {\n    return compareSetArray(a, b);\n  } else if (b instanceof Set) {\n    return compareSetArray(a, [...b.values()]);\n  } else if (isObject(b)) {\n    return compareSetArray(a, Object.values(b));\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}