{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var windows = [];\n\n    var handleError = function (err) {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n      var window = new Subject();\n      windows.push(window);\n      var closingSubscription = new Subscription();\n\n      var closeWindow = function () {\n        arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n\n      var closingNotifier;\n\n      try {\n        closingNotifier = innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n    }, noop));\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var windowsCopy = windows.slice();\n\n      try {\n        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n          var window_1 = windowsCopy_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, handleError, function () {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/windowToggle.ts"],"names":[],"mappings":";AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,YAAT,QAA6B,iBAA7B;AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AAgDA,OAAM,SAAU,YAAV,CACJ,QADI,EAEJ,eAFI,EAEmD;AAEvD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAM,OAAO,GAAiB,EAA9B;;AAEA,QAAM,WAAW,GAAG,UAAC,GAAD,EAAS;AAC3B,aAAO,IAAI,OAAO,CAAC,MAAnB,EAA2B;AACzB,QAAA,OAAO,CAAC,KAAR,GAAiB,KAAjB,CAAuB,GAAvB;AACD;;AACD,MAAA,UAAU,CAAC,KAAX,CAAiB,GAAjB;AACD,KALD;;AAOA,IAAA,SAAS,CAAC,QAAD,CAAT,CAAoB,SAApB,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,SAAD,EAAU;AACR,UAAM,MAAM,GAAG,IAAI,OAAJ,EAAf;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACA,UAAM,mBAAmB,GAAG,IAAI,YAAJ,EAA5B;;AACA,UAAM,WAAW,GAAG,YAAA;AAClB,QAAA,SAAS,CAAC,OAAD,EAAU,MAAV,CAAT;AACA,QAAA,MAAM,CAAC,QAAP;AACA,QAAA,mBAAmB,CAAC,WAApB;AACD,OAJD;;AAMA,UAAI,eAAJ;;AACA,UAAI;AACF,QAAA,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,SAAD,CAAhB,CAA3B;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,QAAA,WAAW,CAAC,GAAD,CAAX;AACA;AACD;;AAED,MAAA,UAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,YAAP,EAAhB;AAEA,MAAA,mBAAmB,CAAC,GAApB,CAAwB,eAAe,CAAC,SAAhB,CAA0B,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,WAAnC,EAAgD,IAAhD,EAAsD,WAAtD,CAA1B,CAAxB;AACD,KAvBH,EAwBE,IAxBF,CADF;AA8BA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,KAAD,EAAS;;;AAGP,UAAM,WAAW,GAAG,OAAO,CAAC,KAAR,EAApB;;;AACA,aAAqB,IAAA,aAAA,GAAA,QAAA,CAAA,WAAA,CAAA,EAAW,eAAA,GAAA,aAAA,CAAA,IAAA,EAAhC,EAAgC,CAAA,eAAA,CAAA,IAAhC,EAAgC,eAAA,GAAA,aAAA,CAAA,IAAA,EAAhC,EAAkC;AAA7B,cAAM,QAAM,GAAA,eAAA,CAAA,KAAZ;AACH,UAAA,QAAM,CAAC,IAAP,CAAY,KAAZ;AACD;;;;;;;;;;;;AACF,KATH,EAUE,YAAA;AAEE,aAAO,IAAI,OAAO,CAAC,MAAnB,EAA2B;AACzB,QAAA,OAAO,CAAC,KAAR,GAAiB,QAAjB;AACD;;AACD,MAAA,UAAU,CAAC,QAAX;AACD,KAhBH,EAiBE,WAjBF,EAkBE,YAAA;AAME,aAAO,IAAI,OAAO,CAAC,MAAnB,EAA2B;AACzB,QAAA,OAAO,CAAC,KAAR,GAAiB,WAAjB;AACD;AACF,KA3BH,CADF;AA+BD,GAvEa,CAAd;AAwED","sourceRoot":"","sourcesContent":["import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var windows = [];\n        var handleError = function (err) {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n            var window = new Subject();\n            windows.push(window);\n            var closingSubscription = new Subscription();\n            var closeWindow = function () {\n                arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        }, noop));\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var windowsCopy = windows.slice();\n            try {\n                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n                    var window_1 = windowsCopy_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, function () {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\n//# sourceMappingURL=windowToggle.js.map"]},"metadata":{},"sourceType":"module"}