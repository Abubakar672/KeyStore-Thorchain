{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// a helper function for both types of payloads, Raw and metadata-known\nexport function sign(registry, signerPair, u8a, options) {\n  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;\n  return signerPair.sign(encoded, options);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/extrinsic/util.js"],"names":["sign","registry","signerPair","u8a","options","encoded","length","hash"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,IAAT,CAAcC,QAAd,EAAwBC,UAAxB,EAAoCC,GAApC,EAAyCC,OAAzC,EAAkD;AACvD,QAAMC,OAAO,GAAGF,GAAG,CAACG,MAAJ,GAAa,GAAb,GAAmBL,QAAQ,CAACM,IAAT,CAAcJ,GAAd,CAAnB,GAAwCA,GAAxD;AACA,SAAOD,UAAU,CAACF,IAAX,CAAgBK,OAAhB,EAAyBD,OAAzB,CAAP;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// a helper function for both types of payloads, Raw and metadata-known\nexport function sign(registry, signerPair, u8a, options) {\n  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;\n  return signerPair.sign(encoded, options);\n}"]},"metadata":{},"sourceType":"module"}