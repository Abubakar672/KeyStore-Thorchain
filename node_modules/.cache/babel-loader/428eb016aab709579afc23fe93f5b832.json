{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\n\nfunction zeroBalance(api) {\n  return api.registry.createType('Balance');\n}\n\nfunction getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {\n  const votingBalance = api.registry.createType('Balance', freeBalance.toBn());\n  return {\n    freeBalance,\n    frozenFee,\n    frozenMisc,\n    reservedBalance,\n    votingBalance\n  };\n}\n\nfunction calcBalances(api, [accountId, [accountNonce, [primary, ...additional]]]) {\n  return _objectSpread({\n    accountId,\n    accountNonce,\n    additional: additional.map(b => getBalance(api, b))\n  }, getBalance(api, primary));\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe(map(([freeBalance, reservedBalance, accountNonce]) => [accountNonce, [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]]));\n}\n\nfunction queryNonceOnly(api, accountId) {\n  const fill = nonce => [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];\n\n  return isFunction(api.query.system.account) ? api.query.system.account(accountId).pipe(map(({\n    nonce\n  }) => fill(nonce))) : isFunction(api.query.system.accountNonce) ? api.query.system.accountNonce(accountId).pipe(map(nonce => fill(nonce))) : of(fill(api.registry.createType('Index')));\n}\n\nfunction queryBalancesAccount(api, accountId, modules = ['balances']) {\n  const balances = modules.map(m => {\n    var _m, _api$query$m;\n\n    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customAccount) || ((_api$query$m = api.query[m]) === null || _api$query$m === void 0 ? void 0 : _api$query$m.account);\n  }).filter(q => isFunction(q)).map(q => [q, accountId]);\n\n  const extract = (nonce, data) => [nonce, data.map(({\n    feeFrozen,\n    free,\n    miscFrozen,\n    reserved\n  }) => [free, reserved, feeFrozen, miscFrozen])]; // NOTE this is for the first case where we do have instances specified\n\n\n  return balances.length ? isFunction(api.query.system.account) ? api.queryMulti([[api.query.system.account, accountId], ...balances]).pipe(map(([{\n    nonce\n  }, ...balances]) => extract(nonce, balances))) : api.queryMulti([[api.query.system.accountNonce, accountId], ...balances]).pipe(map(([nonce, ...balances]) => extract(nonce, balances))) : queryNonceOnly(api, accountId);\n}\n\nfunction querySystemAccount(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe(map(infoOrTuple => {\n    const data = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];\n    const nonce = infoOrTuple.nonce || infoOrTuple[0];\n\n    if (!data || data.isEmpty) {\n      return [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];\n    }\n\n    const {\n      feeFrozen,\n      free,\n      miscFrozen,\n      reserved\n    } = data;\n    return [nonce, [[free, reserved, feeFrozen, miscFrozen]]];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function account(instanceId, api) {\n  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, address => api.derive.accounts.accountId(address).pipe(switchMap(accountId => {\n    var _api$query$system, _api$query$balances, _api$query$balances2;\n\n    return accountId ? combineLatest([of(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : isFunction((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) ? querySystemAccount(api, accountId) : isFunction((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryBalancesAccount(api, accountId) : isFunction((_api$query$balances2 = api.query.balances) === null || _api$query$balances2 === void 0 ? void 0 : _api$query$balances2.freeBalance) ? queryBalancesFree(api, accountId) : queryNonceOnly(api, accountId)]) : of([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]]]);\n  }), map(result => calcBalances(api, result))));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/balances/account.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","combineLatest","map","of","switchMap","isFunction","memo","zeroBalance","api","registry","createType","getBalance","freeBalance","reservedBalance","frozenFee","frozenMisc","votingBalance","toBn","calcBalances","accountId","accountNonce","primary","additional","b","queryBalancesFree","queryMulti","query","balances","system","pipe","queryNonceOnly","fill","nonce","account","queryBalancesAccount","modules","m","_m","_api$query$m","derive","customAccount","q","extract","data","feeFrozen","free","miscFrozen","reserved","querySystemAccount","infoOrTuple","isEmpty","instanceId","balanceInstances","getModuleInstances","runtimeVersion","specName","toString","address","accounts","_api$query$system","_api$query$balances","_api$query$balances2","result"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\n\nfunction zeroBalance(api) {\n  return api.registry.createType('Balance');\n}\n\nfunction getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {\n  const votingBalance = api.registry.createType('Balance', freeBalance.toBn());\n  return {\n    freeBalance,\n    frozenFee,\n    frozenMisc,\n    reservedBalance,\n    votingBalance\n  };\n}\n\nfunction calcBalances(api, [accountId, [accountNonce, [primary, ...additional]]]) {\n  return _objectSpread({\n    accountId,\n    accountNonce,\n    additional: additional.map(b => getBalance(api, b))\n  }, getBalance(api, primary));\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe(map(([freeBalance, reservedBalance, accountNonce]) => [accountNonce, [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]]));\n}\n\nfunction queryNonceOnly(api, accountId) {\n  const fill = nonce => [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];\n\n  return isFunction(api.query.system.account) ? api.query.system.account(accountId).pipe(map(({\n    nonce\n  }) => fill(nonce))) : isFunction(api.query.system.accountNonce) ? api.query.system.accountNonce(accountId).pipe(map(nonce => fill(nonce))) : of(fill(api.registry.createType('Index')));\n}\n\nfunction queryBalancesAccount(api, accountId, modules = ['balances']) {\n  const balances = modules.map(m => {\n    var _m, _api$query$m;\n\n    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customAccount) || ((_api$query$m = api.query[m]) === null || _api$query$m === void 0 ? void 0 : _api$query$m.account);\n  }).filter(q => isFunction(q)).map(q => [q, accountId]);\n\n  const extract = (nonce, data) => [nonce, data.map(({\n    feeFrozen,\n    free,\n    miscFrozen,\n    reserved\n  }) => [free, reserved, feeFrozen, miscFrozen])]; // NOTE this is for the first case where we do have instances specified\n\n\n  return balances.length ? isFunction(api.query.system.account) ? api.queryMulti([[api.query.system.account, accountId], ...balances]).pipe(map(([{\n    nonce\n  }, ...balances]) => extract(nonce, balances))) : api.queryMulti([[api.query.system.accountNonce, accountId], ...balances]).pipe(map(([nonce, ...balances]) => extract(nonce, balances))) : queryNonceOnly(api, accountId);\n}\n\nfunction querySystemAccount(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe(map(infoOrTuple => {\n    const data = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];\n    const nonce = infoOrTuple.nonce || infoOrTuple[0];\n\n    if (!data || data.isEmpty) {\n      return [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];\n    }\n\n    const {\n      feeFrozen,\n      free,\n      miscFrozen,\n      reserved\n    } = data;\n    return [nonce, [[free, reserved, feeFrozen, miscFrozen]]];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nexport function account(instanceId, api) {\n  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');\n  return memo(instanceId, address => api.derive.accounts.accountId(address).pipe(switchMap(accountId => {\n    var _api$query$system, _api$query$balances, _api$query$balances2;\n\n    return accountId ? combineLatest([of(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : isFunction((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) ? querySystemAccount(api, accountId) : isFunction((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryBalancesAccount(api, accountId) : isFunction((_api$query$balances2 = api.query.balances) === null || _api$query$balances2 === void 0 ? void 0 : _api$query$balances2.freeBalance) ? queryBalancesFree(api, accountId) : queryNonceOnly(api, accountId)]) : of([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]]]);\n  }), map(result => calcBalances(api, result))));\n}"]},"metadata":{},"sourceType":"module"}