{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { extractAuthor } from \"./util.js\";\n\nfunction mapExtrinsics(extrinsics, records) {\n  return extrinsics.map((extrinsic, index) => {\n    let dispatchError;\n    let dispatchInfo;\n    const events = records.filter(({\n      phase\n    }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index)).map(({\n      event\n    }) => {\n      if (event.section === 'system') {\n        if (event.method === 'ExtrinsicSuccess') {\n          dispatchInfo = event.data[0];\n        } else if (event.method === 'ExtrinsicFailed') {\n          dispatchError = event.data[0];\n          dispatchInfo = event.data[1];\n        }\n      }\n\n      return event;\n    });\n    return {\n      dispatchError,\n      dispatchInfo,\n      events,\n      extrinsic\n    };\n  });\n}\n\nexport function createSignedBlockExtended(registry, block, events, validators) {\n  // an instance of the base extrinsic for us to extend\n  const SignedBlockBase = registry.createClass('SignedBlock');\n\n  var _author = /*#__PURE__*/_classPrivateFieldLooseKey(\"author\");\n\n  var _events = /*#__PURE__*/_classPrivateFieldLooseKey(\"events\");\n\n  var _extrinsics = /*#__PURE__*/_classPrivateFieldLooseKey(\"extrinsics\");\n\n  class Implementation extends SignedBlockBase {\n    constructor(registry, block, events, validators) {\n      super(registry, block);\n      Object.defineProperty(this, _author, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _events, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _extrinsics, {\n        writable: true,\n        value: void 0\n      });\n      _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.block.header.digest, validators);\n      _classPrivateFieldLooseBase(this, _events)[_events] = events || [];\n      _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics] = mapExtrinsics(this.block.extrinsics, _classPrivateFieldLooseBase(this, _events)[_events]);\n      this.createdAtHash = block === null || block === void 0 ? void 0 : block.createdAtHash;\n    }\n    /**\n     * @description Convenience method, returns the author for the block\n     */\n\n\n    get author() {\n      return _classPrivateFieldLooseBase(this, _author)[_author];\n    }\n    /**\n     * @description Convenience method, returns the events associated with the block\n     */\n\n\n    get events() {\n      return _classPrivateFieldLooseBase(this, _events)[_events];\n    }\n    /**\n     * @description Returns the extrinsics and their events, mapped\n     */\n\n\n    get extrinsics() {\n      return _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics];\n    }\n\n  }\n\n  return new Implementation(registry, block, events, validators);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/type/SignedBlockExtended.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","extractAuthor","mapExtrinsics","extrinsics","records","map","extrinsic","index","dispatchError","dispatchInfo","events","filter","phase","isApplyExtrinsic","asApplyExtrinsic","eq","event","section","method","data","createSignedBlockExtended","registry","block","validators","SignedBlockBase","createClass","_author","_events","_extrinsics","Implementation","constructor","Object","defineProperty","writable","value","header","digest","createdAtHash","author"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractAuthor } from \"./util.js\";\n\nfunction mapExtrinsics(extrinsics, records) {\n  return extrinsics.map((extrinsic, index) => {\n    let dispatchError;\n    let dispatchInfo;\n    const events = records.filter(({\n      phase\n    }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index)).map(({\n      event\n    }) => {\n      if (event.section === 'system') {\n        if (event.method === 'ExtrinsicSuccess') {\n          dispatchInfo = event.data[0];\n        } else if (event.method === 'ExtrinsicFailed') {\n          dispatchError = event.data[0];\n          dispatchInfo = event.data[1];\n        }\n      }\n\n      return event;\n    });\n    return {\n      dispatchError,\n      dispatchInfo,\n      events,\n      extrinsic\n    };\n  });\n}\n\nexport function createSignedBlockExtended(registry, block, events, validators) {\n  // an instance of the base extrinsic for us to extend\n  const SignedBlockBase = registry.createClass('SignedBlock');\n\n  var _author = /*#__PURE__*/_classPrivateFieldLooseKey(\"author\");\n\n  var _events = /*#__PURE__*/_classPrivateFieldLooseKey(\"events\");\n\n  var _extrinsics = /*#__PURE__*/_classPrivateFieldLooseKey(\"extrinsics\");\n\n  class Implementation extends SignedBlockBase {\n    constructor(registry, block, events, validators) {\n      super(registry, block);\n      Object.defineProperty(this, _author, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _events, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _extrinsics, {\n        writable: true,\n        value: void 0\n      });\n      _classPrivateFieldLooseBase(this, _author)[_author] = extractAuthor(this.block.header.digest, validators);\n      _classPrivateFieldLooseBase(this, _events)[_events] = events || [];\n      _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics] = mapExtrinsics(this.block.extrinsics, _classPrivateFieldLooseBase(this, _events)[_events]);\n      this.createdAtHash = block === null || block === void 0 ? void 0 : block.createdAtHash;\n    }\n    /**\n     * @description Convenience method, returns the author for the block\n     */\n\n\n    get author() {\n      return _classPrivateFieldLooseBase(this, _author)[_author];\n    }\n    /**\n     * @description Convenience method, returns the events associated with the block\n     */\n\n\n    get events() {\n      return _classPrivateFieldLooseBase(this, _events)[_events];\n    }\n    /**\n     * @description Returns the extrinsics and their events, mapped\n     */\n\n\n    get extrinsics() {\n      return _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics];\n    }\n\n  }\n\n  return new Implementation(registry, block, events, validators);\n}"]},"metadata":{},"sourceType":"module"}