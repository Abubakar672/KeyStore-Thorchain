{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.js\";\n\nfunction findSiPrimitive(registry, _prim) {\n  const prim = _prim.toLowerCase();\n\n  const portable = registry.lookup.types.find(t => t.type.def.isPrimitive && t.type.def.asPrimitive.toString().toLowerCase() === prim || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim);\n  return portable;\n}\n\nfunction findSiType(registry, orig) {\n  let portable = findSiPrimitive(registry, orig);\n\n  if (!portable && orig === 'Bytes') {\n    const u8 = findSiPrimitive(registry, 'u8');\n\n    if (u8) {\n      portable = registry.lookup.types.find(t => t.type.def.isSequence && t.type.def.asSequence.type.eq(u8.id) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(orig));\n    }\n  }\n\n  if (!portable) {\n    console.warn(`Unable to map ${orig} to a lookup index`);\n  }\n\n  return portable;\n} // Small helper function to factorize code on this page.\n\n/** @internal */\n\n\nfunction createRuntimeFunction(method, key, {\n  docs,\n  type\n}) {\n  return registry => {\n    var _findSiType;\n\n    return createFunction(registry, {\n      meta: registry.createType('StorageEntryMetadataLatest', {\n        docs: registry.createType('Vec<Text>', [docs]),\n        modifier: registry.createType('StorageEntryModifierLatest', 'Required'),\n        name: registry.createType('Text', method),\n        toJSON: () => key,\n        type: registry.createType('StorageEntryTypeLatest', {\n          Plain: ((_findSiType = findSiType(registry, type)) === null || _findSiType === void 0 ? void 0 : _findSiType.id) || 0\n        })\n      }),\n      method,\n      prefix: 'Substrate',\n      section: 'substrate'\n    }, {\n      key,\n      skipHashing: true\n    });\n  };\n}\n\nexport const substrate = {\n  changesTrieConfig: createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n    docs: ' Changes trie configuration is stored under this key.',\n    type: 'u32'\n  }),\n  childStorageKeyPrefix: createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n    docs: ' Prefix of child storage keys.',\n    type: 'u32'\n  }),\n  code: createRuntimeFunction('code', ':code', {\n    docs: ' Wasm code of the runtime.',\n    type: 'Bytes'\n  }),\n  extrinsicIndex: createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n    docs: ' Current extrinsic index (u32) is stored under this key.',\n    type: 'u32'\n  }),\n  heapPages: createRuntimeFunction('heapPages', ':heappages', {\n    docs: ' Number of wasm linear memory pages required for execution of the runtime.',\n    type: 'u64'\n  })\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/decorate/storage/substrate.js"],"names":["createFunction","findSiPrimitive","registry","_prim","prim","toLowerCase","portable","lookup","types","find","t","type","def","isPrimitive","asPrimitive","toString","isHistoricMetaCompat","asHistoricMetaCompat","findSiType","orig","u8","isSequence","asSequence","eq","id","console","warn","createRuntimeFunction","method","key","docs","_findSiType","meta","createType","modifier","name","toJSON","Plain","prefix","section","skipHashing","substrate","changesTrieConfig","childStorageKeyPrefix","code","extrinsicIndex","heapPages"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.js\";\n\nfunction findSiPrimitive(registry, _prim) {\n  const prim = _prim.toLowerCase();\n\n  const portable = registry.lookup.types.find(t => t.type.def.isPrimitive && t.type.def.asPrimitive.toString().toLowerCase() === prim || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim);\n  return portable;\n}\n\nfunction findSiType(registry, orig) {\n  let portable = findSiPrimitive(registry, orig);\n\n  if (!portable && orig === 'Bytes') {\n    const u8 = findSiPrimitive(registry, 'u8');\n\n    if (u8) {\n      portable = registry.lookup.types.find(t => t.type.def.isSequence && t.type.def.asSequence.type.eq(u8.id) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(orig));\n    }\n  }\n\n  if (!portable) {\n    console.warn(`Unable to map ${orig} to a lookup index`);\n  }\n\n  return portable;\n} // Small helper function to factorize code on this page.\n\n/** @internal */\n\n\nfunction createRuntimeFunction(method, key, {\n  docs,\n  type\n}) {\n  return registry => {\n    var _findSiType;\n\n    return createFunction(registry, {\n      meta: registry.createType('StorageEntryMetadataLatest', {\n        docs: registry.createType('Vec<Text>', [docs]),\n        modifier: registry.createType('StorageEntryModifierLatest', 'Required'),\n        name: registry.createType('Text', method),\n        toJSON: () => key,\n        type: registry.createType('StorageEntryTypeLatest', {\n          Plain: ((_findSiType = findSiType(registry, type)) === null || _findSiType === void 0 ? void 0 : _findSiType.id) || 0\n        })\n      }),\n      method,\n      prefix: 'Substrate',\n      section: 'substrate'\n    }, {\n      key,\n      skipHashing: true\n    });\n  };\n}\n\nexport const substrate = {\n  changesTrieConfig: createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n    docs: ' Changes trie configuration is stored under this key.',\n    type: 'u32'\n  }),\n  childStorageKeyPrefix: createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n    docs: ' Prefix of child storage keys.',\n    type: 'u32'\n  }),\n  code: createRuntimeFunction('code', ':code', {\n    docs: ' Wasm code of the runtime.',\n    type: 'Bytes'\n  }),\n  extrinsicIndex: createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n    docs: ' Current extrinsic index (u32) is stored under this key.',\n    type: 'u32'\n  }),\n  heapPages: createRuntimeFunction('heapPages', ':heappages', {\n    docs: ' Number of wasm linear memory pages required for execution of the runtime.',\n    type: 'u64'\n  })\n};"]},"metadata":{},"sourceType":"module"}