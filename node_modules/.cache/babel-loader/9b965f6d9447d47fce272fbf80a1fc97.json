{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexFixLength } from \"../hex/fixLength.js\";\nimport { isNull } from \"../is/null.js\";\nimport { isUndefined } from \"../is/undefined.js\";\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\n\nexport function numberToHex(value, bitLength = -1) {\n  if (isUndefined(value) || isNull(value) || isNaN(value)) {\n    return '0x';\n  }\n\n  return hexFixLength(value.toString(16), bitLength, true);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/number/toHex.js"],"names":["hexFixLength","isNull","isUndefined","numberToHex","value","bitLength","isNaN","toString"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,SAAS,GAAG,CAAC,CAAzC,EAA4C;AACjD,MAAIH,WAAW,CAACE,KAAD,CAAX,IAAsBH,MAAM,CAACG,KAAD,CAA5B,IAAuCE,KAAK,CAACF,KAAD,CAAhD,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,SAAOJ,YAAY,CAACI,KAAK,CAACG,QAAN,CAAe,EAAf,CAAD,EAAqBF,SAArB,EAAgC,IAAhC,CAAnB;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexFixLength } from \"../hex/fixLength.js\";\nimport { isNull } from \"../is/null.js\";\nimport { isUndefined } from \"../is/undefined.js\";\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\n\nexport function numberToHex(value, bitLength = -1) {\n  if (isUndefined(value) || isNull(value) || isNaN(value)) {\n    return '0x';\n  }\n\n  return hexFixLength(value.toString(16), bitLength, true);\n}"]},"metadata":{},"sourceType":"module"}