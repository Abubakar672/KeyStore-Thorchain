{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getKeys: {\n      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n      alias: ['childstate_getKeysPagedAt'],\n      description: 'Returns the keys with prefix from a child storage with pagination support',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      description: 'Returns a child storage entry at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<StorageData>'\n    },\n    getStorageHash: {\n      description: 'Returns the hash of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Hash>'\n    },\n    getStorageSize: {\n      description: 'Returns the size of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<u64>'\n    }\n  },\n  types: {\n    // StorageKey extends Bytes\n    PrefixedStorageKey: 'StorageKey'\n  }\n};","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/interfaces/childstate/definitions.js"],"names":["rpc","getKeys","description","params","name","type","isHistoric","isOptional","getKeysPaged","alias","getStorage","getStorageHash","getStorageSize","types","PrefixedStorageKey"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getKeys: {\n      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n      alias: ['childstate_getKeysPagedAt'],\n      description: 'Returns the keys with prefix from a child storage with pagination support',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      description: 'Returns a child storage entry at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<StorageData>'\n    },\n    getStorageHash: {\n      description: 'Returns the hash of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Hash>'\n    },\n    getStorageSize: {\n      description: 'Returns the size of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<u64>'\n    }\n  },\n  types: {\n    // StorageKey extends Bytes\n    PrefixedStorageKey: 'StorageKey'\n  }\n};"]},"metadata":{},"sourceType":"module"}