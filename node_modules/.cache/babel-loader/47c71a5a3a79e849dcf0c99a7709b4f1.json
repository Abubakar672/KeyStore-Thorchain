{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, xxhashAsU8a } from '@polkadot/util-crypto';\n\nconst DEFAULT_FN = data => xxhashAsU8a(data, 128);\n\nconst HASHERS = {\n  Blake2_128: data => // eslint-disable-line camelcase\n  blake2AsU8a(data, 128),\n  Blake2_128Concat: data => // eslint-disable-line camelcase\n  u8aConcat(blake2AsU8a(data, 128), u8aToU8a(data)),\n  Blake2_256: data => // eslint-disable-line camelcase\n  blake2AsU8a(data, 256),\n  Identity: data => u8aToU8a(data),\n  Twox128: data => xxhashAsU8a(data, 128),\n  Twox256: data => xxhashAsU8a(data, 256),\n  Twox64Concat: data => u8aConcat(xxhashAsU8a(data, 64), u8aToU8a(data))\n};\n/** @internal */\n\nexport function getHasher(hasher) {\n  return HASHERS[hasher.type] || DEFAULT_FN;\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js"],"names":["u8aConcat","u8aToU8a","blake2AsU8a","xxhashAsU8a","DEFAULT_FN","data","HASHERS","Blake2_128","Blake2_128Concat","Blake2_256","Identity","Twox128","Twox256","Twox64Concat","getHasher","hasher","type"],"mappings":"AAAA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,gBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,uBAAzC;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAIF,WAAW,CAACE,IAAD,EAAO,GAAP,CAAtC;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAEF,IAAI,IAAI;AACpBH,EAAAA,WAAW,CAACG,IAAD,EAAO,GAAP,CAFG;AAGdG,EAAAA,gBAAgB,EAAEH,IAAI,IAAI;AAC1BL,EAAAA,SAAS,CAACE,WAAW,CAACG,IAAD,EAAO,GAAP,CAAZ,EAAyBJ,QAAQ,CAACI,IAAD,CAAjC,CAJK;AAKdI,EAAAA,UAAU,EAAEJ,IAAI,IAAI;AACpBH,EAAAA,WAAW,CAACG,IAAD,EAAO,GAAP,CANG;AAOdK,EAAAA,QAAQ,EAAEL,IAAI,IAAIJ,QAAQ,CAACI,IAAD,CAPZ;AAQdM,EAAAA,OAAO,EAAEN,IAAI,IAAIF,WAAW,CAACE,IAAD,EAAO,GAAP,CARd;AASdO,EAAAA,OAAO,EAAEP,IAAI,IAAIF,WAAW,CAACE,IAAD,EAAO,GAAP,CATd;AAUdQ,EAAAA,YAAY,EAAER,IAAI,IAAIL,SAAS,CAACG,WAAW,CAACE,IAAD,EAAO,EAAP,CAAZ,EAAwBJ,QAAQ,CAACI,IAAD,CAAhC;AAVjB,CAAhB;AAYA;;AAEA,OAAO,SAASS,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,SAAOT,OAAO,CAACS,MAAM,CAACC,IAAR,CAAP,IAAwBZ,UAA/B;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, xxhashAsU8a } from '@polkadot/util-crypto';\n\nconst DEFAULT_FN = data => xxhashAsU8a(data, 128);\n\nconst HASHERS = {\n  Blake2_128: data => // eslint-disable-line camelcase\n  blake2AsU8a(data, 128),\n  Blake2_128Concat: data => // eslint-disable-line camelcase\n  u8aConcat(blake2AsU8a(data, 128), u8aToU8a(data)),\n  Blake2_256: data => // eslint-disable-line camelcase\n  blake2AsU8a(data, 256),\n  Identity: data => u8aToU8a(data),\n  Twox128: data => xxhashAsU8a(data, 128),\n  Twox256: data => xxhashAsU8a(data, 256),\n  Twox64Concat: data => u8aConcat(xxhashAsU8a(data, 64), u8aToU8a(data))\n};\n/** @internal */\n\nexport function getHasher(hasher) {\n  return HASHERS[hasher.type] || DEFAULT_FN;\n}"]},"metadata":{},"sourceType":"module"}