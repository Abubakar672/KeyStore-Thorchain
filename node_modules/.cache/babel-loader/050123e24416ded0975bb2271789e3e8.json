{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assert, isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\n\nvar _map = /*#__PURE__*/_classPrivateFieldLooseKey(\"map\");\n\nexport class Pairs {\n  constructor() {\n    Object.defineProperty(this, _map, {\n      writable: true,\n      value: {}\n    });\n  }\n\n  add(pair) {\n    _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values(_classPrivateFieldLooseBase(this, _map)[_map]);\n  }\n\n  get(address) {\n    const pair = _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(address).toString()];\n\n    assert(pair, () => `Unable to retrieve keypair '${isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address}'`);\n    return pair;\n  }\n\n  remove(address) {\n    delete _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(address).toString()];\n  }\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/keyring/pairs.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","assert","isHex","isU8a","u8aToHex","u8aToU8a","decodeAddress","_map","Pairs","constructor","Object","defineProperty","writable","value","add","pair","address","toString","all","values","get","remove"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC,C,CACA;AACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,QAAzC,QAAyD,gBAAzD;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,IAAIC,IAAI,GAAG,aAAaP,0BAA0B,CAAC,KAAD,CAAlD;;AAEA,OAAO,MAAMQ,KAAN,CAAY;AACjBC,EAAAA,WAAW,GAAG;AACZC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BJ,IAA5B,EAAkC;AAChCK,MAAAA,QAAQ,EAAE,IADsB;AAEhCC,MAAAA,KAAK,EAAE;AAFyB,KAAlC;AAID;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAO;AACRhB,IAAAA,2BAA2B,CAAC,IAAD,EAAOQ,IAAP,CAA3B,CAAwCA,IAAxC,EAA8CD,aAAa,CAACS,IAAI,CAACC,OAAN,CAAb,CAA4BC,QAA5B,EAA9C,IAAwFF,IAAxF;AACA,WAAOA,IAAP;AACD;;AAEDG,EAAAA,GAAG,GAAG;AACJ,WAAOR,MAAM,CAACS,MAAP,CAAcpB,2BAA2B,CAAC,IAAD,EAAOQ,IAAP,CAA3B,CAAwCA,IAAxC,CAAd,CAAP;AACD;;AAEDa,EAAAA,GAAG,CAACJ,OAAD,EAAU;AACX,UAAMD,IAAI,GAAGhB,2BAA2B,CAAC,IAAD,EAAOQ,IAAP,CAA3B,CAAwCA,IAAxC,EAA8CD,aAAa,CAACU,OAAD,CAAb,CAAuBC,QAAvB,EAA9C,CAAb;;AAEAhB,IAAAA,MAAM,CAACc,IAAD,EAAO,MAAO,+BAA8BZ,KAAK,CAACa,OAAD,CAAL,IAAkBd,KAAK,CAACc,OAAD,CAAvB,GAAmCZ,QAAQ,CAACC,QAAQ,CAACW,OAAD,CAAT,CAA3C,GAAiEA,OAAQ,GAArH,CAAN;AACA,WAAOD,IAAP;AACD;;AAEDM,EAAAA,MAAM,CAACL,OAAD,EAAU;AACd,WAAOjB,2BAA2B,CAAC,IAAD,EAAOQ,IAAP,CAA3B,CAAwCA,IAAxC,EAA8CD,aAAa,CAACU,OAAD,CAAb,CAAuBC,QAAvB,EAA9C,CAAP;AACD;;AA1BgB","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\n\nvar _map = /*#__PURE__*/_classPrivateFieldLooseKey(\"map\");\n\nexport class Pairs {\n  constructor() {\n    Object.defineProperty(this, _map, {\n      writable: true,\n      value: {}\n    });\n  }\n\n  add(pair) {\n    _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values(_classPrivateFieldLooseBase(this, _map)[_map]);\n  }\n\n  get(address) {\n    const pair = _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(address).toString()];\n\n    assert(pair, () => `Unable to retrieve keypair '${isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address}'`);\n    return pair;\n  }\n\n  remove(address) {\n    delete _classPrivateFieldLooseBase(this, _map)[_map][decodeAddress(address).toString()];\n  }\n\n}"]},"metadata":{},"sourceType":"module"}