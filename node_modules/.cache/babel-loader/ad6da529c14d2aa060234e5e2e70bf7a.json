{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bip39Generate, isReady } from '@polkadot/wasm-crypto';\nimport { generateMnemonic } from \"./bip39.js\"; // mapping of words to the actual strength (as expected)\n\nconst STRENGTH_MAP = {\n  12: 16 * 8,\n  15: 20 * 8,\n  18: 24 * 8,\n  21: 28 * 8,\n  24: 32 * 8\n};\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */\n\nexport function mnemonicGenerate(numWords = 12, onlyJs = false) {\n  return isReady() && !onlyJs ? bip39Generate(numWords) : generateMnemonic(STRENGTH_MAP[numWords]);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util-crypto/mnemonic/generate.js"],"names":["bip39Generate","isReady","generateMnemonic","STRENGTH_MAP","mnemonicGenerate","numWords","onlyJs"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,uBAAvC;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACnB,MAAI,KAAK,CADU;AAEnB,MAAI,KAAK,CAFU;AAGnB,MAAI,KAAK,CAHU;AAInB,MAAI,KAAK,CAJU;AAKnB,MAAI,KAAK;AALU,CAArB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAAQ,GAAG,EAArC,EAAyCC,MAAM,GAAG,KAAlD,EAAyD;AAC9D,SAAOL,OAAO,MAAM,CAACK,MAAd,GAAuBN,aAAa,CAACK,QAAD,CAApC,GAAiDH,gBAAgB,CAACC,YAAY,CAACE,QAAD,CAAb,CAAxE;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bip39Generate, isReady } from '@polkadot/wasm-crypto';\nimport { generateMnemonic } from \"./bip39.js\";\n// mapping of words to the actual strength (as expected)\nconst STRENGTH_MAP = {\n  12: 16 * 8,\n  15: 20 * 8,\n  18: 24 * 8,\n  21: 28 * 8,\n  24: 32 * 8\n};\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */\n\nexport function mnemonicGenerate(numWords = 12, onlyJs = false) {\n  return isReady() && !onlyJs ? bip39Generate(numWords) : generateMnemonic(STRENGTH_MAP[numWords]);\n}"]},"metadata":{},"sourceType":"module"}