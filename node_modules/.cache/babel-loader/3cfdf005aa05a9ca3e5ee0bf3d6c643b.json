{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Tuple } from \"./Tuple.js\";\n\nvar _rangeName = /*#__PURE__*/_classPrivateFieldLooseKey(\"rangeName\");\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\n\n\nexport class Range extends Tuple {\n  constructor(registry, Type, value, rangeName = 'Range') {\n    super(registry, {\n      end: Type,\n      start: Type\n    }, value);\n    Object.defineProperty(this, _rangeName, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _rangeName)[_rangeName] = rangeName;\n  }\n\n  static with(Types) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${_classPrivateFieldLooseBase(this, _rangeName)[_rangeName]}<${this.start.toRawType()}>`;\n  }\n\n}\nexport class RangeInclusive extends Range {\n  constructor(registry, type, value) {\n    super(registry, type, value, 'RangeInclusive');\n  }\n\n  static with(Types) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/codec/Range.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","Tuple","_rangeName","Range","constructor","registry","Type","value","rangeName","end","start","Object","defineProperty","writable","with","Types","toRawType","RangeInclusive","type"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uDAAxC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,IAAIC,UAAU,GAAG,aAAaF,0BAA0B,CAAC,WAAD,CAAxD;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMG,KAAN,SAAoBF,KAApB,CAA0B;AAC/BG,EAAAA,WAAW,CAACC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,SAAS,GAAG,OAApC,EAA6C;AACtD,UAAMH,QAAN,EAAgB;AACdI,MAAAA,GAAG,EAAEH,IADS;AAEdI,MAAAA,KAAK,EAAEJ;AAFO,KAAhB,EAGGC,KAHH;AAIAI,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BV,UAA5B,EAAwC;AACtCW,MAAAA,QAAQ,EAAE,IAD4B;AAEtCN,MAAAA,KAAK,EAAE,KAAK;AAF0B,KAAxC;AAIAR,IAAAA,2BAA2B,CAAC,IAAD,EAAOG,UAAP,CAA3B,CAA8CA,UAA9C,IAA4DM,SAA5D;AACD;;AAEU,SAAJM,IAAI,CAACC,KAAD,EAAQ;AACjB,WAAO,cAAcZ,KAAd,CAAoB;AACzBC,MAAAA,WAAW,CAACC,QAAD,EAAWE,KAAX,EAAkB;AAC3B,cAAMF,QAAN,EAAgBU,KAAhB,EAAuBR,KAAvB;AACD;;AAHwB,KAA3B;AAMD;AACD;AACF;AACA;;;AAGW,MAALG,KAAK,GAAG;AACV,WAAO,KAAK,CAAL,CAAP;AACD;AACD;AACF;AACA;;;AAGS,MAAHD,GAAG,GAAG;AACR,WAAO,KAAK,CAAL,CAAP;AACD;AACD;AACF;AACA;;;AAGEO,EAAAA,SAAS,GAAG;AACV,WAAQ,GAAEjB,2BAA2B,CAAC,IAAD,EAAOG,UAAP,CAA3B,CAA8CA,UAA9C,CAA0D,IAAG,KAAKQ,KAAL,CAAWM,SAAX,EAAuB,GAA9F;AACD;;AA5C8B;AA+CjC,OAAO,MAAMC,cAAN,SAA6Bd,KAA7B,CAAmC;AACxCC,EAAAA,WAAW,CAACC,QAAD,EAAWa,IAAX,EAAiBX,KAAjB,EAAwB;AACjC,UAAMF,QAAN,EAAgBa,IAAhB,EAAsBX,KAAtB,EAA6B,gBAA7B;AACD;;AAEU,SAAJO,IAAI,CAACC,KAAD,EAAQ;AACjB,WAAO,cAAcE,cAAd,CAA6B;AAClCb,MAAAA,WAAW,CAACC,QAAD,EAAWE,KAAX,EAAkB;AAC3B,cAAMF,QAAN,EAAgBU,KAAhB,EAAuBR,KAAvB;AACD;;AAHiC,KAApC;AAMD;;AAZuC","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Tuple } from \"./Tuple.js\";\n\nvar _rangeName = /*#__PURE__*/_classPrivateFieldLooseKey(\"rangeName\");\n\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n  constructor(registry, Type, value, rangeName = 'Range') {\n    super(registry, {\n      end: Type,\n      start: Type\n    }, value);\n    Object.defineProperty(this, _rangeName, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _rangeName)[_rangeName] = rangeName;\n  }\n\n  static with(Types) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${_classPrivateFieldLooseBase(this, _rangeName)[_rangeName]}<${this.start.toRawType()}>`;\n  }\n\n}\nexport class RangeInclusive extends Range {\n  constructor(registry, type, value) {\n    super(registry, type, value, 'RangeInclusive');\n  }\n\n  static with(Types) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"module"}