{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assert } from '@polkadot/util';\nimport { Struct } from \"../codec/index.js\";\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toV14 } from \"./v13/toV14.js\";\nimport { toLatest } from \"./v14/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 14;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nvar _converted = /*#__PURE__*/_classPrivateFieldLooseKey(\"converted\");\n\nvar _assertVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"assertVersion\");\n\nvar _getVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"getVersion\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nexport class MetadataVersioned extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value);\n    Object.defineProperty(this, _converted, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _assertVersion, {\n      writable: true,\n      value: version => {\n        assert(this.version <= version, () => `Cannot convert metadata from version ${this.version} to ${version}`);\n        return this.version === version;\n      }\n    });\n    Object.defineProperty(this, _getVersion, {\n      writable: true,\n      value: (version, fromPrev) => {\n        const asCurr = `asV${version}`;\n        const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n        if (version !== 'latest' && _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](version)) {\n          return _classPrivateFieldLooseBase(this, _metadata)[_metadata]()[asCurr];\n        }\n\n        if (!_classPrivateFieldLooseBase(this, _converted)[_converted].has(version)) {\n          _classPrivateFieldLooseBase(this, _converted)[_converted].set(version, fromPrev(this.registry, this[asPrev], this.version));\n        }\n\n        return _classPrivateFieldLooseBase(this, _converted)[_converted].get(version);\n      }\n    });\n    Object.defineProperty(this, _metadata, {\n      writable: true,\n      value: () => {\n        return this.get('metadata');\n      }\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createType('MetadataAll', toCallsOnly(this.registry, this.asLatest), LATEST_VERSION)\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](9);\n\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a V14 object\n   */\n\n\n  get asV14() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](14, toV14);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion]('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.get('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/MetadataVersioned.js"],"names":["_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","assert","Struct","toV10","toV11","toV12","toV13","toV14","toLatest","MagicNumber","getUniqTypes","toCallsOnly","LATEST_VERSION","_converted","_assertVersion","_getVersion","_metadata","MetadataVersioned","constructor","registry","value","magicNumber","metadata","Object","defineProperty","writable","Map","version","fromPrev","asCurr","asPrev","has","set","get","asCallsOnly","createType","asLatest","asV9","asV10","asV11","asV12","asV13","asV14","index","throwError","toJSON"],"mappings":"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","sourcesContent":["import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { Struct } from \"../codec/index.js\";\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toV14 } from \"./v13/toV14.js\";\nimport { toLatest } from \"./v14/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 14;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nvar _converted = /*#__PURE__*/_classPrivateFieldLooseKey(\"converted\");\n\nvar _assertVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"assertVersion\");\n\nvar _getVersion = /*#__PURE__*/_classPrivateFieldLooseKey(\"getVersion\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nexport class MetadataVersioned extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value);\n    Object.defineProperty(this, _converted, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _assertVersion, {\n      writable: true,\n      value: version => {\n        assert(this.version <= version, () => `Cannot convert metadata from version ${this.version} to ${version}`);\n        return this.version === version;\n      }\n    });\n    Object.defineProperty(this, _getVersion, {\n      writable: true,\n      value: (version, fromPrev) => {\n        const asCurr = `asV${version}`;\n        const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n        if (version !== 'latest' && _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](version)) {\n          return _classPrivateFieldLooseBase(this, _metadata)[_metadata]()[asCurr];\n        }\n\n        if (!_classPrivateFieldLooseBase(this, _converted)[_converted].has(version)) {\n          _classPrivateFieldLooseBase(this, _converted)[_converted].set(version, fromPrev(this.registry, this[asPrev], this.version));\n        }\n\n        return _classPrivateFieldLooseBase(this, _converted)[_converted].get(version);\n      }\n    });\n    Object.defineProperty(this, _metadata, {\n      writable: true,\n      value: () => {\n        return this.get('metadata');\n      }\n    });\n  }\n\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createType('MetadataAll', toCallsOnly(this.registry, this.asLatest), LATEST_VERSION)\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](9);\n\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a V14 object\n   */\n\n\n  get asV14() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](14, toV14);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion]('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.get('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}"]},"metadata":{},"sourceType":"module"}