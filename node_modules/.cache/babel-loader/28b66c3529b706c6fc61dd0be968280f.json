{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexHasPrefix } from \"./hasPrefix.js\";\nconst UNPREFIX_HEX_REGEX = /^[a-fA-F0-9]+$/;\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value) {\n    return '';\n  } else if (hexHasPrefix(value)) {\n    return value.substr(2);\n  } else if (UNPREFIX_HEX_REGEX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Invalid hex ${value} passed to hexStripPrefix`);\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/util/hex/stripPrefix.js"],"names":["hexHasPrefix","UNPREFIX_HEX_REGEX","hexStripPrefix","value","substr","test","Error"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,MAAMC,kBAAkB,GAAG,gBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD,GAFD,MAEO,IAAIH,YAAY,CAACG,KAAD,CAAhB,EAAyB;AAC9B,WAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,CAAP;AACD,GAFM,MAEA,IAAIH,kBAAkB,CAACI,IAAnB,CAAwBF,KAAxB,CAAJ,EAAoC;AACzC,WAAOA,KAAP;AACD;;AAED,QAAM,IAAIG,KAAJ,CAAW,eAAcH,KAAM,2BAA/B,CAAN;AACD","sourcesContent":["// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexHasPrefix } from \"./hasPrefix.js\";\nconst UNPREFIX_HEX_REGEX = /^[a-fA-F0-9]+$/;\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value) {\n    return '';\n  } else if (hexHasPrefix(value)) {\n    return value.substr(2);\n  } else if (UNPREFIX_HEX_REGEX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Invalid hex ${value} passed to hexStripPrefix`);\n}"]},"metadata":{},"sourceType":"module"}