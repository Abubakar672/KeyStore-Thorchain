{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { stringCamelCase } from '@polkadot/util';\nimport { getSiName } from \"../../util/index.js\";\nimport { createUnchecked } from \"./createUnchecked.js\";\n/** @internal */\n\nexport function decorateExtrinsics(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.filter(({\n    calls\n  }) => calls.isSome).reduce((result, {\n    calls,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionName = stringCamelCase(name);\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[sectionName] = lookup.getSiType(calls.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      const callMetadata = registry.createType('FunctionMetadataLatest', _objectSpread(_objectSpread({}, variant), {}, {\n        args: variant.fields.map(({\n          name,\n          type\n        }, index) => ({\n          name: stringCamelCase(name.unwrapOr(`param${index}`)),\n          type: getSiName(lookup, type)\n        }))\n      }));\n      newModule[stringCamelCase(callMetadata.name)] = createUnchecked(registry, sectionName, new Uint8Array([sectionIndex, callMetadata.index.toNumber()]), callMetadata);\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","stringCamelCase","getSiName","createUnchecked","decorateExtrinsics","registry","lookup","pallets","metaVersion","calls","isSome","reduce","result","index","name","_sectionIndex","sectionName","sectionIndex","toNumber","getSiType","unwrap","type","def","asVariant","variants","newModule","variant","callMetadata","createType","args","fields","map","unwrapOr","Uint8Array"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { getSiName } from \"../../util/index.js\";\nimport { createUnchecked } from \"./createUnchecked.js\";\n/** @internal */\n\nexport function decorateExtrinsics(registry, {\n  lookup,\n  pallets\n}, metaVersion) {\n  return pallets.filter(({\n    calls\n  }) => calls.isSome).reduce((result, {\n    calls,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionName = stringCamelCase(name);\n    const sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[sectionName] = lookup.getSiType(calls.unwrap().type).def.asVariant.variants.reduce((newModule, variant) => {\n      const callMetadata = registry.createType('FunctionMetadataLatest', _objectSpread(_objectSpread({}, variant), {}, {\n        args: variant.fields.map(({\n          name,\n          type\n        }, index) => ({\n          name: stringCamelCase(name.unwrapOr(`param${index}`)),\n          type: getSiName(lookup, type)\n        }))\n      }));\n      newModule[stringCamelCase(callMetadata.name)] = createUnchecked(registry, sectionName, new Uint8Array([sectionIndex, callMetadata.index.toNumber()]), callMetadata);\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}