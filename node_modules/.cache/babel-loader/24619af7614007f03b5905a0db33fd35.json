{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject, combineLatest, EMPTY, map, of, startWith, switchMap, tap, toArray } from 'rxjs';\nimport { arrayFlatten, isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nimport { extractContributed } from \"./util.js\";\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\n\nfunction _getUpdates(api, paraId) {\n  let added = [];\n  let removed = [];\n  return api.query.system.events().pipe(switchMap(events => {\n    const changes = extractContributed(paraId, events);\n\n    if (changes.added.length || changes.removed.length) {\n      var _events$createdAtHash;\n\n      added = added.concat(...changes.added);\n      removed = removed.concat(...changes.removed);\n      return of({\n        added,\n        addedDelta: changes.added,\n        blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',\n        removed,\n        removedDelta: changes.removed\n      });\n    }\n\n    return EMPTY;\n  }), startWith({\n    added,\n    addedDelta: [],\n    blockHash: '-',\n    removed,\n    removedDelta: []\n  }));\n}\n\nfunction _eventTriggerAll(api, paraId) {\n  return api.query.system.events().pipe(switchMap(events => {\n    var _events$createdAtHash2;\n\n    const items = events.filter(({\n      event: {\n        data: [eventParaId],\n        method,\n        section\n      }\n    }) => section === 'crowdloan' && ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) && eventParaId.eq(paraId));\n    return items.length ? of(((_events$createdAtHash2 = events.createdAtHash) === null || _events$createdAtHash2 === void 0 ? void 0 : _events$createdAtHash2.toHex()) || '-') : EMPTY;\n  }), startWith('-'));\n}\n\nfunction _getKeysPaged(api, childKey) {\n  const startSubject = new BehaviorSubject(undefined);\n  return startSubject.pipe(switchMap(startKey => api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey)), tap(keys => {\n    setTimeout(() => {\n      keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n    }, 0);\n  }), toArray(), // toArray since we want to startSubject to be completed\n  map(keyArr => arrayFlatten(keyArr)));\n}\n\nfunction _getAll(api, paraId, childKey) {\n  return _eventTriggerAll(api, paraId).pipe(switchMap(() => // FIXME Needs testing and being enabled\n  // eslint-disable-next-line no-constant-condition\n  isFunction(api.rpc.childstate.getKeysPaged) && false ? _getKeysPaged(api, childKey) : api.rpc.childstate.getKeys(childKey, '0x')), map(keys => keys.map(k => k.toHex())));\n}\n\nfunction _contributions(api, paraId, childKey) {\n  return combineLatest([_getAll(api, paraId, childKey), _getUpdates(api, paraId)]).pipe(map(([keys, {\n    added,\n    blockHash,\n    removed\n  }]) => {\n    const contributorsMap = {};\n    keys.forEach(k => {\n      contributorsMap[k] = true;\n    });\n    added.forEach(k => {\n      contributorsMap[k] = true;\n    });\n    removed.forEach(k => {\n      delete contributorsMap[k];\n    });\n    return {\n      blockHash,\n      contributorsHex: Object.keys(contributorsMap)\n    };\n  }));\n}\n\nexport function contributions(instanceId, api) {\n  return memo(instanceId, paraId => api.derive.crowdloan.childKey(paraId).pipe(switchMap(childKey => childKey ? _contributions(api, paraId, childKey) : of({\n    blockHash: '-',\n    contributorsHex: []\n  }))));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/crowdloan/contributions.js"],"names":["BehaviorSubject","combineLatest","EMPTY","map","of","startWith","switchMap","tap","toArray","arrayFlatten","isFunction","memo","extractContributed","PAGE_SIZE_K","_getUpdates","api","paraId","added","removed","query","system","events","pipe","changes","length","_events$createdAtHash","concat","addedDelta","blockHash","createdAtHash","toHex","removedDelta","_eventTriggerAll","_events$createdAtHash2","items","filter","event","data","eventParaId","method","section","includes","eq","_getKeysPaged","childKey","startSubject","undefined","startKey","rpc","childstate","getKeysPaged","keys","setTimeout","next","complete","keyArr","_getAll","getKeys","k","_contributions","contributorsMap","forEach","contributorsHex","Object","contributions","instanceId","derive","crowdloan"],"mappings":"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","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BehaviorSubject, combineLatest, EMPTY, map, of, startWith, switchMap, tap, toArray } from 'rxjs';\nimport { arrayFlatten, isFunction } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nimport { extractContributed } from \"./util.js\";\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\n\nfunction _getUpdates(api, paraId) {\n  let added = [];\n  let removed = [];\n  return api.query.system.events().pipe(switchMap(events => {\n    const changes = extractContributed(paraId, events);\n\n    if (changes.added.length || changes.removed.length) {\n      var _events$createdAtHash;\n\n      added = added.concat(...changes.added);\n      removed = removed.concat(...changes.removed);\n      return of({\n        added,\n        addedDelta: changes.added,\n        blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',\n        removed,\n        removedDelta: changes.removed\n      });\n    }\n\n    return EMPTY;\n  }), startWith({\n    added,\n    addedDelta: [],\n    blockHash: '-',\n    removed,\n    removedDelta: []\n  }));\n}\n\nfunction _eventTriggerAll(api, paraId) {\n  return api.query.system.events().pipe(switchMap(events => {\n    var _events$createdAtHash2;\n\n    const items = events.filter(({\n      event: {\n        data: [eventParaId],\n        method,\n        section\n      }\n    }) => section === 'crowdloan' && ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) && eventParaId.eq(paraId));\n    return items.length ? of(((_events$createdAtHash2 = events.createdAtHash) === null || _events$createdAtHash2 === void 0 ? void 0 : _events$createdAtHash2.toHex()) || '-') : EMPTY;\n  }), startWith('-'));\n}\n\nfunction _getKeysPaged(api, childKey) {\n  const startSubject = new BehaviorSubject(undefined);\n  return startSubject.pipe(switchMap(startKey => api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey)), tap(keys => {\n    setTimeout(() => {\n      keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n    }, 0);\n  }), toArray(), // toArray since we want to startSubject to be completed\n  map(keyArr => arrayFlatten(keyArr)));\n}\n\nfunction _getAll(api, paraId, childKey) {\n  return _eventTriggerAll(api, paraId).pipe(switchMap(() => // FIXME Needs testing and being enabled\n  // eslint-disable-next-line no-constant-condition\n  isFunction(api.rpc.childstate.getKeysPaged) && false ? _getKeysPaged(api, childKey) : api.rpc.childstate.getKeys(childKey, '0x')), map(keys => keys.map(k => k.toHex())));\n}\n\nfunction _contributions(api, paraId, childKey) {\n  return combineLatest([_getAll(api, paraId, childKey), _getUpdates(api, paraId)]).pipe(map(([keys, {\n    added,\n    blockHash,\n    removed\n  }]) => {\n    const contributorsMap = {};\n    keys.forEach(k => {\n      contributorsMap[k] = true;\n    });\n    added.forEach(k => {\n      contributorsMap[k] = true;\n    });\n    removed.forEach(k => {\n      delete contributorsMap[k];\n    });\n    return {\n      blockHash,\n      contributorsHex: Object.keys(contributorsMap)\n    };\n  }));\n}\n\nexport function contributions(instanceId, api) {\n  return memo(instanceId, paraId => api.derive.crowdloan.childKey(paraId).pipe(switchMap(childKey => childKey ? _contributions(api, paraId, childKey) : of({\n    blockHash: '-',\n    contributorsHex: []\n  }))));\n}"]},"metadata":{},"sourceType":"module"}