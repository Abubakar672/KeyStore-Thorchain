{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BncClient = exports.LedgerSigningDelegate = exports.DefaultBroadcastDelegate = exports.DefaultSigningDelegate = exports.NETWORK_PREFIX_MAPPING = exports.api = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _tx = _interopRequireDefault(require(\"../tx\"));\n\nvar _types = require(\"../types/\");\n\nvar _request = _interopRequireDefault(require(\"../utils/request\"));\n\nvar _validateHelper = require(\"../utils/validateHelper\");\n\nvar _gov = _interopRequireDefault(require(\"./gov\"));\n\nvar _swap = _interopRequireDefault(require(\"./swap\"));\n\nvar _token = _interopRequireWildcard(require(\"./token\"));\n\nvar _bridge = require(\"./bridge\");\n\nvar _stake = require(\"./stake\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar BASENUMBER = Math.pow(10, 8);\nvar api = {\n  broadcast: \"/api/v1/broadcast\",\n  nodeInfo: \"/api/v1/node-info\",\n  getAccount: \"/api/v1/account\",\n  getMarkets: \"/api/v1/markets\",\n  getSwaps: \"/api/v1/atomic-swaps\",\n  getOpenOrders: \"/api/v1/orders/open\",\n  getDepth: \"/api/v1/depth\",\n  getTransactions: \"/api/v1/transactions\",\n  getTxs: \"/bc/api/v1/txs\",\n  getTx: \"/api/v1/tx\"\n};\nexports.api = api;\nvar NETWORK_PREFIX_MAPPING = {\n  testnet: \"tbnb\",\n  mainnet: \"bnb\"\n};\nexports.NETWORK_PREFIX_MAPPING = NETWORK_PREFIX_MAPPING;\n/**\n * The default signing delegate which uses the local private key.\n * @param  {Transaction} tx      the transaction\n * @param  {Object}      signMsg the canonical sign bytes for the msg\n * @return {Transaction}\n */\n\nvar DefaultSigningDelegate = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(tx, signMsg) {\n    var privateKey;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            privateKey = this.getPrivateKey();\n\n            if (privateKey) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(\"Private key has to be set before signing a transaction\"));\n\n          case 3:\n            return _context.abrupt(\"return\", tx.sign(privateKey, signMsg));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function DefaultSigningDelegate(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * The default broadcast delegate which immediately broadcasts a transaction.\n * @param {Transaction} signedTx the signed transaction\n */\n\n\nexports.DefaultSigningDelegate = DefaultSigningDelegate;\n\nvar DefaultBroadcastDelegate = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(signedTx) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", this.sendTransaction(signedTx, true));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function DefaultBroadcastDelegate(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * The Ledger signing delegate.\n * @param  {LedgerApp}  ledgerApp\n * @param  {preSignCb}  function\n * @param  {postSignCb} function\n * @param  {errCb} function\n * @return {function}\n */\n\n\nexports.DefaultBroadcastDelegate = DefaultBroadcastDelegate;\n\nvar LedgerSigningDelegate = function LedgerSigningDelegate(ledgerApp, preSignCb, postSignCb, errCb, hdPath) {\n  return /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(tx, signMsg) {\n      var signBytes, pubKeyResp, sigResp, pubKey;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              signBytes = tx.getSignBytes(signMsg);\n              preSignCb && preSignCb(signBytes);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return ledgerApp.getPublicKey(hdPath);\n\n            case 5:\n              pubKeyResp = _context3.sent;\n              _context3.next = 8;\n              return ledgerApp.sign(signBytes, hdPath);\n\n            case 8:\n              sigResp = _context3.sent;\n              postSignCb && postSignCb(pubKeyResp, sigResp);\n              _context3.next = 16;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.warn(\"LedgerSigningDelegate error\", _context3.t0);\n              errCb && errCb(_context3.t0);\n\n            case 16:\n              if (!(sigResp && sigResp.signature)) {\n                _context3.next = 19;\n                break;\n              }\n\n              pubKey = crypto.getPublicKey(pubKeyResp.pk.toString(\"hex\"));\n              return _context3.abrupt(\"return\", tx.addSignature(pubKey, sigResp.signature));\n\n            case 19:\n              return _context3.abrupt(\"return\", tx);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 12]]);\n    }));\n\n    return function (_x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n/**\n * validate the input number.\n * @param {Array} outputs\n */\n\n\nexports.LedgerSigningDelegate = LedgerSigningDelegate;\n\nvar checkOutputs = function checkOutputs(outputs) {\n  outputs.forEach(function (transfer) {\n    var coins = transfer.coins || [];\n    coins.forEach(function (coin) {\n      (0, _validateHelper.checkNumber)(coin.amount);\n\n      if (!coin.denom) {\n        throw new Error(\"invalid denmon\");\n      }\n    });\n  });\n};\n/**\n * sum corresponding input coin\n * @param {Array} inputs\n * @param {Array} coins\n */\n\n\nvar calInputCoins = function calInputCoins(inputs, coins) {\n  coins.forEach(function (coin) {\n    var existCoin = inputs[0].coins.find(function (c) {\n      return c.denom === coin.denom;\n    });\n\n    if (existCoin) {\n      var existAmount = new _big[\"default\"](existCoin.amount);\n      existCoin.amount = Number(existAmount.plus(coin.amount).toString());\n    } else {\n      inputs[0].coins.push(_objectSpread({}, coin));\n    }\n  });\n};\n/**\n * The Binance Chain client.\n */\n\n\nvar BncClient = /*#__PURE__*/function () {\n  /**\n   * @param {String} server Binance Chain public url\n   * @param {Boolean} useAsyncBroadcast use async broadcast mode, faster but less guarantees (default off)\n   * @param {Number} source where does this transaction come from (default 0)\n   */\n  function BncClient(server) {\n    var useAsyncBroadcast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    (0, _classCallCheck2[\"default\"])(this, BncClient);\n    (0, _defineProperty2[\"default\"])(this, \"_httpClient\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_signingDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_broadcastDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_useAsyncBroadcast\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"tokens\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"swap\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"gov\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"bridge\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"stake\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"addressPrefix\", \"tbnb\");\n    (0, _defineProperty2[\"default\"])(this, \"network\", \"testnet\");\n    (0, _defineProperty2[\"default\"])(this, \"address\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_setPkPromise\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"account_number\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_privateKey\", null);\n\n    if (!server) {\n      throw new Error(\"Binance chain server should not be null\");\n    }\n\n    this._httpClient = new _request[\"default\"](server);\n    this._signingDelegate = DefaultSigningDelegate;\n    this._broadcastDelegate = DefaultBroadcastDelegate;\n    this._useAsyncBroadcast = useAsyncBroadcast;\n    this._source = source;\n    this.tokens = new _token[\"default\"](this);\n    this.swap = new _swap[\"default\"](this);\n    this.gov = new _gov[\"default\"](this);\n    this.bridge = new _bridge.Bridge(this);\n    this.stake = new _stake.Stake(this);\n  }\n  /**\n   * Initialize the client with the chain's ID. Asynchronous.\n   * @return {Promise}\n   */\n\n\n  (0, _createClass2[\"default\"])(BncClient, [{\n    key: \"initChain\",\n    value: function () {\n      var _initChain = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.chainId) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this._httpClient.request(\"get\", api.nodeInfo);\n\n              case 3:\n                data = _context4.sent;\n                this.chainId = data.result.node_info && data.result.node_info.network;\n\n              case 5:\n                return _context4.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function initChain() {\n        return _initChain.apply(this, arguments);\n      }\n\n      return initChain;\n    }()\n    /**\n     * Sets the client network (testnet or mainnet).\n     * @param {String} network Indicate testnet or mainnet\n     */\n\n  }, {\n    key: \"chooseNetwork\",\n    value: function chooseNetwork(network) {\n      this.addressPrefix = NETWORK_PREFIX_MAPPING[network] || \"tbnb\";\n      this.network = NETWORK_PREFIX_MAPPING[network] ? network : \"testnet\";\n    }\n    /**\n     * Sets the client's private key for calls made by this client. Asynchronous.\n     * @param {string} privateKey the private key hexstring\n     * @param {boolean} localOnly set this to true if you will supply an account_number yourself via `setAccountNumber`. Warning: You must do that if you set this to true!\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"setPrivateKey\",\n    value: function () {\n      var _setPrivateKey = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(privateKey) {\n        var localOnly,\n            address,\n            promise,\n            data,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                localOnly = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : false;\n\n                if (!(privateKey !== this._privateKey)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n\n                if (address) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw new Error(\"address is falsy: \".concat(address, \". invalid private key?\"));\n\n              case 5:\n                this._privateKey = privateKey;\n                this.address = address;\n\n                if (localOnly) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                _context5.prev = 8;\n                promise = this._setPkPromise = this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n                _context5.next = 12;\n                return promise;\n\n              case 12:\n                data = _context5.sent;\n                this.account_number = data.result.account_number;\n                _context5.next = 19;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](8);\n                throw new Error(\"unable to query the address on the blockchain. try sending it some funds first: \".concat(address));\n\n              case 19:\n                return _context5.abrupt(\"return\", this);\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[8, 16]]);\n      }));\n\n      function setPrivateKey(_x8) {\n        return _setPrivateKey.apply(this, arguments);\n      }\n\n      return setPrivateKey;\n    }()\n    /**\n     * Removes client's private key.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"removePrivateKey\",\n    value: function removePrivateKey() {\n      this._privateKey = null;\n      return this;\n    }\n    /**\n     * Gets client's private key.\n     * @return {string|null} the private key hexstring or `null` if no private key has been set\n     */\n\n  }, {\n    key: \"getPrivateKey\",\n    value: function getPrivateKey() {\n      return this._privateKey;\n    }\n    /**\n     * Sets the client's account number.\n     * @param {number} accountNumber\n     */\n\n  }, {\n    key: \"setAccountNumber\",\n    value: function setAccountNumber(accountNumber) {\n      this.account_number = accountNumber;\n    }\n    /**\n     * Use async broadcast mode. Broadcasts faster with less guarantees (default off)\n     * @param {Boolean} useAsyncBroadcast\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useAsyncBroadcast\",\n    value: function useAsyncBroadcast() {\n      var _useAsyncBroadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._useAsyncBroadcast = _useAsyncBroadcast;\n      return this;\n    }\n    /**\n     * Sets the signing delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setSigningDelegate\",\n    value: function setSigningDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"signing delegate must be a function\");\n      this._signingDelegate = delegate;\n      return this;\n    }\n    /**\n     * Sets the broadcast delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setBroadcastDelegate\",\n    value: function setBroadcastDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"broadcast delegate must be a function\");\n      this._broadcastDelegate = delegate;\n      return this;\n    }\n    /**\n     * Applies the default signing delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultSigningDelegate\",\n    value: function useDefaultSigningDelegate() {\n      this._signingDelegate = DefaultSigningDelegate;\n      return this;\n    }\n    /**\n     * Applies the default broadcast delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultBroadcastDelegate\",\n    value: function useDefaultBroadcastDelegate() {\n      this._broadcastDelegate = DefaultBroadcastDelegate;\n      return this;\n    }\n    /**\n     * Applies the Ledger signing delegate.\n     * @param {function} ledgerApp\n     * @param {function} preSignCb\n     * @param {function} postSignCb\n     * @param {function} errCb\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useLedgerSigningDelegate\",\n    value: function useLedgerSigningDelegate() {\n      this._signingDelegate = LedgerSigningDelegate.apply(void 0, arguments);\n      return this;\n    }\n    /**\n     * Transfer tokens from one address to another.\n     * @param {String} fromAddress\n     * @param {String} toAddress\n     * @param {Number} amount\n     * @param {String} asset\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(fromAddress, toAddress, amount, asset) {\n        var memo,\n            sequence,\n            accCode,\n            toAccCode,\n            coin,\n            msg,\n            signMsg,\n            signedTx,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                memo = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : \"\";\n                sequence = _args6.length > 5 && _args6[5] !== undefined ? _args6[5] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                toAccCode = crypto.decodeAddress(toAddress);\n                amount = new _big[\"default\"](amount);\n                amount = Number(amount.mul(BASENUMBER).toString());\n                (0, _validateHelper.checkNumber)(amount, \"amount\");\n                coin = {\n                  denom: asset,\n                  amount: amount\n                };\n                msg = {\n                  inputs: [{\n                    address: accCode,\n                    coins: [coin]\n                  }],\n                  outputs: [{\n                    address: toAccCode,\n                    coins: [coin]\n                  }],\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signMsg = {\n                  inputs: [{\n                    address: fromAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }],\n                  outputs: [{\n                    address: toAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }]\n                };\n                _context6.next = 12;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 12:\n                signedTx = _context6.sent;\n                return _context6.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function transfer(_x9, _x10, _x11, _x12) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Create and sign a multi send tx\n     * @param {String} fromAddress\n     * @param {Array} outputs\n     * @example\n     * const outputs = [\n     * {\n     *   \"to\": \"tbnb1p4kpnj5qz5spsaf0d2555h6ctngse0me5q57qe\",\n     *   \"coins\": [{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   }]\n     * },\n     * {\n     *   \"to\": \"tbnb1scjj8chhhp7lngdeflltzex22yaf9ep59ls4gk\",\n     *   \"coins\": [{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   }]\n     * }]\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"multiSend\",\n    value: function () {\n      var _multiSend = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(fromAddress, outputs) {\n        var memo,\n            sequence,\n            fromAddrCode,\n            inputs,\n            transfers,\n            msg,\n            signInputs,\n            signOutputs,\n            signMsg,\n            signedTx,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                memo = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : \"\";\n                sequence = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : null;\n\n                if (fromAddress) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error(\"fromAddress should not be falsy\");\n\n              case 4:\n                if (Array.isArray(outputs)) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error(\"outputs should be array\");\n\n              case 6:\n                checkOutputs(outputs); //sort denom by alphbet and init amount\n\n                outputs.forEach(function (item) {\n                  item.coins = item.coins.sort(function (a, b) {\n                    return a.denom.localeCompare(b.denom);\n                  });\n                  item.coins.forEach(function (coin) {\n                    var amount = new _big[\"default\"](coin.amount);\n                    coin.amount = Number(amount.mul(BASENUMBER).toString());\n                  });\n                });\n                fromAddrCode = crypto.decodeAddress(fromAddress);\n                inputs = [{\n                  address: fromAddrCode,\n                  coins: []\n                }];\n                transfers = [];\n                outputs.forEach(function (item) {\n                  var toAddcCode = crypto.decodeAddress(item.to);\n                  calInputCoins(inputs, item.coins);\n                  transfers.push({\n                    address: toAddcCode,\n                    coins: item.coins\n                  });\n                });\n                msg = {\n                  inputs: inputs,\n                  outputs: transfers,\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signInputs = [{\n                  address: fromAddress,\n                  coins: []\n                }];\n                signOutputs = [];\n                outputs.forEach(function (item, index) {\n                  signOutputs.push({\n                    address: item.to,\n                    coins: []\n                  });\n                  item.coins.forEach(function (c) {\n                    signOutputs[index].coins.push(c);\n                  });\n                  calInputCoins(signInputs, item.coins);\n                });\n                signMsg = {\n                  inputs: signInputs,\n                  outputs: signOutputs\n                };\n                _context7.next = 19;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 19:\n                signedTx = _context7.sent;\n                return _context7.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 21:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function multiSend(_x13, _x14) {\n        return _multiSend.apply(this, arguments);\n      }\n\n      return multiSend;\n    }()\n    /**\n     * Cancel an order.\n     * @param {String} fromAddress\n     * @param {String} symbol the market pair\n     * @param {String} refid the order ID of the order to cancel\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"cancelOrder\",\n    value: function () {\n      var _cancelOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(fromAddress, symbol, refid) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sequence = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                msg = {\n                  sender: accCode,\n                  symbol: symbol,\n                  refid: refid,\n                  aminoPrefix: _types.AminoPrefix.CancelOrderMsg\n                };\n                signMsg = {\n                  refid: refid,\n                  sender: fromAddress,\n                  symbol: symbol\n                };\n                _context8.next = 6;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, \"\");\n\n              case 6:\n                signedTx = _context8.sent;\n                return _context8.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function cancelOrder(_x15, _x16, _x17) {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }()\n    /**\n     * Place an order.\n     * @param {String} address\n     * @param {String} symbol the market pair\n     * @param {Number} side (1-Buy, 2-Sell)\n     * @param {Number} price\n     * @param {Number} quantity\n     * @param {Number} sequence optional sequence\n     * @param {Number} timeinforce (1-GTC(Good Till Expire), 3-IOC(Immediate or Cancel))\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"placeOrder\",\n    value: function () {\n      var _placeOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9() {\n        var address,\n            symbol,\n            side,\n            price,\n            quantity,\n            sequence,\n            timeinforce,\n            accCode,\n            data,\n            bigPrice,\n            bigQuantity,\n            placeOrderMsg,\n            signMsg,\n            signedTx,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                address = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : this.address;\n                symbol = _args9.length > 1 ? _args9[1] : undefined;\n                side = _args9.length > 2 ? _args9[2] : undefined;\n                price = _args9.length > 3 ? _args9[3] : undefined;\n                quantity = _args9.length > 4 ? _args9[4] : undefined;\n                sequence = _args9.length > 5 && _args9[5] !== undefined ? _args9[5] : null;\n                timeinforce = _args9.length > 6 && _args9[6] !== undefined ? _args9[6] : 1;\n\n                if (address) {\n                  _context9.next = 9;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 9:\n                if (symbol) {\n                  _context9.next = 11;\n                  break;\n                }\n\n                throw new Error(\"symbol should not be falsy\");\n\n              case 11:\n                if (!(side !== 1 && side !== 2)) {\n                  _context9.next = 13;\n                  break;\n                }\n\n                throw new Error(\"side can only be 1 or 2\");\n\n              case 13:\n                if (!(timeinforce !== 1 && timeinforce !== 3)) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                throw new Error(\"timeinforce can only be 1 or 3\");\n\n              case 15:\n                accCode = crypto.decodeAddress(address);\n\n                if (!(sequence !== 0 && !sequence)) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                _context9.next = 19;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 19:\n                data = _context9.sent;\n                sequence = data.result && data.result.sequence;\n\n              case 21:\n                bigPrice = new _big[\"default\"](price);\n                bigQuantity = new _big[\"default\"](quantity);\n                placeOrderMsg = {\n                  sender: accCode,\n                  id: \"\".concat(accCode.toString(\"hex\"), \"-\").concat(sequence + 1).toUpperCase(),\n                  symbol: symbol,\n                  ordertype: 2,\n                  side: side,\n                  price: parseFloat(bigPrice.mul(BASENUMBER).toString()),\n                  quantity: parseFloat(bigQuantity.mul(BASENUMBER).toString()),\n                  timeinforce: timeinforce,\n                  aminoPrefix: _types.AminoPrefix.NewOrderMsg\n                };\n                signMsg = {\n                  id: placeOrderMsg.id,\n                  ordertype: placeOrderMsg.ordertype,\n                  price: placeOrderMsg.price,\n                  quantity: placeOrderMsg.quantity,\n                  sender: address,\n                  side: placeOrderMsg.side,\n                  symbol: placeOrderMsg.symbol,\n                  timeinforce: timeinforce\n                };\n                (0, _validateHelper.checkNumber)(placeOrderMsg.price, \"price\");\n                (0, _validateHelper.checkNumber)(placeOrderMsg.quantity, \"quantity\");\n                _context9.next = 29;\n                return this._prepareTransaction(placeOrderMsg, signMsg, address, sequence, \"\");\n\n              case 29:\n                signedTx = _context9.sent;\n                return _context9.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 31:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function placeOrder() {\n        return _placeOrder.apply(this, arguments);\n      }\n\n      return placeOrder;\n    }()\n    /**\n     * @param {String} address\n     * @param {Number} proposalId\n     * @param {String} baseAsset\n     * @param {String} quoteAsset\n     * @param {Number} initPrice\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(address, proposalId, baseAsset, quoteAsset, initPrice) {\n        var sequence,\n            accCode,\n            init_price,\n            listMsg,\n            signMsg,\n            signedTx,\n            _args10 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                sequence = _args10.length > 5 && _args10[5] !== undefined ? _args10[5] : null;\n                accCode = crypto.decodeAddress(address);\n\n                if (address) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 4:\n                if (!(proposalId <= 0)) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                throw new Error(\"proposal id should larger than 0\");\n\n              case 6:\n                if (!(initPrice <= 0)) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 8:\n                if (baseAsset) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                throw new Error(\"baseAsset should not be falsy\");\n\n              case 10:\n                if (quoteAsset) {\n                  _context10.next = 12;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 12:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMsg = {\n                  from: accCode,\n                  proposal_id: proposalId,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price,\n                  aminoPrefix: _types.AminoPrefix.ListMsg\n                };\n                signMsg = {\n                  base_asset_symbol: baseAsset,\n                  from: address,\n                  init_price: init_price,\n                  proposal_id: proposalId,\n                  quote_asset_symbol: quoteAsset\n                };\n                _context10.next = 17;\n                return this._prepareTransaction(listMsg, signMsg, address, sequence, \"\");\n\n              case 17:\n                signedTx = _context10.sent;\n                return _context10.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 19:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function list(_x18, _x19, _x20, _x21, _x22) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n    /**\n     * list miniToken\n     */\n\n  }, {\n    key: \"listMiniToken\",\n    value: function () {\n      var _listMiniToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(_ref4) {\n        var from, baseAsset, quoteAsset, initPrice, _ref4$sequence, sequence, init_price, listMiniMsg, signedTx;\n\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                from = _ref4.from, baseAsset = _ref4.baseAsset, quoteAsset = _ref4.quoteAsset, initPrice = _ref4.initPrice, _ref4$sequence = _ref4.sequence, sequence = _ref4$sequence === void 0 ? null : _ref4$sequence;\n                (0, _token.validateMiniTokenSymbol)(baseAsset);\n\n                if (!(initPrice <= 0)) {\n                  _context11.next = 4;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 4:\n                if (from) {\n                  _context11.next = 6;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 6:\n                if (quoteAsset) {\n                  _context11.next = 8;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 8:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMiniMsg = new _types.ListMiniMsg({\n                  from: from,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price\n                });\n                _context11.next = 12;\n                return this._prepareTransaction(listMiniMsg.getMsg(), listMiniMsg.getSignMsg(), from, sequence);\n\n              case 12:\n                signedTx = _context11.sent;\n                return _context11.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function listMiniToken(_x23) {\n        return _listMiniToken.apply(this, arguments);\n      }\n\n      return listMiniToken;\n    }()\n    /**\n     * Set account flags\n     * @param {String} address\n     * @param {Number} flags new value of account flags\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"setAccountFlags\",\n    value: function () {\n      var _setAccountFlags = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(address, flags) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args12 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                sequence = _args12.length > 2 && _args12[2] !== undefined ? _args12[2] : null;\n                accCode = crypto.decodeAddress(address);\n                msg = {\n                  from: accCode,\n                  flags: flags,\n                  aminoPrefix: _types.AminoPrefix.SetAccountFlagsMsg\n                };\n                signMsg = {\n                  flags: flags,\n                  from: address\n                };\n                _context12.next = 6;\n                return this._prepareTransaction(msg, signMsg, address, sequence, \"\");\n\n              case 6:\n                signedTx = _context12.sent;\n                return _context12.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setAccountFlags(_x24, _x25) {\n        return _setAccountFlags.apply(this, arguments);\n      }\n\n      return setAccountFlags;\n    }()\n    /**\n     * Prepare a serialized raw transaction for sending to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @return {Transaction} signed transaction\n     */\n\n  }, {\n    key: \"_prepareTransaction\",\n    value: function () {\n      var _prepareTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            data,\n            tx,\n            _args13 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                sequence = _args13.length > 3 && _args13[3] !== undefined ? _args13[3] : null;\n                memo = _args13.length > 4 && _args13[4] !== undefined ? _args13[4] : \"\";\n\n                if (!((!this.account_number || sequence !== 0 && !sequence) && address)) {\n                  _context13.next = 10;\n                  break;\n                }\n\n                _context13.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 5:\n                data = _context13.sent;\n                sequence = data.result.sequence;\n                this.account_number = data.result.account_number; // if user has not used `await` in its call to setPrivateKey (old API), we should wait for the promise here\n\n                _context13.next = 13;\n                break;\n\n              case 10:\n                if (!this._setPkPromise) {\n                  _context13.next = 13;\n                  break;\n                }\n\n                _context13.next = 13;\n                return this._setPkPromise;\n\n              case 13:\n                tx = new _tx[\"default\"]({\n                  accountNumber: typeof this.account_number !== \"number\" ? parseInt(this.account_number) : this.account_number,\n                  chainId: this.chainId,\n                  memo: memo,\n                  msg: msg,\n                  sequence: typeof sequence !== \"number\" ? parseInt(sequence) : sequence,\n                  source: this._source\n                });\n                return _context13.abrupt(\"return\", this._signingDelegate.call(this, tx, stdSignMsg));\n\n              case 15:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _prepareTransaction(_x26, _x27, _x28) {\n        return _prepareTransaction2.apply(this, arguments);\n      }\n\n      return _prepareTransaction;\n    }()\n    /**\n     * Broadcast a transaction to the blockchain.\n     * @param {signedTx} tx signed Transaction object\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(signedTx, sync) {\n        var signedBz;\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                signedBz = signedTx.serialize();\n                return _context14.abrupt(\"return\", this.sendRawTransaction(signedBz, sync));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function sendTransaction(_x29, _x30) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {String} signedBz signed and serialized raw transaction\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendRawTransaction\",\n    value: function () {\n      var _sendRawTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(signedBz) {\n        var sync,\n            opts,\n            _args15 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                sync = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : !this._useAsyncBroadcast;\n                opts = {\n                  data: signedBz,\n                  headers: {\n                    \"content-type\": \"text/plain\"\n                  }\n                };\n                return _context15.abrupt(\"return\", this._httpClient.request(\"post\", \"\".concat(api.broadcast, \"?sync=\").concat(sync), null, opts));\n\n              case 3:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function sendRawTransaction(_x31) {\n        return _sendRawTransaction.apply(this, arguments);\n      }\n\n      return sendRawTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            sync,\n            signedTx,\n            _args16 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                sequence = _args16.length > 3 && _args16[3] !== undefined ? _args16[3] : null;\n                memo = _args16.length > 4 && _args16[4] !== undefined ? _args16[4] : \"\";\n                sync = _args16.length > 5 && _args16[5] !== undefined ? _args16[5] : !this._useAsyncBroadcast;\n                _context16.next = 5;\n                return this._prepareTransaction(msg, stdSignMsg, address, sequence, memo);\n\n              case 5:\n                signedTx = _context16.sent;\n                return _context16.abrupt(\"return\", this.sendTransaction(signedTx, sync));\n\n              case 7:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _sendTransaction(_x32, _x33, _x34) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n\n      return _sendTransaction;\n    }()\n    /**\n     * get account\n     * @param {String} address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n        var address,\n            data,\n            _args17 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                address = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : this.address;\n\n                if (address) {\n                  _context17.next = 3;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 3:\n                _context17.prev = 3;\n                _context17.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 6:\n                data = _context17.sent;\n                return _context17.abrupt(\"return\", data);\n\n              case 10:\n                _context17.prev = 10;\n                _context17.t0 = _context17[\"catch\"](3);\n                return _context17.abrupt(\"return\", null);\n\n              case 13:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[3, 10]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n    /**\n     * get balances\n     * @param {String} address optional address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18() {\n        var address,\n            data,\n            _args18 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                address = _args18.length > 0 && _args18[0] !== undefined ? _args18[0] : this.address;\n                _context18.prev = 1;\n                _context18.next = 4;\n                return this.getAccount(address);\n\n              case 4:\n                data = _context18.sent;\n                return _context18.abrupt(\"return\", data.result.balances);\n\n              case 8:\n                _context18.prev = 8;\n                _context18.t0 = _context18[\"catch\"](1);\n                return _context18.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[1, 8]]);\n      }));\n\n      function getBalance() {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n    /**\n     * get markets\n     * @param {Number} limit max 1000 is default\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getMarkets\",\n    value: function () {\n      var _getMarkets = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19() {\n        var limit,\n            offset,\n            data,\n            _args19 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                limit = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : 1000;\n                offset = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : 0;\n                _context19.prev = 2;\n                _context19.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getMarkets, \"?limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context19.sent;\n                return _context19.abrupt(\"return\", data);\n\n              case 9:\n                _context19.prev = 9;\n                _context19.t0 = _context19[\"catch\"](2);\n                console.warn(\"getMarkets error\", _context19.t0);\n                return _context19.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[2, 9]]);\n      }));\n\n      function getMarkets() {\n        return _getMarkets.apply(this, arguments);\n      }\n\n      return getMarkets;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     * @deprecated please use getTxs instead.\n     */\n\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee20() {\n        var address,\n            offset,\n            data,\n            _args20 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                address = _args20.length > 0 && _args20[0] !== undefined ? _args20[0] : this.address;\n                offset = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : 0;\n                _context20.prev = 2;\n                _context20.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTransactions, \"?address=\").concat(address, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context20.sent;\n                return _context20.abrupt(\"return\", data);\n\n              case 9:\n                _context20.prev = 9;\n                _context20.t0 = _context20[\"catch\"](2);\n                console.warn(\"getTransactions error\", _context20.t0);\n                return _context20.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[2, 9]]);\n      }));\n\n      function getTransactions() {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} startTime start time in milliseconds\n     * @param {Number} endTime end time in in milliseconds, endTime - startTime should be smaller than 7 days\n     * @return {Promise} resolves with http response ([more details](https://docs.binance.org/api-reference/dex-api/block-service.html#apiv1txs))\n     * ```js\n     * // Example:\n     * const client = new BncClient('https://testnet-api.binance.org')\n     * client.getTxs(...);\n     * ```\n     */\n\n  }, {\n    key: \"getTxs\",\n    value: function () {\n      var _getTxs = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee21() {\n        var address,\n            startTime,\n            endTime,\n            data,\n            _args21 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                address = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : this.address;\n                startTime = _args21.length > 1 ? _args21[1] : undefined;\n                endTime = _args21.length > 2 ? _args21[2] : undefined;\n                _context21.prev = 3;\n                _context21.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTxs, \"?address=\").concat(address, \"&startTime=\").concat(startTime, \"&endTime=\").concat(endTime));\n\n              case 6:\n                data = _context21.sent;\n                return _context21.abrupt(\"return\", data);\n\n              case 10:\n                _context21.prev = 10;\n                _context21.t0 = _context21[\"catch\"](3);\n                console.warn(\"getTxs error\", _context21.t0);\n                return _context21.abrupt(\"return\", []);\n\n              case 14:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[3, 10]]);\n      }));\n\n      function getTxs() {\n        return _getTxs.apply(this, arguments);\n      }\n\n      return getTxs;\n    }()\n    /**\n     * get transaction\n     * @param {String} hash the transaction hash\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee22(hash) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.prev = 0;\n                _context22.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTx, \"/\").concat(hash));\n\n              case 3:\n                data = _context22.sent;\n                return _context22.abrupt(\"return\", data);\n\n              case 7:\n                _context22.prev = 7;\n                _context22.t0 = _context22[\"catch\"](0);\n                console.warn(\"getTx error\", _context22.t0);\n                return _context22.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[0, 7]]);\n      }));\n\n      function getTx(_x35) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n    /**\n     * get depth for a given market\n     * @param {String} symbol the market pair\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getDepth\",\n    value: function () {\n      var _getDepth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee23() {\n        var symbol,\n            data,\n            _args23 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                symbol = _args23.length > 0 && _args23[0] !== undefined ? _args23[0] : \"BNB_BUSD-BD1\";\n                _context23.prev = 1;\n                _context23.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getDepth, \"?symbol=\").concat(symbol));\n\n              case 4:\n                data = _context23.sent;\n                return _context23.abrupt(\"return\", data);\n\n              case 8:\n                _context23.prev = 8;\n                _context23.t0 = _context23[\"catch\"](1);\n                console.warn(\"getDepth error\", _context23.t0);\n                return _context23.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[1, 8]]);\n      }));\n\n      function getDepth() {\n        return _getDepth.apply(this, arguments);\n      }\n\n      return getDepth;\n    }()\n    /**\n     * get open orders for an address\n     * @param {String} address binance address\n     * @param {String} symbol binance BEP2 symbol\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getOpenOrders\",\n    value: function () {\n      var _getOpenOrders = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee24() {\n        var address,\n            data,\n            _args24 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                address = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : this.address;\n                _context24.prev = 1;\n                _context24.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getOpenOrders, \"?address=\").concat(address));\n\n              case 4:\n                data = _context24.sent;\n                return _context24.abrupt(\"return\", data);\n\n              case 8:\n                _context24.prev = 8;\n                _context24.t0 = _context24[\"catch\"](1);\n                console.warn(\"getOpenOrders error\", _context24.t0);\n                return _context24.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[1, 8]]);\n      }));\n\n      function getOpenOrders() {\n        return _getOpenOrders.apply(this, arguments);\n      }\n\n      return getOpenOrders;\n    }()\n    /**\n     * get atomic swap\n     * @param {String} swapID: ID of an existing swap\n     * @return {Promise} AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByID\",\n    value: function () {\n      var _getSwapByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee25(swapID) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.prev = 0;\n                _context25.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"/\").concat(swapID));\n\n              case 3:\n                data = _context25.sent;\n                return _context25.abrupt(\"return\", data);\n\n              case 7:\n                _context25.prev = 7;\n                _context25.t0 = _context25[\"catch\"](0);\n                console.warn(\"query swap by swapID error\", _context25.t0);\n                return _context25.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[0, 7]]);\n      }));\n\n      function getSwapByID(_x36) {\n        return _getSwapByID.apply(this, arguments);\n      }\n\n      return getSwapByID;\n    }()\n    /**\n     * query atomic swap list by creator address\n     * @param {String} creator: swap creator address\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByCreator\",\n    value: function () {\n      var _getSwapByCreator = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee26(creator) {\n        var limit,\n            offset,\n            data,\n            _args26 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                limit = _args26.length > 1 && _args26[1] !== undefined ? _args26[1] : 100;\n                offset = _args26.length > 2 && _args26[2] !== undefined ? _args26[2] : 0;\n                _context26.prev = 2;\n                _context26.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?fromAddress=\").concat(creator, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context26.sent;\n                return _context26.abrupt(\"return\", data);\n\n              case 9:\n                _context26.prev = 9;\n                _context26.t0 = _context26[\"catch\"](2);\n                console.warn(\"query swap list by swap creator error\", _context26.t0);\n                return _context26.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this, [[2, 9]]);\n      }));\n\n      function getSwapByCreator(_x37) {\n        return _getSwapByCreator.apply(this, arguments);\n      }\n\n      return getSwapByCreator;\n    }()\n    /**\n     * query atomic swap list by recipient address\n     * @param {String} recipient: the recipient address of the swap\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByRecipient\",\n    value: function () {\n      var _getSwapByRecipient = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee27(recipient) {\n        var limit,\n            offset,\n            data,\n            _args27 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                limit = _args27.length > 1 && _args27[1] !== undefined ? _args27[1] : 100;\n                offset = _args27.length > 2 && _args27[2] !== undefined ? _args27[2] : 0;\n                _context27.prev = 2;\n                _context27.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?toAddress=\").concat(recipient, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context27.sent;\n                return _context27.abrupt(\"return\", data);\n\n              case 9:\n                _context27.prev = 9;\n                _context27.t0 = _context27[\"catch\"](2);\n                console.warn(\"query swap list by swap recipient error\", _context27.t0);\n                return _context27.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this, [[2, 9]]);\n      }));\n\n      function getSwapByRecipient(_x38) {\n        return _getSwapByRecipient.apply(this, arguments);\n      }\n\n      return getSwapByRecipient;\n    }()\n    /**\n     * Creates a private key and returns it and its address.\n     * @return {object} the private key and address in an object.\n     * {\n     *  address,\n     *  privateKey\n     * }\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount() {\n      var privateKey = crypto.generatePrivateKey();\n      return {\n        privateKey: privateKey,\n        address: crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix)\n      };\n    }\n    /**\n     * Creates an account keystore object, and returns the private key and address.\n     * @param {String} password\n     *  {\n     *  privateKey,\n     *  address,\n     *  keystore\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithKeystore\",\n    value: function createAccountWithKeystore(password) {\n      if (!password) {\n        throw new Error(\"password should not be falsy\");\n      }\n\n      var privateKey = crypto.generatePrivateKey();\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      var keystore = crypto.generateKeyStore(privateKey, password);\n      return {\n        privateKey: privateKey,\n        address: address,\n        keystore: keystore\n      };\n    }\n    /**\n     * Creates an account from mnemonic seed phrase.\n     * @return {object}\n     * {\n     *  privateKey,\n     *  address,\n     *  mnemonic\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithMneomnic\",\n    value: function createAccountWithMneomnic() {\n      var mnemonic = crypto.generateMnemonic();\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address,\n        mnemonic: mnemonic\n      };\n    }\n    /**\n     * Recovers an account from a keystore object.\n     * @param {object} keystore object.\n     * @param {string} password password.\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromKeystore\",\n    value: function recoverAccountFromKeystore(keystore, password) {\n      var privateKey = crypto.getPrivateKeyFromKeyStore(keystore, password);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Recovers an account from a mnemonic seed phrase.\n     * @param {string} mneomnic\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromMnemonic\",\n    value: function recoverAccountFromMnemonic(mnemonic) {\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    } // support an old method name containing a typo\n\n  }, {\n    key: \"recoverAccountFromMneomnic\",\n    value: function recoverAccountFromMneomnic(mnemonic) {\n      return this.recoverAccountFromMnemonic(mnemonic);\n    }\n    /**\n     * Recovers an account using private key.\n     * @param {String} privateKey\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromPrivateKey\",\n    value: function recoverAccountFromPrivateKey(privateKey) {\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Validates an address.\n     * @param {String} address\n     * @param {String} prefix\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"checkAddress\",\n    value: function checkAddress(address) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.addressPrefix;\n      return crypto.checkAddress(address, prefix);\n    }\n    /**\n     * Returns the address for the current account if setPrivateKey has been called on this client.\n     * @return {String}\n     */\n\n  }, {\n    key: \"getClientKeyAddress\",\n    value: function getClientKeyAddress() {\n      if (!this._privateKey) throw new Error(\"no private key is set on this client\");\n      var address = crypto.getAddressFromPrivateKey(this._privateKey, this.addressPrefix);\n      this.address = address;\n      return address;\n    }\n  }]);\n  return BncClient;\n}();\n\nexports.BncClient = BncClient;","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@binance-chain/javascript-sdk/lib/client/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","BncClient","LedgerSigningDelegate","DefaultBroadcastDelegate","DefaultSigningDelegate","NETWORK_PREFIX_MAPPING","api","_classCallCheck2","_createClass2","_defineProperty2","_regenerator","_asyncToGenerator2","_big","crypto","_tx","_types","_request","_validateHelper","_gov","_swap","_token","_bridge","_stake","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","BASENUMBER","Math","pow","broadcast","nodeInfo","getAccount","getMarkets","getSwaps","getOpenOrders","getDepth","getTransactions","getTxs","getTx","testnet","mainnet","_ref","mark","_callee","tx","signMsg","privateKey","wrap","_callee$","_context","prev","next","getPrivateKey","abrupt","Promise","reject","sign","stop","_x","_x2","_x3","_ref2","_callee2","signedTx","_callee2$","_context2","sendTransaction","_x4","_x5","ledgerApp","preSignCb","postSignCb","errCb","hdPath","_ref3","_callee3","signBytes","pubKeyResp","sigResp","pubKey","_callee3$","_context3","getSignBytes","getPublicKey","sent","t0","console","warn","signature","pk","toString","addSignature","_x6","_x7","checkOutputs","outputs","transfer","coins","coin","checkNumber","amount","denom","Error","calInputCoins","inputs","existCoin","find","c","existAmount","Number","plus","server","useAsyncBroadcast","undefined","_httpClient","_signingDelegate","_broadcastDelegate","_useAsyncBroadcast","_source","tokens","swap","gov","bridge","Bridge","stake","Stake","_initChain","_callee4","data","_callee4$","_context4","chainId","request","result","node_info","network","initChain","chooseNetwork","addressPrefix","_setPrivateKey","_callee5","localOnly","address","promise","_args5","_callee5$","_context5","_privateKey","getAddressFromPrivateKey","concat","_setPkPromise","account_number","setPrivateKey","_x8","removePrivateKey","setAccountNumber","accountNumber","setSigningDelegate","delegate","setBroadcastDelegate","useDefaultSigningDelegate","useDefaultBroadcastDelegate","useLedgerSigningDelegate","_transfer","_callee6","fromAddress","toAddress","asset","memo","sequence","accCode","toAccCode","msg","_args6","_callee6$","_context6","decodeAddress","mul","aminoPrefix","AminoPrefix","MsgSend","_prepareTransaction","_x9","_x10","_x11","_x12","_multiSend","_callee7","fromAddrCode","transfers","signInputs","signOutputs","_args7","_callee7$","_context7","Array","isArray","item","sort","a","b","localeCompare","toAddcCode","to","index","multiSend","_x13","_x14","_cancelOrder","_callee8","symbol","refid","_args8","_callee8$","_context8","sender","CancelOrderMsg","cancelOrder","_x15","_x16","_x17","_placeOrder","_callee9","side","price","quantity","timeinforce","bigPrice","bigQuantity","placeOrderMsg","_args9","_callee9$","_context9","id","toUpperCase","ordertype","parseFloat","NewOrderMsg","placeOrder","_list","_callee10","proposalId","baseAsset","quoteAsset","initPrice","init_price","listMsg","_args10","_callee10$","_context10","from","proposal_id","base_asset_symbol","quote_asset_symbol","ListMsg","list","_x18","_x19","_x20","_x21","_x22","_listMiniToken","_callee11","_ref4","_ref4$sequence","listMiniMsg","_callee11$","_context11","validateMiniTokenSymbol","ListMiniMsg","getMsg","getSignMsg","listMiniToken","_x23","_setAccountFlags","_callee12","flags","_args12","_callee12$","_context12","SetAccountFlagsMsg","setAccountFlags","_x24","_x25","_prepareTransaction2","_callee13","stdSignMsg","_args13","_callee13$","_context13","parseInt","call","_x26","_x27","_x28","_sendTransaction2","_callee14","sync","signedBz","_callee14$","_context14","serialize","sendRawTransaction","_x29","_x30","_sendRawTransaction","_callee15","opts","_args15","_callee15$","_context15","headers","_x31","_sendTransaction3","_callee16","_args16","_callee16$","_context16","_sendTransaction","_x32","_x33","_x34","_getAccount","_callee17","_args17","_callee17$","_context17","_getBalance","_callee18","_args18","_callee18$","_context18","balances","getBalance","_getMarkets","_callee19","limit","offset","_args19","_callee19$","_context19","_getTransactions","_callee20","_args20","_callee20$","_context20","_getTxs","_callee21","startTime","endTime","_args21","_callee21$","_context21","_getTx","_callee22","hash","_callee22$","_context22","_x35","_getDepth","_callee23","_args23","_callee23$","_context23","_getOpenOrders","_callee24","_args24","_callee24$","_context24","_getSwapByID","_callee25","swapID","_callee25$","_context25","getSwapByID","_x36","_getSwapByCreator","_callee26","creator","_args26","_callee26$","_context26","getSwapByCreator","_x37","_getSwapByRecipient","_callee27","recipient","_args27","_callee27$","_context27","getSwapByRecipient","_x38","createAccount","generatePrivateKey","createAccountWithKeystore","password","keystore","generateKeyStore","createAccountWithMneomnic","mnemonic","generateMnemonic","getPrivateKeyFromMnemonic","recoverAccountFromKeystore","getPrivateKeyFromKeyStore","recoverAccountFromMnemonic","recoverAccountFromMneomnic","recoverAccountFromPrivateKey","checkAddress","prefix","getClientKeyAddress"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BncClient = exports.LedgerSigningDelegate = exports.DefaultBroadcastDelegate = exports.DefaultSigningDelegate = exports.NETWORK_PREFIX_MAPPING = exports.api = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _tx = _interopRequireDefault(require(\"../tx\"));\n\nvar _types = require(\"../types/\");\n\nvar _request = _interopRequireDefault(require(\"../utils/request\"));\n\nvar _validateHelper = require(\"../utils/validateHelper\");\n\nvar _gov = _interopRequireDefault(require(\"./gov\"));\n\nvar _swap = _interopRequireDefault(require(\"./swap\"));\n\nvar _token = _interopRequireWildcard(require(\"./token\"));\n\nvar _bridge = require(\"./bridge\");\n\nvar _stake = require(\"./stake\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar BASENUMBER = Math.pow(10, 8);\nvar api = {\n  broadcast: \"/api/v1/broadcast\",\n  nodeInfo: \"/api/v1/node-info\",\n  getAccount: \"/api/v1/account\",\n  getMarkets: \"/api/v1/markets\",\n  getSwaps: \"/api/v1/atomic-swaps\",\n  getOpenOrders: \"/api/v1/orders/open\",\n  getDepth: \"/api/v1/depth\",\n  getTransactions: \"/api/v1/transactions\",\n  getTxs: \"/bc/api/v1/txs\",\n  getTx: \"/api/v1/tx\"\n};\nexports.api = api;\nvar NETWORK_PREFIX_MAPPING = {\n  testnet: \"tbnb\",\n  mainnet: \"bnb\"\n};\nexports.NETWORK_PREFIX_MAPPING = NETWORK_PREFIX_MAPPING;\n\n/**\n * The default signing delegate which uses the local private key.\n * @param  {Transaction} tx      the transaction\n * @param  {Object}      signMsg the canonical sign bytes for the msg\n * @return {Transaction}\n */\nvar DefaultSigningDelegate = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(tx, signMsg) {\n    var privateKey;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            privateKey = this.getPrivateKey();\n\n            if (privateKey) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(\"Private key has to be set before signing a transaction\"));\n\n          case 3:\n            return _context.abrupt(\"return\", tx.sign(privateKey, signMsg));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function DefaultSigningDelegate(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * The default broadcast delegate which immediately broadcasts a transaction.\n * @param {Transaction} signedTx the signed transaction\n */\n\n\nexports.DefaultSigningDelegate = DefaultSigningDelegate;\n\nvar DefaultBroadcastDelegate = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(signedTx) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", this.sendTransaction(signedTx, true));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function DefaultBroadcastDelegate(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * The Ledger signing delegate.\n * @param  {LedgerApp}  ledgerApp\n * @param  {preSignCb}  function\n * @param  {postSignCb} function\n * @param  {errCb} function\n * @return {function}\n */\n\n\nexports.DefaultBroadcastDelegate = DefaultBroadcastDelegate;\n\nvar LedgerSigningDelegate = function LedgerSigningDelegate(ledgerApp, preSignCb, postSignCb, errCb, hdPath) {\n  return /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(tx, signMsg) {\n      var signBytes, pubKeyResp, sigResp, pubKey;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              signBytes = tx.getSignBytes(signMsg);\n              preSignCb && preSignCb(signBytes);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return ledgerApp.getPublicKey(hdPath);\n\n            case 5:\n              pubKeyResp = _context3.sent;\n              _context3.next = 8;\n              return ledgerApp.sign(signBytes, hdPath);\n\n            case 8:\n              sigResp = _context3.sent;\n              postSignCb && postSignCb(pubKeyResp, sigResp);\n              _context3.next = 16;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.warn(\"LedgerSigningDelegate error\", _context3.t0);\n              errCb && errCb(_context3.t0);\n\n            case 16:\n              if (!(sigResp && sigResp.signature)) {\n                _context3.next = 19;\n                break;\n              }\n\n              pubKey = crypto.getPublicKey(pubKeyResp.pk.toString(\"hex\"));\n              return _context3.abrupt(\"return\", tx.addSignature(pubKey, sigResp.signature));\n\n            case 19:\n              return _context3.abrupt(\"return\", tx);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 12]]);\n    }));\n\n    return function (_x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n/**\n * validate the input number.\n * @param {Array} outputs\n */\n\n\nexports.LedgerSigningDelegate = LedgerSigningDelegate;\n\nvar checkOutputs = function checkOutputs(outputs) {\n  outputs.forEach(function (transfer) {\n    var coins = transfer.coins || [];\n    coins.forEach(function (coin) {\n      (0, _validateHelper.checkNumber)(coin.amount);\n\n      if (!coin.denom) {\n        throw new Error(\"invalid denmon\");\n      }\n    });\n  });\n};\n/**\n * sum corresponding input coin\n * @param {Array} inputs\n * @param {Array} coins\n */\n\n\nvar calInputCoins = function calInputCoins(inputs, coins) {\n  coins.forEach(function (coin) {\n    var existCoin = inputs[0].coins.find(function (c) {\n      return c.denom === coin.denom;\n    });\n\n    if (existCoin) {\n      var existAmount = new _big[\"default\"](existCoin.amount);\n      existCoin.amount = Number(existAmount.plus(coin.amount).toString());\n    } else {\n      inputs[0].coins.push(_objectSpread({}, coin));\n    }\n  });\n};\n/**\n * The Binance Chain client.\n */\n\n\nvar BncClient = /*#__PURE__*/function () {\n  /**\n   * @param {String} server Binance Chain public url\n   * @param {Boolean} useAsyncBroadcast use async broadcast mode, faster but less guarantees (default off)\n   * @param {Number} source where does this transaction come from (default 0)\n   */\n  function BncClient(server) {\n    var useAsyncBroadcast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    (0, _classCallCheck2[\"default\"])(this, BncClient);\n    (0, _defineProperty2[\"default\"])(this, \"_httpClient\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_signingDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_broadcastDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_useAsyncBroadcast\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"tokens\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"swap\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"gov\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"bridge\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"stake\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"addressPrefix\", \"tbnb\");\n    (0, _defineProperty2[\"default\"])(this, \"network\", \"testnet\");\n    (0, _defineProperty2[\"default\"])(this, \"address\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_setPkPromise\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"account_number\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_privateKey\", null);\n\n    if (!server) {\n      throw new Error(\"Binance chain server should not be null\");\n    }\n\n    this._httpClient = new _request[\"default\"](server);\n    this._signingDelegate = DefaultSigningDelegate;\n    this._broadcastDelegate = DefaultBroadcastDelegate;\n    this._useAsyncBroadcast = useAsyncBroadcast;\n    this._source = source;\n    this.tokens = new _token[\"default\"](this);\n    this.swap = new _swap[\"default\"](this);\n    this.gov = new _gov[\"default\"](this);\n    this.bridge = new _bridge.Bridge(this);\n    this.stake = new _stake.Stake(this);\n  }\n  /**\n   * Initialize the client with the chain's ID. Asynchronous.\n   * @return {Promise}\n   */\n\n\n  (0, _createClass2[\"default\"])(BncClient, [{\n    key: \"initChain\",\n    value: function () {\n      var _initChain = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.chainId) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this._httpClient.request(\"get\", api.nodeInfo);\n\n              case 3:\n                data = _context4.sent;\n                this.chainId = data.result.node_info && data.result.node_info.network;\n\n              case 5:\n                return _context4.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function initChain() {\n        return _initChain.apply(this, arguments);\n      }\n\n      return initChain;\n    }()\n    /**\n     * Sets the client network (testnet or mainnet).\n     * @param {String} network Indicate testnet or mainnet\n     */\n\n  }, {\n    key: \"chooseNetwork\",\n    value: function chooseNetwork(network) {\n      this.addressPrefix = NETWORK_PREFIX_MAPPING[network] || \"tbnb\";\n      this.network = NETWORK_PREFIX_MAPPING[network] ? network : \"testnet\";\n    }\n    /**\n     * Sets the client's private key for calls made by this client. Asynchronous.\n     * @param {string} privateKey the private key hexstring\n     * @param {boolean} localOnly set this to true if you will supply an account_number yourself via `setAccountNumber`. Warning: You must do that if you set this to true!\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"setPrivateKey\",\n    value: function () {\n      var _setPrivateKey = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(privateKey) {\n        var localOnly,\n            address,\n            promise,\n            data,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                localOnly = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : false;\n\n                if (!(privateKey !== this._privateKey)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n\n                if (address) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw new Error(\"address is falsy: \".concat(address, \". invalid private key?\"));\n\n              case 5:\n                this._privateKey = privateKey;\n                this.address = address;\n\n                if (localOnly) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                _context5.prev = 8;\n                promise = this._setPkPromise = this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n                _context5.next = 12;\n                return promise;\n\n              case 12:\n                data = _context5.sent;\n                this.account_number = data.result.account_number;\n                _context5.next = 19;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](8);\n                throw new Error(\"unable to query the address on the blockchain. try sending it some funds first: \".concat(address));\n\n              case 19:\n                return _context5.abrupt(\"return\", this);\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[8, 16]]);\n      }));\n\n      function setPrivateKey(_x8) {\n        return _setPrivateKey.apply(this, arguments);\n      }\n\n      return setPrivateKey;\n    }()\n    /**\n     * Removes client's private key.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"removePrivateKey\",\n    value: function removePrivateKey() {\n      this._privateKey = null;\n      return this;\n    }\n    /**\n     * Gets client's private key.\n     * @return {string|null} the private key hexstring or `null` if no private key has been set\n     */\n\n  }, {\n    key: \"getPrivateKey\",\n    value: function getPrivateKey() {\n      return this._privateKey;\n    }\n    /**\n     * Sets the client's account number.\n     * @param {number} accountNumber\n     */\n\n  }, {\n    key: \"setAccountNumber\",\n    value: function setAccountNumber(accountNumber) {\n      this.account_number = accountNumber;\n    }\n    /**\n     * Use async broadcast mode. Broadcasts faster with less guarantees (default off)\n     * @param {Boolean} useAsyncBroadcast\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useAsyncBroadcast\",\n    value: function useAsyncBroadcast() {\n      var _useAsyncBroadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._useAsyncBroadcast = _useAsyncBroadcast;\n      return this;\n    }\n    /**\n     * Sets the signing delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setSigningDelegate\",\n    value: function setSigningDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"signing delegate must be a function\");\n      this._signingDelegate = delegate;\n      return this;\n    }\n    /**\n     * Sets the broadcast delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setBroadcastDelegate\",\n    value: function setBroadcastDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"broadcast delegate must be a function\");\n      this._broadcastDelegate = delegate;\n      return this;\n    }\n    /**\n     * Applies the default signing delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultSigningDelegate\",\n    value: function useDefaultSigningDelegate() {\n      this._signingDelegate = DefaultSigningDelegate;\n      return this;\n    }\n    /**\n     * Applies the default broadcast delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultBroadcastDelegate\",\n    value: function useDefaultBroadcastDelegate() {\n      this._broadcastDelegate = DefaultBroadcastDelegate;\n      return this;\n    }\n    /**\n     * Applies the Ledger signing delegate.\n     * @param {function} ledgerApp\n     * @param {function} preSignCb\n     * @param {function} postSignCb\n     * @param {function} errCb\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useLedgerSigningDelegate\",\n    value: function useLedgerSigningDelegate() {\n      this._signingDelegate = LedgerSigningDelegate.apply(void 0, arguments);\n      return this;\n    }\n    /**\n     * Transfer tokens from one address to another.\n     * @param {String} fromAddress\n     * @param {String} toAddress\n     * @param {Number} amount\n     * @param {String} asset\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(fromAddress, toAddress, amount, asset) {\n        var memo,\n            sequence,\n            accCode,\n            toAccCode,\n            coin,\n            msg,\n            signMsg,\n            signedTx,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                memo = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : \"\";\n                sequence = _args6.length > 5 && _args6[5] !== undefined ? _args6[5] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                toAccCode = crypto.decodeAddress(toAddress);\n                amount = new _big[\"default\"](amount);\n                amount = Number(amount.mul(BASENUMBER).toString());\n                (0, _validateHelper.checkNumber)(amount, \"amount\");\n                coin = {\n                  denom: asset,\n                  amount: amount\n                };\n                msg = {\n                  inputs: [{\n                    address: accCode,\n                    coins: [coin]\n                  }],\n                  outputs: [{\n                    address: toAccCode,\n                    coins: [coin]\n                  }],\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signMsg = {\n                  inputs: [{\n                    address: fromAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }],\n                  outputs: [{\n                    address: toAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }]\n                };\n                _context6.next = 12;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 12:\n                signedTx = _context6.sent;\n                return _context6.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function transfer(_x9, _x10, _x11, _x12) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Create and sign a multi send tx\n     * @param {String} fromAddress\n     * @param {Array} outputs\n     * @example\n     * const outputs = [\n     * {\n     *   \"to\": \"tbnb1p4kpnj5qz5spsaf0d2555h6ctngse0me5q57qe\",\n     *   \"coins\": [{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   }]\n     * },\n     * {\n     *   \"to\": \"tbnb1scjj8chhhp7lngdeflltzex22yaf9ep59ls4gk\",\n     *   \"coins\": [{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   }]\n     * }]\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"multiSend\",\n    value: function () {\n      var _multiSend = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(fromAddress, outputs) {\n        var memo,\n            sequence,\n            fromAddrCode,\n            inputs,\n            transfers,\n            msg,\n            signInputs,\n            signOutputs,\n            signMsg,\n            signedTx,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                memo = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : \"\";\n                sequence = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : null;\n\n                if (fromAddress) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error(\"fromAddress should not be falsy\");\n\n              case 4:\n                if (Array.isArray(outputs)) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error(\"outputs should be array\");\n\n              case 6:\n                checkOutputs(outputs); //sort denom by alphbet and init amount\n\n                outputs.forEach(function (item) {\n                  item.coins = item.coins.sort(function (a, b) {\n                    return a.denom.localeCompare(b.denom);\n                  });\n                  item.coins.forEach(function (coin) {\n                    var amount = new _big[\"default\"](coin.amount);\n                    coin.amount = Number(amount.mul(BASENUMBER).toString());\n                  });\n                });\n                fromAddrCode = crypto.decodeAddress(fromAddress);\n                inputs = [{\n                  address: fromAddrCode,\n                  coins: []\n                }];\n                transfers = [];\n                outputs.forEach(function (item) {\n                  var toAddcCode = crypto.decodeAddress(item.to);\n                  calInputCoins(inputs, item.coins);\n                  transfers.push({\n                    address: toAddcCode,\n                    coins: item.coins\n                  });\n                });\n                msg = {\n                  inputs: inputs,\n                  outputs: transfers,\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signInputs = [{\n                  address: fromAddress,\n                  coins: []\n                }];\n                signOutputs = [];\n                outputs.forEach(function (item, index) {\n                  signOutputs.push({\n                    address: item.to,\n                    coins: []\n                  });\n                  item.coins.forEach(function (c) {\n                    signOutputs[index].coins.push(c);\n                  });\n                  calInputCoins(signInputs, item.coins);\n                });\n                signMsg = {\n                  inputs: signInputs,\n                  outputs: signOutputs\n                };\n                _context7.next = 19;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 19:\n                signedTx = _context7.sent;\n                return _context7.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 21:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function multiSend(_x13, _x14) {\n        return _multiSend.apply(this, arguments);\n      }\n\n      return multiSend;\n    }()\n    /**\n     * Cancel an order.\n     * @param {String} fromAddress\n     * @param {String} symbol the market pair\n     * @param {String} refid the order ID of the order to cancel\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"cancelOrder\",\n    value: function () {\n      var _cancelOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(fromAddress, symbol, refid) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sequence = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                msg = {\n                  sender: accCode,\n                  symbol: symbol,\n                  refid: refid,\n                  aminoPrefix: _types.AminoPrefix.CancelOrderMsg\n                };\n                signMsg = {\n                  refid: refid,\n                  sender: fromAddress,\n                  symbol: symbol\n                };\n                _context8.next = 6;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, \"\");\n\n              case 6:\n                signedTx = _context8.sent;\n                return _context8.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function cancelOrder(_x15, _x16, _x17) {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }()\n    /**\n     * Place an order.\n     * @param {String} address\n     * @param {String} symbol the market pair\n     * @param {Number} side (1-Buy, 2-Sell)\n     * @param {Number} price\n     * @param {Number} quantity\n     * @param {Number} sequence optional sequence\n     * @param {Number} timeinforce (1-GTC(Good Till Expire), 3-IOC(Immediate or Cancel))\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"placeOrder\",\n    value: function () {\n      var _placeOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9() {\n        var address,\n            symbol,\n            side,\n            price,\n            quantity,\n            sequence,\n            timeinforce,\n            accCode,\n            data,\n            bigPrice,\n            bigQuantity,\n            placeOrderMsg,\n            signMsg,\n            signedTx,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                address = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : this.address;\n                symbol = _args9.length > 1 ? _args9[1] : undefined;\n                side = _args9.length > 2 ? _args9[2] : undefined;\n                price = _args9.length > 3 ? _args9[3] : undefined;\n                quantity = _args9.length > 4 ? _args9[4] : undefined;\n                sequence = _args9.length > 5 && _args9[5] !== undefined ? _args9[5] : null;\n                timeinforce = _args9.length > 6 && _args9[6] !== undefined ? _args9[6] : 1;\n\n                if (address) {\n                  _context9.next = 9;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 9:\n                if (symbol) {\n                  _context9.next = 11;\n                  break;\n                }\n\n                throw new Error(\"symbol should not be falsy\");\n\n              case 11:\n                if (!(side !== 1 && side !== 2)) {\n                  _context9.next = 13;\n                  break;\n                }\n\n                throw new Error(\"side can only be 1 or 2\");\n\n              case 13:\n                if (!(timeinforce !== 1 && timeinforce !== 3)) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                throw new Error(\"timeinforce can only be 1 or 3\");\n\n              case 15:\n                accCode = crypto.decodeAddress(address);\n\n                if (!(sequence !== 0 && !sequence)) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                _context9.next = 19;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 19:\n                data = _context9.sent;\n                sequence = data.result && data.result.sequence;\n\n              case 21:\n                bigPrice = new _big[\"default\"](price);\n                bigQuantity = new _big[\"default\"](quantity);\n                placeOrderMsg = {\n                  sender: accCode,\n                  id: \"\".concat(accCode.toString(\"hex\"), \"-\").concat(sequence + 1).toUpperCase(),\n                  symbol: symbol,\n                  ordertype: 2,\n                  side: side,\n                  price: parseFloat(bigPrice.mul(BASENUMBER).toString()),\n                  quantity: parseFloat(bigQuantity.mul(BASENUMBER).toString()),\n                  timeinforce: timeinforce,\n                  aminoPrefix: _types.AminoPrefix.NewOrderMsg\n                };\n                signMsg = {\n                  id: placeOrderMsg.id,\n                  ordertype: placeOrderMsg.ordertype,\n                  price: placeOrderMsg.price,\n                  quantity: placeOrderMsg.quantity,\n                  sender: address,\n                  side: placeOrderMsg.side,\n                  symbol: placeOrderMsg.symbol,\n                  timeinforce: timeinforce\n                };\n                (0, _validateHelper.checkNumber)(placeOrderMsg.price, \"price\");\n                (0, _validateHelper.checkNumber)(placeOrderMsg.quantity, \"quantity\");\n                _context9.next = 29;\n                return this._prepareTransaction(placeOrderMsg, signMsg, address, sequence, \"\");\n\n              case 29:\n                signedTx = _context9.sent;\n                return _context9.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 31:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function placeOrder() {\n        return _placeOrder.apply(this, arguments);\n      }\n\n      return placeOrder;\n    }()\n    /**\n     * @param {String} address\n     * @param {Number} proposalId\n     * @param {String} baseAsset\n     * @param {String} quoteAsset\n     * @param {Number} initPrice\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(address, proposalId, baseAsset, quoteAsset, initPrice) {\n        var sequence,\n            accCode,\n            init_price,\n            listMsg,\n            signMsg,\n            signedTx,\n            _args10 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                sequence = _args10.length > 5 && _args10[5] !== undefined ? _args10[5] : null;\n                accCode = crypto.decodeAddress(address);\n\n                if (address) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 4:\n                if (!(proposalId <= 0)) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                throw new Error(\"proposal id should larger than 0\");\n\n              case 6:\n                if (!(initPrice <= 0)) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 8:\n                if (baseAsset) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                throw new Error(\"baseAsset should not be falsy\");\n\n              case 10:\n                if (quoteAsset) {\n                  _context10.next = 12;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 12:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMsg = {\n                  from: accCode,\n                  proposal_id: proposalId,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price,\n                  aminoPrefix: _types.AminoPrefix.ListMsg\n                };\n                signMsg = {\n                  base_asset_symbol: baseAsset,\n                  from: address,\n                  init_price: init_price,\n                  proposal_id: proposalId,\n                  quote_asset_symbol: quoteAsset\n                };\n                _context10.next = 17;\n                return this._prepareTransaction(listMsg, signMsg, address, sequence, \"\");\n\n              case 17:\n                signedTx = _context10.sent;\n                return _context10.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 19:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function list(_x18, _x19, _x20, _x21, _x22) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n    /**\n     * list miniToken\n     */\n\n  }, {\n    key: \"listMiniToken\",\n    value: function () {\n      var _listMiniToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(_ref4) {\n        var from, baseAsset, quoteAsset, initPrice, _ref4$sequence, sequence, init_price, listMiniMsg, signedTx;\n\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                from = _ref4.from, baseAsset = _ref4.baseAsset, quoteAsset = _ref4.quoteAsset, initPrice = _ref4.initPrice, _ref4$sequence = _ref4.sequence, sequence = _ref4$sequence === void 0 ? null : _ref4$sequence;\n                (0, _token.validateMiniTokenSymbol)(baseAsset);\n\n                if (!(initPrice <= 0)) {\n                  _context11.next = 4;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 4:\n                if (from) {\n                  _context11.next = 6;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 6:\n                if (quoteAsset) {\n                  _context11.next = 8;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 8:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMiniMsg = new _types.ListMiniMsg({\n                  from: from,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price\n                });\n                _context11.next = 12;\n                return this._prepareTransaction(listMiniMsg.getMsg(), listMiniMsg.getSignMsg(), from, sequence);\n\n              case 12:\n                signedTx = _context11.sent;\n                return _context11.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function listMiniToken(_x23) {\n        return _listMiniToken.apply(this, arguments);\n      }\n\n      return listMiniToken;\n    }()\n    /**\n     * Set account flags\n     * @param {String} address\n     * @param {Number} flags new value of account flags\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"setAccountFlags\",\n    value: function () {\n      var _setAccountFlags = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(address, flags) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args12 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                sequence = _args12.length > 2 && _args12[2] !== undefined ? _args12[2] : null;\n                accCode = crypto.decodeAddress(address);\n                msg = {\n                  from: accCode,\n                  flags: flags,\n                  aminoPrefix: _types.AminoPrefix.SetAccountFlagsMsg\n                };\n                signMsg = {\n                  flags: flags,\n                  from: address\n                };\n                _context12.next = 6;\n                return this._prepareTransaction(msg, signMsg, address, sequence, \"\");\n\n              case 6:\n                signedTx = _context12.sent;\n                return _context12.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setAccountFlags(_x24, _x25) {\n        return _setAccountFlags.apply(this, arguments);\n      }\n\n      return setAccountFlags;\n    }()\n    /**\n     * Prepare a serialized raw transaction for sending to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @return {Transaction} signed transaction\n     */\n\n  }, {\n    key: \"_prepareTransaction\",\n    value: function () {\n      var _prepareTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            data,\n            tx,\n            _args13 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                sequence = _args13.length > 3 && _args13[3] !== undefined ? _args13[3] : null;\n                memo = _args13.length > 4 && _args13[4] !== undefined ? _args13[4] : \"\";\n\n                if (!((!this.account_number || sequence !== 0 && !sequence) && address)) {\n                  _context13.next = 10;\n                  break;\n                }\n\n                _context13.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 5:\n                data = _context13.sent;\n                sequence = data.result.sequence;\n                this.account_number = data.result.account_number; // if user has not used `await` in its call to setPrivateKey (old API), we should wait for the promise here\n\n                _context13.next = 13;\n                break;\n\n              case 10:\n                if (!this._setPkPromise) {\n                  _context13.next = 13;\n                  break;\n                }\n\n                _context13.next = 13;\n                return this._setPkPromise;\n\n              case 13:\n                tx = new _tx[\"default\"]({\n                  accountNumber: typeof this.account_number !== \"number\" ? parseInt(this.account_number) : this.account_number,\n                  chainId: this.chainId,\n                  memo: memo,\n                  msg: msg,\n                  sequence: typeof sequence !== \"number\" ? parseInt(sequence) : sequence,\n                  source: this._source\n                });\n                return _context13.abrupt(\"return\", this._signingDelegate.call(this, tx, stdSignMsg));\n\n              case 15:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _prepareTransaction(_x26, _x27, _x28) {\n        return _prepareTransaction2.apply(this, arguments);\n      }\n\n      return _prepareTransaction;\n    }()\n    /**\n     * Broadcast a transaction to the blockchain.\n     * @param {signedTx} tx signed Transaction object\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(signedTx, sync) {\n        var signedBz;\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                signedBz = signedTx.serialize();\n                return _context14.abrupt(\"return\", this.sendRawTransaction(signedBz, sync));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function sendTransaction(_x29, _x30) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {String} signedBz signed and serialized raw transaction\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendRawTransaction\",\n    value: function () {\n      var _sendRawTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(signedBz) {\n        var sync,\n            opts,\n            _args15 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                sync = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : !this._useAsyncBroadcast;\n                opts = {\n                  data: signedBz,\n                  headers: {\n                    \"content-type\": \"text/plain\"\n                  }\n                };\n                return _context15.abrupt(\"return\", this._httpClient.request(\"post\", \"\".concat(api.broadcast, \"?sync=\").concat(sync), null, opts));\n\n              case 3:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function sendRawTransaction(_x31) {\n        return _sendRawTransaction.apply(this, arguments);\n      }\n\n      return sendRawTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            sync,\n            signedTx,\n            _args16 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                sequence = _args16.length > 3 && _args16[3] !== undefined ? _args16[3] : null;\n                memo = _args16.length > 4 && _args16[4] !== undefined ? _args16[4] : \"\";\n                sync = _args16.length > 5 && _args16[5] !== undefined ? _args16[5] : !this._useAsyncBroadcast;\n                _context16.next = 5;\n                return this._prepareTransaction(msg, stdSignMsg, address, sequence, memo);\n\n              case 5:\n                signedTx = _context16.sent;\n                return _context16.abrupt(\"return\", this.sendTransaction(signedTx, sync));\n\n              case 7:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _sendTransaction(_x32, _x33, _x34) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n\n      return _sendTransaction;\n    }()\n    /**\n     * get account\n     * @param {String} address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n        var address,\n            data,\n            _args17 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                address = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : this.address;\n\n                if (address) {\n                  _context17.next = 3;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 3:\n                _context17.prev = 3;\n                _context17.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 6:\n                data = _context17.sent;\n                return _context17.abrupt(\"return\", data);\n\n              case 10:\n                _context17.prev = 10;\n                _context17.t0 = _context17[\"catch\"](3);\n                return _context17.abrupt(\"return\", null);\n\n              case 13:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[3, 10]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n    /**\n     * get balances\n     * @param {String} address optional address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18() {\n        var address,\n            data,\n            _args18 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                address = _args18.length > 0 && _args18[0] !== undefined ? _args18[0] : this.address;\n                _context18.prev = 1;\n                _context18.next = 4;\n                return this.getAccount(address);\n\n              case 4:\n                data = _context18.sent;\n                return _context18.abrupt(\"return\", data.result.balances);\n\n              case 8:\n                _context18.prev = 8;\n                _context18.t0 = _context18[\"catch\"](1);\n                return _context18.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[1, 8]]);\n      }));\n\n      function getBalance() {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n    /**\n     * get markets\n     * @param {Number} limit max 1000 is default\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getMarkets\",\n    value: function () {\n      var _getMarkets = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19() {\n        var limit,\n            offset,\n            data,\n            _args19 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                limit = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : 1000;\n                offset = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : 0;\n                _context19.prev = 2;\n                _context19.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getMarkets, \"?limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context19.sent;\n                return _context19.abrupt(\"return\", data);\n\n              case 9:\n                _context19.prev = 9;\n                _context19.t0 = _context19[\"catch\"](2);\n                console.warn(\"getMarkets error\", _context19.t0);\n                return _context19.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[2, 9]]);\n      }));\n\n      function getMarkets() {\n        return _getMarkets.apply(this, arguments);\n      }\n\n      return getMarkets;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     * @deprecated please use getTxs instead.\n     */\n\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee20() {\n        var address,\n            offset,\n            data,\n            _args20 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                address = _args20.length > 0 && _args20[0] !== undefined ? _args20[0] : this.address;\n                offset = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : 0;\n                _context20.prev = 2;\n                _context20.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTransactions, \"?address=\").concat(address, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context20.sent;\n                return _context20.abrupt(\"return\", data);\n\n              case 9:\n                _context20.prev = 9;\n                _context20.t0 = _context20[\"catch\"](2);\n                console.warn(\"getTransactions error\", _context20.t0);\n                return _context20.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[2, 9]]);\n      }));\n\n      function getTransactions() {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} startTime start time in milliseconds\n     * @param {Number} endTime end time in in milliseconds, endTime - startTime should be smaller than 7 days\n     * @return {Promise} resolves with http response ([more details](https://docs.binance.org/api-reference/dex-api/block-service.html#apiv1txs))\n     * ```js\n     * // Example:\n     * const client = new BncClient('https://testnet-api.binance.org')\n     * client.getTxs(...);\n     * ```\n     */\n\n  }, {\n    key: \"getTxs\",\n    value: function () {\n      var _getTxs = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee21() {\n        var address,\n            startTime,\n            endTime,\n            data,\n            _args21 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                address = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : this.address;\n                startTime = _args21.length > 1 ? _args21[1] : undefined;\n                endTime = _args21.length > 2 ? _args21[2] : undefined;\n                _context21.prev = 3;\n                _context21.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTxs, \"?address=\").concat(address, \"&startTime=\").concat(startTime, \"&endTime=\").concat(endTime));\n\n              case 6:\n                data = _context21.sent;\n                return _context21.abrupt(\"return\", data);\n\n              case 10:\n                _context21.prev = 10;\n                _context21.t0 = _context21[\"catch\"](3);\n                console.warn(\"getTxs error\", _context21.t0);\n                return _context21.abrupt(\"return\", []);\n\n              case 14:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[3, 10]]);\n      }));\n\n      function getTxs() {\n        return _getTxs.apply(this, arguments);\n      }\n\n      return getTxs;\n    }()\n    /**\n     * get transaction\n     * @param {String} hash the transaction hash\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee22(hash) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.prev = 0;\n                _context22.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTx, \"/\").concat(hash));\n\n              case 3:\n                data = _context22.sent;\n                return _context22.abrupt(\"return\", data);\n\n              case 7:\n                _context22.prev = 7;\n                _context22.t0 = _context22[\"catch\"](0);\n                console.warn(\"getTx error\", _context22.t0);\n                return _context22.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[0, 7]]);\n      }));\n\n      function getTx(_x35) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n    /**\n     * get depth for a given market\n     * @param {String} symbol the market pair\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getDepth\",\n    value: function () {\n      var _getDepth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee23() {\n        var symbol,\n            data,\n            _args23 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                symbol = _args23.length > 0 && _args23[0] !== undefined ? _args23[0] : \"BNB_BUSD-BD1\";\n                _context23.prev = 1;\n                _context23.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getDepth, \"?symbol=\").concat(symbol));\n\n              case 4:\n                data = _context23.sent;\n                return _context23.abrupt(\"return\", data);\n\n              case 8:\n                _context23.prev = 8;\n                _context23.t0 = _context23[\"catch\"](1);\n                console.warn(\"getDepth error\", _context23.t0);\n                return _context23.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[1, 8]]);\n      }));\n\n      function getDepth() {\n        return _getDepth.apply(this, arguments);\n      }\n\n      return getDepth;\n    }()\n    /**\n     * get open orders for an address\n     * @param {String} address binance address\n     * @param {String} symbol binance BEP2 symbol\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getOpenOrders\",\n    value: function () {\n      var _getOpenOrders = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee24() {\n        var address,\n            data,\n            _args24 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                address = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : this.address;\n                _context24.prev = 1;\n                _context24.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getOpenOrders, \"?address=\").concat(address));\n\n              case 4:\n                data = _context24.sent;\n                return _context24.abrupt(\"return\", data);\n\n              case 8:\n                _context24.prev = 8;\n                _context24.t0 = _context24[\"catch\"](1);\n                console.warn(\"getOpenOrders error\", _context24.t0);\n                return _context24.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[1, 8]]);\n      }));\n\n      function getOpenOrders() {\n        return _getOpenOrders.apply(this, arguments);\n      }\n\n      return getOpenOrders;\n    }()\n    /**\n     * get atomic swap\n     * @param {String} swapID: ID of an existing swap\n     * @return {Promise} AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByID\",\n    value: function () {\n      var _getSwapByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee25(swapID) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.prev = 0;\n                _context25.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"/\").concat(swapID));\n\n              case 3:\n                data = _context25.sent;\n                return _context25.abrupt(\"return\", data);\n\n              case 7:\n                _context25.prev = 7;\n                _context25.t0 = _context25[\"catch\"](0);\n                console.warn(\"query swap by swapID error\", _context25.t0);\n                return _context25.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[0, 7]]);\n      }));\n\n      function getSwapByID(_x36) {\n        return _getSwapByID.apply(this, arguments);\n      }\n\n      return getSwapByID;\n    }()\n    /**\n     * query atomic swap list by creator address\n     * @param {String} creator: swap creator address\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByCreator\",\n    value: function () {\n      var _getSwapByCreator = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee26(creator) {\n        var limit,\n            offset,\n            data,\n            _args26 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                limit = _args26.length > 1 && _args26[1] !== undefined ? _args26[1] : 100;\n                offset = _args26.length > 2 && _args26[2] !== undefined ? _args26[2] : 0;\n                _context26.prev = 2;\n                _context26.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?fromAddress=\").concat(creator, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context26.sent;\n                return _context26.abrupt(\"return\", data);\n\n              case 9:\n                _context26.prev = 9;\n                _context26.t0 = _context26[\"catch\"](2);\n                console.warn(\"query swap list by swap creator error\", _context26.t0);\n                return _context26.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this, [[2, 9]]);\n      }));\n\n      function getSwapByCreator(_x37) {\n        return _getSwapByCreator.apply(this, arguments);\n      }\n\n      return getSwapByCreator;\n    }()\n    /**\n     * query atomic swap list by recipient address\n     * @param {String} recipient: the recipient address of the swap\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByRecipient\",\n    value: function () {\n      var _getSwapByRecipient = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee27(recipient) {\n        var limit,\n            offset,\n            data,\n            _args27 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                limit = _args27.length > 1 && _args27[1] !== undefined ? _args27[1] : 100;\n                offset = _args27.length > 2 && _args27[2] !== undefined ? _args27[2] : 0;\n                _context27.prev = 2;\n                _context27.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?toAddress=\").concat(recipient, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context27.sent;\n                return _context27.abrupt(\"return\", data);\n\n              case 9:\n                _context27.prev = 9;\n                _context27.t0 = _context27[\"catch\"](2);\n                console.warn(\"query swap list by swap recipient error\", _context27.t0);\n                return _context27.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this, [[2, 9]]);\n      }));\n\n      function getSwapByRecipient(_x38) {\n        return _getSwapByRecipient.apply(this, arguments);\n      }\n\n      return getSwapByRecipient;\n    }()\n    /**\n     * Creates a private key and returns it and its address.\n     * @return {object} the private key and address in an object.\n     * {\n     *  address,\n     *  privateKey\n     * }\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount() {\n      var privateKey = crypto.generatePrivateKey();\n      return {\n        privateKey: privateKey,\n        address: crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix)\n      };\n    }\n    /**\n     * Creates an account keystore object, and returns the private key and address.\n     * @param {String} password\n     *  {\n     *  privateKey,\n     *  address,\n     *  keystore\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithKeystore\",\n    value: function createAccountWithKeystore(password) {\n      if (!password) {\n        throw new Error(\"password should not be falsy\");\n      }\n\n      var privateKey = crypto.generatePrivateKey();\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      var keystore = crypto.generateKeyStore(privateKey, password);\n      return {\n        privateKey: privateKey,\n        address: address,\n        keystore: keystore\n      };\n    }\n    /**\n     * Creates an account from mnemonic seed phrase.\n     * @return {object}\n     * {\n     *  privateKey,\n     *  address,\n     *  mnemonic\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithMneomnic\",\n    value: function createAccountWithMneomnic() {\n      var mnemonic = crypto.generateMnemonic();\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address,\n        mnemonic: mnemonic\n      };\n    }\n    /**\n     * Recovers an account from a keystore object.\n     * @param {object} keystore object.\n     * @param {string} password password.\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromKeystore\",\n    value: function recoverAccountFromKeystore(keystore, password) {\n      var privateKey = crypto.getPrivateKeyFromKeyStore(keystore, password);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Recovers an account from a mnemonic seed phrase.\n     * @param {string} mneomnic\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromMnemonic\",\n    value: function recoverAccountFromMnemonic(mnemonic) {\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    } // support an old method name containing a typo\n\n  }, {\n    key: \"recoverAccountFromMneomnic\",\n    value: function recoverAccountFromMneomnic(mnemonic) {\n      return this.recoverAccountFromMnemonic(mnemonic);\n    }\n    /**\n     * Recovers an account using private key.\n     * @param {String} privateKey\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromPrivateKey\",\n    value: function recoverAccountFromPrivateKey(privateKey) {\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Validates an address.\n     * @param {String} address\n     * @param {String} prefix\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"checkAddress\",\n    value: function checkAddress(address) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.addressPrefix;\n      return crypto.checkAddress(address, prefix);\n    }\n    /**\n     * Returns the address for the current account if setPrivateKey has been called on this client.\n     * @return {String}\n     */\n\n  }, {\n    key: \"getClientKeyAddress\",\n    value: function getClientKeyAddress() {\n      if (!this._privateKey) throw new Error(\"no private key is set on this client\");\n      var address = crypto.getAddressFromPrivateKey(this._privateKey, this.addressPrefix);\n      this.address = address;\n      return address;\n    }\n  }]);\n  return BncClient;\n}();\n\nexports.BncClient = BncClient;"]},"metadata":{},"sourceType":"script"}