{"ast":null,"code":"import { BncClient } from '@binance-chain/javascript-sdk/lib/client';\nimport { getPrivateKeyFromMnemonic, getAddressFromPrivateKey } from '@binance-chain/javascript-sdk/lib/crypto';\nimport { singleFee, FeeType, Network, TxType, BaseXChainClient } from '@xchainjs/xchain-client';\nimport { baseAmount, assetFromString, AssetBNB, assetToBase, assetAmount, Chain, assetToString, baseToAsset } from '@xchainjs/xchain-util';\nimport axios from 'axios';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n/**\r\n * Type guard for runtime checks of `Fee`\r\n *\r\n * @param {Fee|TransferFee|DexFees} v\r\n * @returns {boolean} `true` or `false`.\r\n */\n\n\nvar isFee = function (v) {\n  var _a, _b, _c;\n\n  return !!((_a = v) === null || _a === void 0 ? void 0 : _a.msg_type) && ((_b = v) === null || _b === void 0 ? void 0 : _b.fee) !== undefined && ((_c = v) === null || _c === void 0 ? void 0 : _c.fee_for) !== undefined;\n};\n/**\r\n * Type guard for `TransferFee`\r\n *\r\n * @param {Fee|TransferFee|DexFees} v\r\n * @returns {boolean} `true` or `false`.\r\n */\n\n\nvar isTransferFee = function (v) {\n  var _a, _b;\n\n  return isFee((_a = v) === null || _a === void 0 ? void 0 : _a.fixed_fee_params) && !!((_b = v) === null || _b === void 0 ? void 0 : _b.multi_transfer_fee);\n};\n/**\r\n * Type guard for `Account`\r\n *\r\n * @param {unknown} v\r\n * @returns {boolean} `true` or `false`.\r\n */\n\n\nvar isAccount = function (v) {\n  return typeof v.account_number === 'number' && typeof v.address === 'string' && Array.isArray(v.balances) && Array.isArray(v.public_key) && typeof v.flags === 'number' && typeof v.sequence === 'number';\n};\n/**\r\n * Get TxType\r\n *\r\n * @param {BinanceTxType} t\r\n * @returns {TxType} `transfer` or `unknown`.\r\n */\n\n\nvar getTxType = function (t) {\n  if (t === 'TRANSFER' || t === 'DEPOSIT') return TxType.Transfer;\n  return TxType.Unknown;\n};\n/**\r\n * Parse Tx\r\n *\r\n * @param {BinanceTx} t The transaction to be parsed. (optional)\r\n * @returns {Tx|null} The transaction parsed from the binance tx.\r\n */\n\n\nvar parseTx = function (tx) {\n  var asset = assetFromString(AssetBNB.chain + \".\" + tx.txAsset);\n  if (!asset) return null;\n  return {\n    asset: asset,\n    from: [{\n      from: tx.fromAddr,\n      amount: assetToBase(assetAmount(tx.value, 8))\n    }],\n    to: [{\n      to: tx.toAddr,\n      amount: assetToBase(assetAmount(tx.value, 8))\n    }],\n    date: new Date(tx.timeStamp),\n    type: getTxType(tx.txType),\n    hash: tx.txHash\n  };\n};\n/**\r\n * Get DerivePath\r\n *\r\n * @param {number} index (optional)\r\n * @returns {DerivePath} The binance derivation path by the index.\r\n */\n\n\nvar getDerivePath = function (index) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  return [44, 714, 0, 0, index];\n};\n/**\r\n * Get the default fee.\r\n *\r\n * @returns {Fees} The default fee.\r\n */\n\n\nvar getDefaultFees = function () {\n  return singleFee(FeeType.FlatFee, baseAmount(37500));\n};\n/**\r\n * Get address prefix based on the network.\r\n *\r\n * @param {Network} network\r\n * @returns {string} The address prefix based on the network.\r\n *\r\n **/\n\n\nvar getPrefix = function (network) {\n  switch (network) {\n    case Network.Mainnet:\n      return 'bnb';\n\n    case Network.Testnet:\n      return 'tbnb';\n  }\n};\n/**\r\n * Custom Binance client\r\n */\n\n\nvar Client =\n/** @class */\nfunction (_super) {\n  __extends(Client, _super);\n  /**\r\n   * Constructor\r\n   *\r\n   * Client has to be initialised with network type and phrase.\r\n   * It will throw an error if an invalid phrase has been passed.\r\n   *\r\n   * @param {XChainClientParams} params\r\n   *\r\n   * @throws {\"Invalid phrase\"} Thrown if the given phase is invalid.\r\n   */\n\n\n  function Client(params) {\n    var _this = _super.call(this, Chain.Binance, params) || this;\n\n    _this.bncClient = new BncClient(_this.getClientUrl());\n\n    _this.bncClient.chooseNetwork(_this.getNetwork());\n\n    return _this;\n  }\n  /**\r\n   * Get the BncClient interface.\r\n   *\r\n   * @returns {BncClient} The BncClient from `@binance-chain/javascript-sdk`.\r\n   */\n\n\n  Client.prototype.getBncClient = function () {\n    return this.bncClient;\n  };\n  /**\r\n   * Set/update the current network.\r\n   *\r\n   * @param {Network} network\r\n   * @returns {void}\r\n   *\r\n   * @throws {\"Network must be provided\"}\r\n   * Thrown if network has not been set before.\r\n   */\n\n\n  Client.prototype.setNetwork = function (network) {\n    _super.prototype.setNetwork.call(this, network);\n\n    this.bncClient = new BncClient(this.getClientUrl());\n    this.bncClient.chooseNetwork(network);\n  };\n  /**\r\n   * Get the client url.\r\n   *\r\n   * @returns {string} The client url for binance chain based on the network.\r\n   */\n\n\n  Client.prototype.getClientUrl = function () {\n    switch (this.network) {\n      case Network.Mainnet:\n        return 'https://dex.binance.org';\n\n      case Network.Testnet:\n        return 'https://testnet-dex.binance.org';\n    }\n  };\n  /**\r\n   * Get the explorer url.\r\n   *\r\n   * @returns {string} The explorer url based on the network.\r\n   */\n\n\n  Client.prototype.getExplorerUrl = function () {\n    switch (this.network) {\n      case Network.Mainnet:\n        return 'https://explorer.binance.org';\n\n      case Network.Testnet:\n        return 'https://testnet-explorer.binance.org';\n    }\n  };\n  /**\r\n   * Get the explorer url for the given address.\r\n   *\r\n   * @param {Address} address\r\n   * @returns {string} The explorer url for the given address based on the network.\r\n   */\n\n\n  Client.prototype.getExplorerAddressUrl = function (address) {\n    return this.getExplorerUrl() + \"/address/\" + address;\n  };\n  /**\r\n   * Get the explorer url for the given transaction id.\r\n   *\r\n   * @param {string} txID\r\n   * @returns {string} The explorer url for the given transaction id based on the network.\r\n   */\n\n\n  Client.prototype.getExplorerTxUrl = function (txID) {\n    return this.getExplorerUrl() + \"/tx/\" + txID;\n  };\n  /**\r\n   * @private\r\n   * Get private key.\r\n   *\r\n   * @param {number} index account index for the derivation path\r\n   * @returns {PrivKey} The privkey generated from the given phrase\r\n   *\r\n   * @throws {\"Phrase not set\"}\r\n   * Throws an error if phrase has not been set before\r\n   * */\n\n\n  Client.prototype.getPrivateKey = function (index) {\n    if (!this.phrase) throw new Error('Phrase not set');\n    return getPrivateKeyFromMnemonic(this.phrase, true, index);\n  };\n  /**\r\n   * Get the current address.\r\n   *\r\n   * @param {number} index (optional) Account index for the derivation path\r\n   * @returns {Address} The current address.\r\n   *\r\n   * @throws {Error} Thrown if phrase has not been set before. A phrase is needed to create a wallet and to derive an address from it.\r\n   */\n\n\n  Client.prototype.getAddress = function (index) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    return getAddressFromPrivateKey(this.getPrivateKey(index), getPrefix(this.network));\n  };\n  /**\r\n   * Validate the given address.\r\n   *\r\n   * @param {Address} address\r\n   * @returns {boolean} `true` or `false`\r\n   */\n\n\n  Client.prototype.validateAddress = function (address) {\n    return this.bncClient.checkAddress(address, getPrefix(this.network));\n  };\n  /**\r\n   * Get account data of wallets or by given address.\r\n   *\r\n   * @param {Address} address (optional) By default, it will return account data of current wallet.\r\n   * @param {number} index (optional) Account index for the derivation path\r\n   *\r\n   * @returns {Account} account details of given address.\r\n   */\n\n\n  Client.prototype.getAccount = function (address, index) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var accountAddress, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            accountAddress = address || this.getAddress(index);\n            return [4\n            /*yield*/\n            , this.bncClient.getAccount(accountAddress)];\n\n          case 1:\n            response = _a.sent();\n            if (!response || !response.result || !isAccount(response.result)) return [2\n            /*return*/\n            , Promise.reject(Error(\"Could not get account data for address \" + accountAddress))];\n            return [2\n            /*return*/\n            , response.result];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the balance of a given address.\r\n   *\r\n   * @param {Address} address By default, it will return the balance of the current wallet. (optional)\r\n   * @param {Asset} asset If not set, it will return all assets available. (optional)\r\n   * @returns {Balance[]} The balance of the address.\r\n   */\n\n\n  Client.prototype.getBalance = function (address, assets) {\n    return __awaiter(this, void 0, void 0, function () {\n      var balances;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.bncClient.getBalance(address)];\n\n          case 1:\n            balances = _a.sent();\n            return [2\n            /*return*/\n            , balances.map(function (balance) {\n              return {\n                asset: assetFromString(Chain.Binance + \".\" + balance.symbol) || AssetBNB,\n                amount: assetToBase(assetAmount(balance.free, 8))\n              };\n            }).filter(function (balance) {\n              return !assets || assets.filter(function (asset) {\n                return assetToString(balance.asset) === assetToString(asset);\n              }).length;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * @private\r\n   * Search transactions with parameters.\r\n   *\r\n   * @returns {Params} The parameters to be used for transaction search.\r\n   * */\n\n\n  Client.prototype.searchTransactions = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientUrl, url, endTime, diffTime, key, value, txHistory;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            clientUrl = this.getClientUrl() + \"/api/v1/transactions\";\n            url = new URL(clientUrl);\n            endTime = Date.now();\n            diffTime = 90 * 24 * 60 * 60 * 1000;\n            url.searchParams.set('endTime', endTime.toString());\n            url.searchParams.set('startTime', (endTime - diffTime).toString());\n\n            for (key in params) {\n              value = params[key];\n\n              if (value) {\n                url.searchParams.set(key, value);\n\n                if (key === 'startTime' && !params['endTime']) {\n                  url.searchParams.set('endTime', (parseInt(value) + diffTime).toString());\n                }\n\n                if (key === 'endTime' && !params['startTime']) {\n                  url.searchParams.set('startTime', (parseInt(value) - diffTime).toString());\n                }\n              }\n            }\n\n            return [4\n            /*yield*/\n            , axios.get(url.toString())];\n\n          case 1:\n            txHistory = _a.sent().data;\n            return [2\n            /*return*/\n            , {\n              total: txHistory.total,\n              txs: txHistory.tx.map(parseTx).filter(Boolean)\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get transaction history of a given address with pagination options.\r\n   * By default it will return the transaction history of the current wallet.\r\n   *\r\n   * @param {TxHistoryParams} params The options to get transaction history. (optional)\r\n   * @returns {TxsPage} The transaction history.\r\n   */\n\n\n  Client.prototype.getTransactions = function (params) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.searchTransactions({\n              address: params && params.address,\n              limit: params && ((_a = params.limit) === null || _a === void 0 ? void 0 : _a.toString()),\n              offset: params && ((_b = params.offset) === null || _b === void 0 ? void 0 : _b.toString()),\n              startTime: params && params.startTime && params.startTime.getTime().toString(),\n              txAsset: params && params.asset\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _c.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the transaction details of a given transaction id.\r\n   *\r\n   * @param {string} txId The transaction id.\r\n   * @returns {Tx} The transaction details of the given transaction id.\r\n   */\n\n\n  Client.prototype.getTransactionData = function (txId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var txResult, blockHeight, address, msgs, msg, txHistory, transaction;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , axios.get(this.getClientUrl() + \"/api/v1/tx/\" + txId + \"?format=json\")];\n\n          case 1:\n            txResult = _a.sent().data;\n            blockHeight = txResult.height;\n            address = '';\n            msgs = txResult.tx.value.msg;\n\n            if (msgs.length) {\n              msg = msgs[0].value;\n\n              if (msg.inputs && msg.inputs.length) {\n                address = msg.inputs[0].address;\n              } else if (msg.outputs && msg.outputs.length) {\n                address = msg.outputs[0].address;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.searchTransactions({\n              address: address,\n              blockHeight: blockHeight\n            })];\n\n          case 2:\n            txHistory = _a.sent();\n            transaction = txHistory.txs.filter(function (tx) {\n              return tx.hash === txId;\n            })[0];\n\n            if (!transaction) {\n              throw new Error('transaction not found');\n            }\n\n            return [2\n            /*return*/\n            , transaction];\n        }\n      });\n    });\n  };\n  /**\r\n   * Broadcast multi-send transaction.\r\n   *\r\n   * @param {MultiSendParams} params The multi-send transfer options.\r\n   * @returns {TxHash} The transaction hash.\r\n   */\n\n\n  Client.prototype.multiSend = function (_a) {\n    var _b = _a.walletIndex,\n        walletIndex = _b === void 0 ? 0 : _b,\n        transactions = _a.transactions,\n        _c = _a.memo,\n        memo = _c === void 0 ? '' : _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var derivedAddress, transferResult;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            derivedAddress = this.getAddress(walletIndex);\n            return [4\n            /*yield*/\n            , this.bncClient.initChain()];\n\n          case 1:\n            _d.sent();\n\n            return [4\n            /*yield*/\n            , this.bncClient.setPrivateKey(this.getPrivateKey(walletIndex))];\n\n          case 2:\n            _d.sent();\n\n            return [4\n            /*yield*/\n            , this.bncClient.multiSend(derivedAddress, transactions.map(function (transaction) {\n              return {\n                to: transaction.to,\n                coins: transaction.coins.map(function (coin) {\n                  return {\n                    denom: coin.asset.symbol,\n                    amount: baseToAsset(coin.amount).amount().toString()\n                  };\n                })\n              };\n            }), memo)];\n\n          case 3:\n            transferResult = _d.sent();\n            return [2\n            /*return*/\n            , transferResult.result.map(function (txResult) {\n              var _a;\n\n              return (_a = txResult === null || txResult === void 0 ? void 0 : txResult.hash) !== null && _a !== void 0 ? _a : '';\n            })[0]];\n        }\n      });\n    });\n  };\n  /**\r\n   * Transfer balances.\r\n   *\r\n   * @param {TxParams} params The transfer options.\r\n   * @returns {TxHash} The transaction hash.\r\n   */\n\n\n  Client.prototype.transfer = function (_a) {\n    var walletIndex = _a.walletIndex,\n        asset = _a.asset,\n        amount = _a.amount,\n        recipient = _a.recipient,\n        memo = _a.memo;\n    return __awaiter(this, void 0, void 0, function () {\n      var transferResult;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.bncClient.initChain()];\n\n          case 1:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , this.bncClient.setPrivateKey(this.getPrivateKey(walletIndex || 0))];\n\n          case 2:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , this.bncClient.transfer(this.getAddress(walletIndex), recipient, baseToAsset(amount).amount().toString(), asset ? asset.symbol : AssetBNB.symbol, memo)];\n\n          case 3:\n            transferResult = _b.sent();\n            return [2\n            /*return*/\n            , transferResult.result.map(function (txResult) {\n              var _a;\n\n              return (_a = txResult === null || txResult === void 0 ? void 0 : txResult.hash) !== null && _a !== void 0 ? _a : '';\n            })[0]];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the current transfer fee.\r\n   *\r\n   * @returns {TransferFee} The current transfer fee.\r\n   */\n\n\n  Client.prototype.getTransferFee = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var feesArray, transferFee;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , axios.get(this.getClientUrl() + \"/api/v1/fees\")];\n\n          case 1:\n            feesArray = _a.sent().data;\n            transferFee = feesArray.filter(isTransferFee)[0];\n            if (!transferFee) throw new Error('failed to get transfer fees');\n            return [2\n            /*return*/\n            , transferFee];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the current fee.\r\n   *\r\n   * @returns {Fees} The current fee.\r\n   */\n\n\n  Client.prototype.getFees = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var singleTxFee, _a, error_1, transferFee;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            singleTxFee = undefined;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            _a = baseAmount;\n            return [4\n            /*yield*/\n            , this.getFeeRateFromThorchain()];\n\n          case 2:\n            singleTxFee = _a.apply(void 0, [_b.sent()]);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _b.sent();\n            console.log(error_1);\n            console.warn(\"Error pulling rates from thorchain, will try alternate\");\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            if (!!singleTxFee) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.getTransferFee()];\n\n          case 5:\n            transferFee = _b.sent();\n            singleTxFee = baseAmount(transferFee.fixed_fee_params.fee);\n            _b.label = 6;\n\n          case 6:\n            return [2\n            /*return*/\n            , singleFee(FeeType.FlatFee, singleTxFee)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the current fee for multi-send transaction.\r\n   *\r\n   * @returns {Fees} The current fee for multi-send transaction.\r\n   */\n\n\n  Client.prototype.getMultiSendFees = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var transferFee, multiTxFee;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getTransferFee()];\n\n          case 1:\n            transferFee = _a.sent();\n            multiTxFee = baseAmount(transferFee.multi_transfer_fee);\n            return [2\n            /*return*/\n            , {\n              type: 'base',\n              average: multiTxFee,\n              fast: multiTxFee,\n              fastest: multiTxFee\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get the current fee for both single and multi-send transaction.\r\n   *\r\n   * @returns {SingleAndMultiFees} The current fee for both single and multi-send transaction.\r\n   */\n\n\n  Client.prototype.getSingleAndMultiFees = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var transferFee, singleTxFee, multiTxFee;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getTransferFee()];\n\n          case 1:\n            transferFee = _a.sent();\n            singleTxFee = baseAmount(transferFee.fixed_fee_params.fee);\n            multiTxFee = baseAmount(transferFee.multi_transfer_fee);\n            return [2\n            /*return*/\n            , {\n              single: {\n                type: 'base',\n                fast: singleTxFee,\n                fastest: singleTxFee,\n                average: singleTxFee\n              },\n              multi: {\n                type: 'base',\n                average: multiTxFee,\n                fast: multiTxFee,\n                fastest: multiTxFee\n              }\n            }];\n        }\n      });\n    });\n  };\n\n  return Client;\n}(BaseXChainClient);\n/**\r\n * Order status as part of an order\r\n * See description of Order.status for more detail https://docs.binance.org/api-reference/dex-api/paths.html#order\r\n */\n\n\nvar OrderStatus;\n\n(function (OrderStatus) {\n  OrderStatus[\"Ack\"] = \"Ack\";\n  OrderStatus[\"PartialFill\"] = \"PartialFill\";\n  OrderStatus[\"IocNoFill\"] = \"IocNoFill\";\n  OrderStatus[\"FullyFill\"] = \"FullyFill\";\n  OrderStatus[\"Canceled\"] = \"Canceled\";\n  OrderStatus[\"Expired\"] = \"Expired\";\n  OrderStatus[\"FailedBlocking\"] = \"FailedBlocking\";\n  OrderStatus[\"FailedMatching\"] = \"FailedMatching\";\n  OrderStatus[\"IocExpire\"] = \"IocExpire\";\n})(OrderStatus || (OrderStatus = {}));\n/**\r\n * Type definitions for data of Binance WebSocket Streams\r\n * @see https://docs.binance.org/api-reference/dex-api/ws-streams.html\r\n *\r\n */\n\n/**\r\n * Taker (as part of {@link Trade})\r\n */\n\n\nvar Taker;\n\n(function (Taker) {\n  Taker[Taker[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  Taker[Taker[\"SELL_TAKER\"] = 1] = \"SELL_TAKER\";\n  Taker[Taker[\"BUY_TAKER\"] = 2] = \"BUY_TAKER\";\n  Taker[Taker[\"BUY_SURPLUS\"] = 3] = \"BUY_SURPLUS\";\n  Taker[Taker[\"SELL_SURPLUS\"] = 4] = \"SELL_SURPLUS\";\n  Taker[Taker[\"NEUTRAL\"] = 5] = \"NEUTRAL\";\n})(Taker || (Taker = {}));\n\nvar binanceWs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n\n  get Taker() {\n    return Taker;\n  }\n\n});\nexport { Client, OrderStatus, binanceWs as WS, getDefaultFees, getDerivePath, getPrefix };","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@xchainjs/xchain-binance/lib/index.esm.js"],"names":["BncClient","getPrivateKeyFromMnemonic","getAddressFromPrivateKey","singleFee","FeeType","Network","TxType","BaseXChainClient","baseAmount","assetFromString","AssetBNB","assetToBase","assetAmount","Chain","assetToString","baseToAsset","axios","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","isFee","_a","_b","_c","msg_type","fee","undefined","fee_for","isTransferFee","fixed_fee_params","multi_transfer_fee","isAccount","account_number","address","isArray","balances","public_key","flags","sequence","getTxType","Transfer","Unknown","parseTx","tx","asset","chain","txAsset","from","fromAddr","amount","to","toAddr","date","Date","timeStamp","type","txType","hash","txHash","getDerivePath","index","getDefaultFees","FlatFee","getPrefix","network","Mainnet","Testnet","Client","_super","params","_this","Binance","bncClient","getClientUrl","chooseNetwork","getNetwork","getBncClient","setNetwork","getExplorerUrl","getExplorerAddressUrl","getExplorerTxUrl","txID","getPrivateKey","phrase","Error","getAddress","validateAddress","checkAddress","getAccount","accountAddress","response","getBalance","assets","map","balance","symbol","free","filter","searchTransactions","clientUrl","url","endTime","diffTime","key","txHistory","URL","now","searchParams","set","toString","parseInt","get","data","total","txs","Boolean","getTransactions","limit","offset","startTime","getTime","getTransactionData","txId","txResult","blockHeight","msgs","msg","transaction","height","inputs","outputs","multiSend","walletIndex","transactions","memo","derivedAddress","transferResult","_d","initChain","setPrivateKey","coins","coin","denom","transfer","recipient","getTransferFee","feesArray","transferFee","getFees","singleTxFee","error_1","getFeeRateFromThorchain","console","log","warn","getMultiSendFees","multiTxFee","average","fast","fastest","getSingleAndMultiFees","single","multi","OrderStatus","Taker","binanceWs","freeze","WS"],"mappings":"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","sourcesContent":["import { BncClient } from '@binance-chain/javascript-sdk/lib/client';\nimport { getPrivateKeyFromMnemonic, getAddressFromPrivateKey } from '@binance-chain/javascript-sdk/lib/crypto';\nimport { singleFee, FeeType, Network, TxType, BaseXChainClient } from '@xchainjs/xchain-client';\nimport { baseAmount, assetFromString, AssetBNB, assetToBase, assetAmount, Chain, assetToString, baseToAsset } from '@xchainjs/xchain-util';\nimport axios from 'axios';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\n/**\r\n * Type guard for runtime checks of `Fee`\r\n *\r\n * @param {Fee|TransferFee|DexFees} v\r\n * @returns {boolean} `true` or `false`.\r\n */\r\nvar isFee = function (v) { var _a, _b, _c; return !!((_a = v) === null || _a === void 0 ? void 0 : _a.msg_type) && ((_b = v) === null || _b === void 0 ? void 0 : _b.fee) !== undefined && ((_c = v) === null || _c === void 0 ? void 0 : _c.fee_for) !== undefined; };\r\n/**\r\n * Type guard for `TransferFee`\r\n *\r\n * @param {Fee|TransferFee|DexFees} v\r\n * @returns {boolean} `true` or `false`.\r\n */\r\nvar isTransferFee = function (v) { var _a, _b; return isFee((_a = v) === null || _a === void 0 ? void 0 : _a.fixed_fee_params) && !!((_b = v) === null || _b === void 0 ? void 0 : _b.multi_transfer_fee); };\r\n/**\r\n * Type guard for `Account`\r\n *\r\n * @param {unknown} v\r\n * @returns {boolean} `true` or `false`.\r\n */\r\nvar isAccount = function (v) {\r\n    return typeof v.account_number === 'number' &&\r\n        typeof v.address === 'string' &&\r\n        Array.isArray(v.balances) &&\r\n        Array.isArray(v.public_key) &&\r\n        typeof v.flags === 'number' &&\r\n        typeof v.sequence === 'number';\r\n};\r\n/**\r\n * Get TxType\r\n *\r\n * @param {BinanceTxType} t\r\n * @returns {TxType} `transfer` or `unknown`.\r\n */\r\nvar getTxType = function (t) {\r\n    if (t === 'TRANSFER' || t === 'DEPOSIT')\r\n        return TxType.Transfer;\r\n    return TxType.Unknown;\r\n};\r\n/**\r\n * Parse Tx\r\n *\r\n * @param {BinanceTx} t The transaction to be parsed. (optional)\r\n * @returns {Tx|null} The transaction parsed from the binance tx.\r\n */\r\nvar parseTx = function (tx) {\r\n    var asset = assetFromString(AssetBNB.chain + \".\" + tx.txAsset);\r\n    if (!asset)\r\n        return null;\r\n    return {\r\n        asset: asset,\r\n        from: [\r\n            {\r\n                from: tx.fromAddr,\r\n                amount: assetToBase(assetAmount(tx.value, 8)),\r\n            },\r\n        ],\r\n        to: [\r\n            {\r\n                to: tx.toAddr,\r\n                amount: assetToBase(assetAmount(tx.value, 8)),\r\n            },\r\n        ],\r\n        date: new Date(tx.timeStamp),\r\n        type: getTxType(tx.txType),\r\n        hash: tx.txHash,\r\n    };\r\n};\r\n/**\r\n * Get DerivePath\r\n *\r\n * @param {number} index (optional)\r\n * @returns {DerivePath} The binance derivation path by the index.\r\n */\r\nvar getDerivePath = function (index) {\r\n    if (index === void 0) { index = 0; }\r\n    return [44, 714, 0, 0, index];\r\n};\r\n/**\r\n * Get the default fee.\r\n *\r\n * @returns {Fees} The default fee.\r\n */\r\nvar getDefaultFees = function () {\r\n    return singleFee(FeeType.FlatFee, baseAmount(37500));\r\n};\r\n/**\r\n * Get address prefix based on the network.\r\n *\r\n * @param {Network} network\r\n * @returns {string} The address prefix based on the network.\r\n *\r\n **/\r\nvar getPrefix = function (network) {\r\n    switch (network) {\r\n        case Network.Mainnet:\r\n            return 'bnb';\r\n        case Network.Testnet:\r\n            return 'tbnb';\r\n    }\r\n};\n\n/**\r\n * Custom Binance client\r\n */\r\nvar Client = /** @class */ (function (_super) {\r\n    __extends(Client, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * Client has to be initialised with network type and phrase.\r\n     * It will throw an error if an invalid phrase has been passed.\r\n     *\r\n     * @param {XChainClientParams} params\r\n     *\r\n     * @throws {\"Invalid phrase\"} Thrown if the given phase is invalid.\r\n     */\r\n    function Client(params) {\r\n        var _this = _super.call(this, Chain.Binance, params) || this;\r\n        _this.bncClient = new BncClient(_this.getClientUrl());\r\n        _this.bncClient.chooseNetwork(_this.getNetwork());\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the BncClient interface.\r\n     *\r\n     * @returns {BncClient} The BncClient from `@binance-chain/javascript-sdk`.\r\n     */\r\n    Client.prototype.getBncClient = function () {\r\n        return this.bncClient;\r\n    };\r\n    /**\r\n     * Set/update the current network.\r\n     *\r\n     * @param {Network} network\r\n     * @returns {void}\r\n     *\r\n     * @throws {\"Network must be provided\"}\r\n     * Thrown if network has not been set before.\r\n     */\r\n    Client.prototype.setNetwork = function (network) {\r\n        _super.prototype.setNetwork.call(this, network);\r\n        this.bncClient = new BncClient(this.getClientUrl());\r\n        this.bncClient.chooseNetwork(network);\r\n    };\r\n    /**\r\n     * Get the client url.\r\n     *\r\n     * @returns {string} The client url for binance chain based on the network.\r\n     */\r\n    Client.prototype.getClientUrl = function () {\r\n        switch (this.network) {\r\n            case Network.Mainnet:\r\n                return 'https://dex.binance.org';\r\n            case Network.Testnet:\r\n                return 'https://testnet-dex.binance.org';\r\n        }\r\n    };\r\n    /**\r\n     * Get the explorer url.\r\n     *\r\n     * @returns {string} The explorer url based on the network.\r\n     */\r\n    Client.prototype.getExplorerUrl = function () {\r\n        switch (this.network) {\r\n            case Network.Mainnet:\r\n                return 'https://explorer.binance.org';\r\n            case Network.Testnet:\r\n                return 'https://testnet-explorer.binance.org';\r\n        }\r\n    };\r\n    /**\r\n     * Get the explorer url for the given address.\r\n     *\r\n     * @param {Address} address\r\n     * @returns {string} The explorer url for the given address based on the network.\r\n     */\r\n    Client.prototype.getExplorerAddressUrl = function (address) {\r\n        return this.getExplorerUrl() + \"/address/\" + address;\r\n    };\r\n    /**\r\n     * Get the explorer url for the given transaction id.\r\n     *\r\n     * @param {string} txID\r\n     * @returns {string} The explorer url for the given transaction id based on the network.\r\n     */\r\n    Client.prototype.getExplorerTxUrl = function (txID) {\r\n        return this.getExplorerUrl() + \"/tx/\" + txID;\r\n    };\r\n    /**\r\n     * @private\r\n     * Get private key.\r\n     *\r\n     * @param {number} index account index for the derivation path\r\n     * @returns {PrivKey} The privkey generated from the given phrase\r\n     *\r\n     * @throws {\"Phrase not set\"}\r\n     * Throws an error if phrase has not been set before\r\n     * */\r\n    Client.prototype.getPrivateKey = function (index) {\r\n        if (!this.phrase)\r\n            throw new Error('Phrase not set');\r\n        return getPrivateKeyFromMnemonic(this.phrase, true, index);\r\n    };\r\n    /**\r\n     * Get the current address.\r\n     *\r\n     * @param {number} index (optional) Account index for the derivation path\r\n     * @returns {Address} The current address.\r\n     *\r\n     * @throws {Error} Thrown if phrase has not been set before. A phrase is needed to create a wallet and to derive an address from it.\r\n     */\r\n    Client.prototype.getAddress = function (index) {\r\n        if (index === void 0) { index = 0; }\r\n        return getAddressFromPrivateKey(this.getPrivateKey(index), getPrefix(this.network));\r\n    };\r\n    /**\r\n     * Validate the given address.\r\n     *\r\n     * @param {Address} address\r\n     * @returns {boolean} `true` or `false`\r\n     */\r\n    Client.prototype.validateAddress = function (address) {\r\n        return this.bncClient.checkAddress(address, getPrefix(this.network));\r\n    };\r\n    /**\r\n     * Get account data of wallets or by given address.\r\n     *\r\n     * @param {Address} address (optional) By default, it will return account data of current wallet.\r\n     * @param {number} index (optional) Account index for the derivation path\r\n     *\r\n     * @returns {Account} account details of given address.\r\n     */\r\n    Client.prototype.getAccount = function (address, index) {\r\n        if (index === void 0) { index = 0; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var accountAddress, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        accountAddress = address || this.getAddress(index);\r\n                        return [4 /*yield*/, this.bncClient.getAccount(accountAddress)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (!response || !response.result || !isAccount(response.result))\r\n                            return [2 /*return*/, Promise.reject(Error(\"Could not get account data for address \" + accountAddress))];\r\n                        return [2 /*return*/, response.result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the balance of a given address.\r\n     *\r\n     * @param {Address} address By default, it will return the balance of the current wallet. (optional)\r\n     * @param {Asset} asset If not set, it will return all assets available. (optional)\r\n     * @returns {Balance[]} The balance of the address.\r\n     */\r\n    Client.prototype.getBalance = function (address, assets) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var balances;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.bncClient.getBalance(address)];\r\n                    case 1:\r\n                        balances = _a.sent();\r\n                        return [2 /*return*/, balances\r\n                                .map(function (balance) {\r\n                                return {\r\n                                    asset: assetFromString(Chain.Binance + \".\" + balance.symbol) || AssetBNB,\r\n                                    amount: assetToBase(assetAmount(balance.free, 8)),\r\n                                };\r\n                            })\r\n                                .filter(function (balance) { return !assets || assets.filter(function (asset) { return assetToString(balance.asset) === assetToString(asset); }).length; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * Search transactions with parameters.\r\n     *\r\n     * @returns {Params} The parameters to be used for transaction search.\r\n     * */\r\n    Client.prototype.searchTransactions = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientUrl, url, endTime, diffTime, key, value, txHistory;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        clientUrl = this.getClientUrl() + \"/api/v1/transactions\";\r\n                        url = new URL(clientUrl);\r\n                        endTime = Date.now();\r\n                        diffTime = 90 * 24 * 60 * 60 * 1000;\r\n                        url.searchParams.set('endTime', endTime.toString());\r\n                        url.searchParams.set('startTime', (endTime - diffTime).toString());\r\n                        for (key in params) {\r\n                            value = params[key];\r\n                            if (value) {\r\n                                url.searchParams.set(key, value);\r\n                                if (key === 'startTime' && !params['endTime']) {\r\n                                    url.searchParams.set('endTime', (parseInt(value) + diffTime).toString());\r\n                                }\r\n                                if (key === 'endTime' && !params['startTime']) {\r\n                                    url.searchParams.set('startTime', (parseInt(value) - diffTime).toString());\r\n                                }\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, axios.get(url.toString())];\r\n                    case 1:\r\n                        txHistory = (_a.sent()).data;\r\n                        return [2 /*return*/, {\r\n                                total: txHistory.total,\r\n                                txs: txHistory.tx.map(parseTx).filter(Boolean),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get transaction history of a given address with pagination options.\r\n     * By default it will return the transaction history of the current wallet.\r\n     *\r\n     * @param {TxHistoryParams} params The options to get transaction history. (optional)\r\n     * @returns {TxsPage} The transaction history.\r\n     */\r\n    Client.prototype.getTransactions = function (params) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, this.searchTransactions({\r\n                            address: params && params.address,\r\n                            limit: params && ((_a = params.limit) === null || _a === void 0 ? void 0 : _a.toString()),\r\n                            offset: params && ((_b = params.offset) === null || _b === void 0 ? void 0 : _b.toString()),\r\n                            startTime: params && params.startTime && params.startTime.getTime().toString(),\r\n                            txAsset: params && params.asset,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _c.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the transaction details of a given transaction id.\r\n     *\r\n     * @param {string} txId The transaction id.\r\n     * @returns {Tx} The transaction details of the given transaction id.\r\n     */\r\n    Client.prototype.getTransactionData = function (txId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var txResult, blockHeight, address, msgs, msg, txHistory, transaction;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, axios.get(this.getClientUrl() + \"/api/v1/tx/\" + txId + \"?format=json\")];\r\n                    case 1:\r\n                        txResult = (_a.sent()).data;\r\n                        blockHeight = txResult.height;\r\n                        address = '';\r\n                        msgs = txResult.tx.value.msg;\r\n                        if (msgs.length) {\r\n                            msg = msgs[0].value;\r\n                            if (msg.inputs && msg.inputs.length) {\r\n                                address = msg.inputs[0].address;\r\n                            }\r\n                            else if (msg.outputs && msg.outputs.length) {\r\n                                address = msg.outputs[0].address;\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.searchTransactions({ address: address, blockHeight: blockHeight })];\r\n                    case 2:\r\n                        txHistory = _a.sent();\r\n                        transaction = txHistory.txs.filter(function (tx) { return tx.hash === txId; })[0];\r\n                        if (!transaction) {\r\n                            throw new Error('transaction not found');\r\n                        }\r\n                        return [2 /*return*/, transaction];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Broadcast multi-send transaction.\r\n     *\r\n     * @param {MultiSendParams} params The multi-send transfer options.\r\n     * @returns {TxHash} The transaction hash.\r\n     */\r\n    Client.prototype.multiSend = function (_a) {\r\n        var _b = _a.walletIndex, walletIndex = _b === void 0 ? 0 : _b, transactions = _a.transactions, _c = _a.memo, memo = _c === void 0 ? '' : _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var derivedAddress, transferResult;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        derivedAddress = this.getAddress(walletIndex);\r\n                        return [4 /*yield*/, this.bncClient.initChain()];\r\n                    case 1:\r\n                        _d.sent();\r\n                        return [4 /*yield*/, this.bncClient.setPrivateKey(this.getPrivateKey(walletIndex))];\r\n                    case 2:\r\n                        _d.sent();\r\n                        return [4 /*yield*/, this.bncClient.multiSend(derivedAddress, transactions.map(function (transaction) {\r\n                                return {\r\n                                    to: transaction.to,\r\n                                    coins: transaction.coins.map(function (coin) {\r\n                                        return {\r\n                                            denom: coin.asset.symbol,\r\n                                            amount: baseToAsset(coin.amount).amount().toString(),\r\n                                        };\r\n                                    }),\r\n                                };\r\n                            }), memo)];\r\n                    case 3:\r\n                        transferResult = _d.sent();\r\n                        return [2 /*return*/, transferResult.result.map(function (txResult) { var _a; return (_a = txResult === null || txResult === void 0 ? void 0 : txResult.hash) !== null && _a !== void 0 ? _a : ''; })[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Transfer balances.\r\n     *\r\n     * @param {TxParams} params The transfer options.\r\n     * @returns {TxHash} The transaction hash.\r\n     */\r\n    Client.prototype.transfer = function (_a) {\r\n        var walletIndex = _a.walletIndex, asset = _a.asset, amount = _a.amount, recipient = _a.recipient, memo = _a.memo;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var transferResult;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.bncClient.initChain()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, this.bncClient.setPrivateKey(this.getPrivateKey(walletIndex || 0))];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, this.bncClient.transfer(this.getAddress(walletIndex), recipient, baseToAsset(amount).amount().toString(), asset ? asset.symbol : AssetBNB.symbol, memo)];\r\n                    case 3:\r\n                        transferResult = _b.sent();\r\n                        return [2 /*return*/, transferResult.result.map(function (txResult) { var _a; return (_a = txResult === null || txResult === void 0 ? void 0 : txResult.hash) !== null && _a !== void 0 ? _a : ''; })[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the current transfer fee.\r\n     *\r\n     * @returns {TransferFee} The current transfer fee.\r\n     */\r\n    Client.prototype.getTransferFee = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var feesArray, transferFee;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, axios.get(this.getClientUrl() + \"/api/v1/fees\")];\r\n                    case 1:\r\n                        feesArray = (_a.sent()).data;\r\n                        transferFee = feesArray.filter(isTransferFee)[0];\r\n                        if (!transferFee)\r\n                            throw new Error('failed to get transfer fees');\r\n                        return [2 /*return*/, transferFee];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the current fee.\r\n     *\r\n     * @returns {Fees} The current fee.\r\n     */\r\n    Client.prototype.getFees = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var singleTxFee, _a, error_1, transferFee;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        singleTxFee = undefined;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        _a = baseAmount;\r\n                        return [4 /*yield*/, this.getFeeRateFromThorchain()];\r\n                    case 2:\r\n                        singleTxFee = _a.apply(void 0, [_b.sent()]);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        console.log(error_1);\r\n                        console.warn(\"Error pulling rates from thorchain, will try alternate\");\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!!singleTxFee) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.getTransferFee()];\r\n                    case 5:\r\n                        transferFee = _b.sent();\r\n                        singleTxFee = baseAmount(transferFee.fixed_fee_params.fee);\r\n                        _b.label = 6;\r\n                    case 6: return [2 /*return*/, singleFee(FeeType.FlatFee, singleTxFee)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the current fee for multi-send transaction.\r\n     *\r\n     * @returns {Fees} The current fee for multi-send transaction.\r\n     */\r\n    Client.prototype.getMultiSendFees = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var transferFee, multiTxFee;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getTransferFee()];\r\n                    case 1:\r\n                        transferFee = _a.sent();\r\n                        multiTxFee = baseAmount(transferFee.multi_transfer_fee);\r\n                        return [2 /*return*/, {\r\n                                type: 'base',\r\n                                average: multiTxFee,\r\n                                fast: multiTxFee,\r\n                                fastest: multiTxFee,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the current fee for both single and multi-send transaction.\r\n     *\r\n     * @returns {SingleAndMultiFees} The current fee for both single and multi-send transaction.\r\n     */\r\n    Client.prototype.getSingleAndMultiFees = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var transferFee, singleTxFee, multiTxFee;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getTransferFee()];\r\n                    case 1:\r\n                        transferFee = _a.sent();\r\n                        singleTxFee = baseAmount(transferFee.fixed_fee_params.fee);\r\n                        multiTxFee = baseAmount(transferFee.multi_transfer_fee);\r\n                        return [2 /*return*/, {\r\n                                single: {\r\n                                    type: 'base',\r\n                                    fast: singleTxFee,\r\n                                    fastest: singleTxFee,\r\n                                    average: singleTxFee,\r\n                                },\r\n                                multi: {\r\n                                    type: 'base',\r\n                                    average: multiTxFee,\r\n                                    fast: multiTxFee,\r\n                                    fastest: multiTxFee,\r\n                                },\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Client;\r\n}(BaseXChainClient));\n\n/**\r\n * Order status as part of an order\r\n * See description of Order.status for more detail https://docs.binance.org/api-reference/dex-api/paths.html#order\r\n */\r\nvar OrderStatus;\r\n(function (OrderStatus) {\r\n    OrderStatus[\"Ack\"] = \"Ack\";\r\n    OrderStatus[\"PartialFill\"] = \"PartialFill\";\r\n    OrderStatus[\"IocNoFill\"] = \"IocNoFill\";\r\n    OrderStatus[\"FullyFill\"] = \"FullyFill\";\r\n    OrderStatus[\"Canceled\"] = \"Canceled\";\r\n    OrderStatus[\"Expired\"] = \"Expired\";\r\n    OrderStatus[\"FailedBlocking\"] = \"FailedBlocking\";\r\n    OrderStatus[\"FailedMatching\"] = \"FailedMatching\";\r\n    OrderStatus[\"IocExpire\"] = \"IocExpire\";\r\n})(OrderStatus || (OrderStatus = {}));\n\n/**\r\n * Type definitions for data of Binance WebSocket Streams\r\n * @see https://docs.binance.org/api-reference/dex-api/ws-streams.html\r\n *\r\n */\r\n/**\r\n * Taker (as part of {@link Trade})\r\n */\r\nvar Taker;\r\n(function (Taker) {\r\n    Taker[Taker[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    Taker[Taker[\"SELL_TAKER\"] = 1] = \"SELL_TAKER\";\r\n    Taker[Taker[\"BUY_TAKER\"] = 2] = \"BUY_TAKER\";\r\n    Taker[Taker[\"BUY_SURPLUS\"] = 3] = \"BUY_SURPLUS\";\r\n    Taker[Taker[\"SELL_SURPLUS\"] = 4] = \"SELL_SURPLUS\";\r\n    Taker[Taker[\"NEUTRAL\"] = 5] = \"NEUTRAL\";\r\n})(Taker || (Taker = {}));\n\nvar binanceWs = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get Taker () { return Taker; }\n});\n\nexport { Client, OrderStatus, binanceWs as WS, getDefaultFees, getDerivePath, getPrefix };\n"]},"metadata":{},"sourceType":"module"}