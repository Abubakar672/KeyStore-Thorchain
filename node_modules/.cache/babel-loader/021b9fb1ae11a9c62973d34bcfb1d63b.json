{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nexport function referendumIds(instanceId, api) {\n  return memo(instanceId, () => {\n    var _api$query$democracy;\n\n    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.lowestUnbaked ? api.queryMulti([api.query.democracy.lowestUnbaked, api.query.democracy.referendumCount]).pipe(map(([first, total]) => total.gt(first) // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    ? [...Array(total.sub(first).toNumber())].map((_, i) => first.addn(i)) : [])) : of([]);\n  });\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/democracy/referendumIds.js"],"names":["map","of","memo","referendumIds","instanceId","api","_api$query$democracy","query","democracy","lowestUnbaked","queryMulti","referendumCount","pipe","first","total","gt","Array","sub","toNumber","_","i","addn"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,EAAcC,EAAd,QAAwB,MAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,GAAnC,EAAwC;AAC7C,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAM;AAC5B,QAAIE,oBAAJ;;AAEA,WAAO,CAACA,oBAAoB,GAAGD,GAAG,CAACE,KAAJ,CAAUC,SAAlC,MAAiD,IAAjD,IAAyDF,oBAAoB,KAAK,KAAK,CAAvF,IAA4FA,oBAAoB,CAACG,aAAjH,GAAiIJ,GAAG,CAACK,UAAJ,CAAe,CAACL,GAAG,CAACE,KAAJ,CAAUC,SAAV,CAAoBC,aAArB,EAAoCJ,GAAG,CAACE,KAAJ,CAAUC,SAAV,CAAoBG,eAAxD,CAAf,EAAyFC,IAAzF,CAA8FZ,GAAG,CAAC,CAAC,CAACa,KAAD,EAAQC,KAAR,CAAD,KAAoBA,KAAK,CAACC,EAAN,CAASF,KAAT,EAAgB;AAAhB,MAC5P,CAAC,GAAGG,KAAK,CAACF,KAAK,CAACG,GAAN,CAAUJ,KAAV,EAAiBK,QAAjB,EAAD,CAAT,EAAwClB,GAAxC,CAA4C,CAACmB,CAAD,EAAIC,CAAJ,KAAUP,KAAK,CAACQ,IAAN,CAAWD,CAAX,CAAtD,CAD4P,GACrL,EADgK,CAAjG,CAAjI,GACyEnB,EAAE,CAAC,EAAD,CADlF;AAED,GALU,CAAX;AAMD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, of } from 'rxjs';\nimport { memo } from \"../util/index.js\";\nexport function referendumIds(instanceId, api) {\n  return memo(instanceId, () => {\n    var _api$query$democracy;\n\n    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.lowestUnbaked ? api.queryMulti([api.query.democracy.lowestUnbaked, api.query.democracy.referendumCount]).pipe(map(([first, total]) => total.gt(first) // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    ? [...Array(total.sub(first).toNumber())].map((_, i) => first.addn(i)) : [])) : of([]);\n  });\n}"]},"metadata":{},"sourceType":"module"}