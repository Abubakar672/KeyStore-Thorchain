{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, switchMap } from 'rxjs';\nimport { arrayFlatten } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nconst DEFAULT_FLAGS = {\n  withController: true,\n  withExposure: true,\n  withPrefs: true\n};\n\nfunction combineAccounts(nextElected, validators) {\n  return arrayFlatten([nextElected, validators.filter(v => !nextElected.find(n => n.eq(v)))]);\n}\n\nexport function electedInfo(instanceId, api) {\n  return memo(instanceId, (flags = DEFAULT_FLAGS) => api.derive.staking.validators().pipe(switchMap(({\n    nextElected,\n    validators\n  }) => api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe(map(info => ({\n    info,\n    nextElected,\n    validators\n  }))))));\n}","map":{"version":3,"sources":["/home/abubakar/Desktop/KeyStore-Thorchain/node_modules/@polkadot/api-derive/staking/electedInfo.js"],"names":["map","switchMap","arrayFlatten","memo","DEFAULT_FLAGS","withController","withExposure","withPrefs","combineAccounts","nextElected","validators","filter","v","find","n","eq","electedInfo","instanceId","api","flags","derive","staking","pipe","queryMulti","info"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,EAAcC,SAAd,QAA+B,MAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,cAAc,EAAE,IADI;AAEpBC,EAAAA,YAAY,EAAE,IAFM;AAGpBC,EAAAA,SAAS,EAAE;AAHS,CAAtB;;AAMA,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,UAAtC,EAAkD;AAChD,SAAOR,YAAY,CAAC,CAACO,WAAD,EAAcC,UAAU,CAACC,MAAX,CAAkBC,CAAC,IAAI,CAACH,WAAW,CAACI,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,EAAF,CAAKH,CAAL,CAAtB,CAAxB,CAAd,CAAD,CAAnB;AACD;;AAED,OAAO,SAASI,WAAT,CAAqBC,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C,SAAOf,IAAI,CAACc,UAAD,EAAa,CAACE,KAAK,GAAGf,aAAT,KAA2Bc,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBX,UAAnB,GAAgCY,IAAhC,CAAqCrB,SAAS,CAAC,CAAC;AACjGQ,IAAAA,WADiG;AAEjGC,IAAAA;AAFiG,GAAD,KAG5FQ,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBE,UAAnB,CAA8Bf,eAAe,CAACC,WAAD,EAAcC,UAAd,CAA7C,EAAwES,KAAxE,EAA+EG,IAA/E,CAAoFtB,GAAG,CAACwB,IAAI,KAAK;AACrGA,IAAAA,IADqG;AAErGf,IAAAA,WAFqG;AAGrGC,IAAAA;AAHqG,GAAL,CAAL,CAAvF,CAH2F,CAA9C,CAAxC,CAAX;AAQD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, switchMap } from 'rxjs';\nimport { arrayFlatten } from '@polkadot/util';\nimport { memo } from \"../util/index.js\";\nconst DEFAULT_FLAGS = {\n  withController: true,\n  withExposure: true,\n  withPrefs: true\n};\n\nfunction combineAccounts(nextElected, validators) {\n  return arrayFlatten([nextElected, validators.filter(v => !nextElected.find(n => n.eq(v)))]);\n}\n\nexport function electedInfo(instanceId, api) {\n  return memo(instanceId, (flags = DEFAULT_FLAGS) => api.derive.staking.validators().pipe(switchMap(({\n    nextElected,\n    validators\n  }) => api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe(map(info => ({\n    info,\n    nextElected,\n    validators\n  }))))));\n}"]},"metadata":{},"sourceType":"module"}