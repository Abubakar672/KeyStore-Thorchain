{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var buffers = [];\n    innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n      var buffer = [];\n      buffers.push(buffer);\n      var closingSubscription = new Subscription();\n\n      var emitBuffer = function () {\n        arrRemove(buffers, buffer);\n        subscriber.next(buffer);\n        closingSubscription.unsubscribe();\n      };\n\n      closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(new OperatorSubscriber(subscriber, emitBuffer, noop)));\n    }, noop));\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      try {\n        for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n          var buffer = buffers_1_1.value;\n          buffer.push(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (buffers.length > 0) {\n        subscriber.next(buffers.shift());\n      }\n\n      subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":";AAAA,SAAS,YAAT,QAA6B,iBAA7B;AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AA8CA,OAAM,SAAU,YAAV,CACJ,QADI,EAEJ,eAFI,EAE+C;AAEnD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAM,OAAO,GAAU,EAAvB;AAGA,IAAA,SAAS,CAAC,QAAD,CAAT,CAAoB,SAApB,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,SAAD,EAAU;AACR,UAAM,MAAM,GAAQ,EAApB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AAGA,UAAM,mBAAmB,GAAG,IAAI,YAAJ,EAA5B;;AAEA,UAAM,UAAU,GAAG,YAAA;AACjB,QAAA,SAAS,CAAC,OAAD,EAAU,MAAV,CAAT;AACA,QAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;AACA,QAAA,mBAAmB,CAAC,WAApB;AACD,OAJD;;AAOA,MAAA,mBAAmB,CAAC,GAApB,CAAwB,SAAS,CAAC,eAAe,CAAC,SAAD,CAAhB,CAAT,CAAsC,SAAtC,CAAgD,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAnC,EAA+C,IAA/C,CAAhD,CAAxB;AACD,KAjBH,EAkBE,IAlBF,CADF;AAuBA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,KAAD,EAAM;;;;AAEJ,aAAqB,IAAA,SAAA,GAAA,QAAA,CAAA,OAAA,CAAA,EAAO,WAAA,GAAA,SAAA,CAAA,IAAA,EAA5B,EAA4B,CAAA,WAAA,CAAA,IAA5B,EAA4B,WAAA,GAAA,SAAA,CAAA,IAAA,EAA5B,EAA8B;AAAzB,cAAM,MAAM,GAAA,WAAA,CAAA,KAAZ;AACH,UAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD;;;;;;;;;;;;AACF,KAPH,EAQE,YAAA;AAEE,aAAO,OAAO,CAAC,MAAR,GAAiB,CAAxB,EAA2B;AACzB,QAAA,UAAU,CAAC,IAAX,CAAgB,OAAO,CAAC,KAAR,EAAhB;AACD;;AACD,MAAA,UAAU,CAAC,QAAX;AACD,KAdH,CADF;AAkBD,GA7Ca,CAAd;AA8CD","sourceRoot":"","sourcesContent":["import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var buffers = [];\n        innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n            var buffer = [];\n            buffers.push(buffer);\n            var closingSubscription = new Subscription();\n            var emitBuffer = function () {\n                arrRemove(buffers, buffer);\n                subscriber.next(buffer);\n                closingSubscription.unsubscribe();\n            };\n            closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(new OperatorSubscriber(subscriber, emitBuffer, noop)));\n        }, noop));\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            try {\n                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n                    var buffer = buffers_1_1.value;\n                    buffer.push(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (buffers.length > 0) {\n                subscriber.next(buffers.shift());\n            }\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=bufferToggle.js.map"]},"metadata":{},"sourceType":"module"}